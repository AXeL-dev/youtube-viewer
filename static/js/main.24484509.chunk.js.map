{"version":3,"sources":["helpers/utils.ts","helpers/storage.ts","helpers/youtube.ts","models/Channel.ts","components/shared/RawHTML.tsx","components/channel/SearchChannelInput.tsx","components/video/Media.tsx","helpers/debug.ts","components/video/VideoGrid.tsx","models/Settings.ts","components/video/MultiVideoGrid.tsx","components/shared/ConfirmationDialog.tsx","components/shared/ImportDialog.tsx","components/shared/MoveToPositionDialog.tsx","helpers/parser.ts","helpers/browser.ts","components/channel/ChannelList.tsx","helpers/download.ts","components/shared/MessageSnackbar.tsx","components/settings/SettingsDialog.tsx","components/shared/CustomSnackbar.tsx","components/Popup.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["niceDuration","ISO_8601_string","time","replace","toUpperCase","h","extract","m","s","join","stop","i","length","val","slice","shortenLargeNumber","num","decimal","digits","units","Math","pow","toFixed","TimeAgo","self","prefix","sufix","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","timeAgo","floor","Date","parseInt","separator","locales","words","interval","intervals","distance","key","trim","getDateBefore","before","date","setDate","getDate","isInToday","timestamp","setHours","diffHours","dt1","dt2","diff","getTime","abs","round","getFromStorage","promises","keys","forEach","push","__get","Promise","all","resolve","reject","browser","storage","local","get","then","error","finalValue","value","localStorage","getItem","JSON","parse","saveToStorage","values","Object","set","stringify","setItem","__save","apiKey","process","apiRequest","a","settings","url","window","fetch","response","ok","json","Error","errors","reason","message","status","setApiKey","action","apiArgs","makeRequest","param","URLSearchParams","toString","apiUrl","getChannelActivities","channelId","after","part","publishedAfter","toISOString","maxResults","Symbol","getVideoInfo","videoIdList","joinedIds","fields","id","items","map","item","title","snippet","duration","contentDetails","views","count","statistics","viewCount","asString","publishedAt","thumbnail","thumbnails","medium","channelTitle","ChannelSelection","RawHTML","children","className","dangerouslySetInnerHTML","__html","useStyles","makeStyles","theme","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","breakpoints","up","spacing","searchIcon","height","pointerEvents","display","alignItems","justifyContent","clearButton","right","top","margin","color","inputRoot","inputInput","padding","transition","transitions","create","poper","zIndex","overflow","boxShadow","listbox","border","listStyle","background","paper","maxHeight","cursor","avatar","text","secondary","marginRight","SearchChannelInput","props","onSelect","onError","classes","React","useState","inputValue","setInputValue","options","setOptions","useAutocomplete","getOptionLabel","option","getRootProps","getInputProps","getListboxProps","getOptionProps","groupedOptions","useMemo","throttle","input","callback","query","max","type","order","q","responseJson","payLoad","pageInfo","totalResults","howMany","min","description","searchChannel","results","catch","useEffect","active","InputBase","placeholder","root","inputProps","onChange","event","target","IconButton","aria-label","size","onClick","fontSize","index","Grid","container","Avatar","alt","src","xs","Typography","variant","RegExp","Media","style","anchor","textDecoration","imageContainer","image","bottom","Link","href","rel","Box","pr","mt","gutterBottom","inWords","debug","params","warn","VideoGrid","videos","loading","maxPerChannel","maxSkeletons","onVideoClick","preventLongPress","setPreventLongPress","handleMouseEvent","setTimeout","stopPropagation","preventDefault","minWidth","onMouseDown","onClickCapture","Array","from","marginBottom","draggable","Fragment","Skeleton","pt","SettingsType","breadcrumb","divider","link","outline","youtube","box","MultiVideoGrid","useTheme","channels","onSave","onRefresh","expandedChannelsIndexes","setExpandedChannelsIndexes","channel","isHidden","channelVideos","filter","video","hideEmptyChannels","Breadcrumbs","openChannelsOnNameClick","onChannelNameClick","Tooltip","c","hideChannel","indexOf","edge","Divider","ConfirmationDialog","open","confirmButtonText","cancelButtonText","onClose","onConfirm","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","ImportDialog","textFieldId","textFieldLabel","onValidate","textFieldError","setTextFieldError","close","TextField","label","multiline","rows","fullWidth","document","getElementById","data","isValid","MoveToPositionDialog","step","positionFieldId","positionFieldLabel","positionFieldError","setPositionFieldError","defaultValue","isNaN","test","isWebExtension","createTab","isActive","tabs","isFirefox","navigator","userAgent","createStyles","channelsOptionsIcon","transform","menuIcon","verticalAlign","subheader","ChannelList","selectedIndex","All","cacheSize","todaysVideosCount","recentVideosCount","onShowAll","onShowTodaysVideos","onShowRecentVideos","onDelete","onSelectedIndexChange","onClearCache","onClearRecentVideos","onImport","openDeleteChannelDialog","setOpenDeleteChannelDialog","channelToDelete","setChannelToDelete","channelToDeleteIndex","setChannelToDeleteIndex","anchorEl","setAnchorEl","openedMenuIndex","setOpenedMenuIndex","openClearCacheDialog","setOpenClearCacheDialog","openClearRecentVideosDialog","setOpenClearRecentVideosDialog","openImportChannelsDialog","setOpenImportChannelsDialog","moveToPositionChannelIndex","setMoveToPositionChannelIndex","getSelectedChannel","find","_","moveChannel","indexFrom","indexTo","closeMenu","selectedChannel","list","startIndex","endIndex","result","splice","removed","reorder","closeDeleteChannelDialog","setChannel","None","openMenu","currentTarget","closeClearCacheDialog","exportChannels","blob","filename","msSaveOrOpenBlob","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","Blob","closeImportChannelsDialog","closeMoveChannelToPositionDialog","closeClearRecentVideosDialog","onDragEnd","destination","source","droppableId","provided","snapshot","RootRef","rootRef","innerRef","List","dense","ListSubheader","keepMounted","MenuItem","isDraggingOver","ListItem","button","selected","ListItemIcon","Badge","badgeContent","ListItemText","primary","ListItemSecondaryAction","refreshAll","TodaysVideos","refreshTodaysVideos","RecentVideos","refreshRecentVideos","draggableId","ContainerProps","ref","draggableProps","dragHandleProps","isDragging","draggableStyle","opacity","openChannel","refreshChannel","channelIndex","unhideChannel","deleteChannel","channelsList","MessageSnackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Snackbar","settingsAppBar","settingsTitle","flex","select","textShadow","optionLabel","maxWidth","settingsDialogTransition","forwardRef","Slide","direction","SettingsDialog","validateSettings","match","fullScreen","TransitionComponent","AppBar","Toolbar","Select","native","defaultChannelSelection","videosPerChannel","videosAnteriority","sortVideosBy","component","minLength","autoVideosCheckRate","Switch","defaultChecked","enableRecentVideosNotifications","autoPlayVideos","openVideosInInactiveTabs","autoClearRecentVideos","autoClearCache","CustomSnackbar","minHeight","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","grow","flexGrow","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","centered","alignSelf","textAlign","heartIcon","madeWithLove","Popup","setChannels","setVideos","openDrawer","setOpenDrawer","isReady","setIsReady","isLoading","setIsLoading","selectedChannelIndex","setSelectedChannelIndex","setSettings","openSettingsDialog","setOpenSettingsDialog","snackbarMessage","setSnackbarMessage","lastError","setLastError","cache","setCache","setRecentVideosCount","setTodaysVideosCount","showChannelSelection","totalRecentVideosCount","totalTodaysVideosCount","recentVideosCountPerChannel","isRecent","todaysVideosCountPerChannel","recent","todays","displayError","console","getChannelVideos","ignoreCache","videosIds","upload","videoId","cacheVideosIds","recentVideosIds","videosData","now","videoDate","sort","b","selectChannel","scrollTo","fetchChannelsVideos","selection","filterFunction","customChannels","promise","newVideos","finally","showAllChannels","showTodaysVideos","showRecentVideos","refreshChannels","undefined","closeSettings","getSettingsValue","element","Number","Boolean","checked","String","openVideo","videoUrl","tab","tabId","code","executeScript","CssBaseline","clsx","noWrap","found","openSettings","Drawer","obj","bytes","formatByteSize","sizeOf","objClass","prototype","call","hasOwnProperty","memorySizeOf","align","icon","getNotHiddenChannelsCount","distanceToRefresh","resistance","Fade","in","timeout","App","state","updateState","browserAction","setBadgeText","this","cacheHasChanged","setState","Component","location","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24484509.chunk.js","sourcesContent":["\n/**\n * Convert youtube duration to readable format\n * \n * @param ISO_8601_string {string}\n */\nexport function niceDuration (ISO_8601_string: string) {\n  let time = ISO_8601_string.replace(\"PT\", \"\").toUpperCase();\n  let h = extract('H');\n  let m = extract('M');\n  let s = extract('S');\n  return h !== '00' ? [h, m, s].join(':') : [m, s].join(':');\n\n  function extract (stop: string) {\n      for (let i = 0; i < time.length; i++) {\n          if (time[i] === stop) {\n              let val = time.slice(0, i);\n              if (val.length === 1 && stop !== 'H') {\n                  val = '0' + val;\n              }\n              time = time.slice(i + 1);\n              return val;\n          }\n      }\n      return '00';\n  }\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Shorten number to thousands, millions, billions, etc.\n * http://en.wikipedia.org/wiki/Metric_prefix\n *\n * @param {number} num Number to shorten.\n * @param {number} [digits=0] The number of digits to appear after the decimal point.\n * @returns {string|number}\n *\n * @example\n * // returns '12.5k'\n * shortenLargeNumber(12543, 1)\n *\n * @example\n * // returns '-13k'\n * shortenLargeNumber(-12567)\n *\n * @example\n * // returns '51M'\n * shortenLargeNumber(51000000)\n *\n * @example\n * // returns 651\n * shortenLargeNumber(651)\n *\n * @example\n * // returns 0.12345\n * shortenLargeNumber(0.12345)\n */\nexport function shortenLargeNumber(num: number, digits: number = 0) {\n  let units = ['k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'],\n      decimal;\n\n  for(let i=units.length-1; i>=0; i--) {\n      decimal = Math.pow(1000, i+1);\n\n      if(num <= -decimal || num >= decimal) {\n          return +(num / decimal).toFixed(digits) + units[i];\n      }\n  }\n\n  return num;\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return Date & time in words\n * Stolen from: https://stackoverflow.com/a/37802747\n */\nexport const TimeAgo = (() => {\n  let self: any = {};\n\n  // Public Methods\n  self.locales = {\n    prefix: '',\n    sufix:  'ago',\n    \n    seconds: 'less than a minute',\n    minute:  'about a minute',\n    minutes: '%d minutes',\n    hour:    'about an hour',\n    hours:   'about %d hours',\n    day:     'a day',\n    days:    '%d days',\n    month:   'about a month',\n    months:  '%d months',\n    year:    'about a year',\n    years:   '%d years'\n  };\n  \n  self.inWords = (timeAgo: any) => {\n    let seconds = Math.floor((new Date() as any - parseInt(timeAgo)) / 1000),\n        separator = self.locales.separator || ' ',\n        words = self.locales.prefix + separator,\n        interval = 0,\n        intervals: any = {\n          year:   seconds / 31536000,\n          month:  seconds / 2592000,\n          day:    seconds / 86400,\n          hour:   seconds / 3600,\n          minute: seconds / 60\n        };\n    \n    let distance = self.locales.seconds;\n    \n    for (let key in intervals) {\n      interval = Math.floor(intervals[key]);\n      \n      if (interval > 1) {\n        distance = self.locales[key + 's'];\n        break;\n      } else if (interval === 1) {\n        distance = self.locales[key];\n        break;\n      }\n    }\n    \n    distance = distance.replace(/%d/i, interval);\n    words += distance + separator + self.locales.sufix;\n\n    return words.trim();\n  };\n  \n  return self;\n})();\n\n// -------------------------------------------------------------------\n\n/**\n * Return current date minus number of days before\n * \n * @param before {number}\n */\nexport function getDateBefore(before: number = 0): Date {\n  let date = new Date();\n  date.setDate(date.getDate() - before);\n  return date;\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Check if the given timestamp is in today's date\n * Stolen from: https://stackoverflow.com/a/40628566\n * \n * @param timestamp \n */\nexport function isInToday(timestamp: number) {\n  let today = new Date();\n  if (today.setHours(0, 0, 0, 0) === new Date(timestamp).setHours(0, 0, 0, 0)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Returns hours difference between two dates\n * Stolen from: https://www.w3resource.com/javascript-exercises/javascript-date-exercise-45.php\n * \n * @param dt1 \n * @param dt2 \n */\nexport function diffHours(dt1: Date, dt2: Date): number {\n  let diff = (dt2.getTime() - dt1.getTime()) / 1000;\n  diff /= (60 * 60);\n  return Math.abs(Math.round(diff));\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return a new RegExp object instance\n * \n * @param pattern \n * @param modifiers \n */\nexport function getRegex(pattern: string, modifiers: string): RegExp {\n  return new RegExp(pattern, modifiers);\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return size of an object\n * Stolen from: https://gist.github.com/zensh/4975495\n * \n * @param obj \n */\nexport function memorySizeOf(obj: any) {\n  var bytes = 0;\n\n  function sizeOf(obj: any) {\n      if(obj !== null && obj !== undefined) {\n          switch(typeof obj) {\n          case 'number':\n              bytes += 8;\n              break;\n          case 'string':\n              bytes += obj.length * 2;\n              break;\n          case 'boolean':\n              bytes += 4;\n              break;\n          case 'object':\n              var objClass = Object.prototype.toString.call(obj).slice(8, -1);\n              if(objClass === 'Object' || objClass === 'Array') {\n                  for(var key in obj) {\n                      if(!obj.hasOwnProperty(key)) continue;\n                      sizeOf(obj[key]);\n                  }\n              } else bytes += obj.toString().length * 2;\n              break;\n          }\n      }\n      return bytes;\n  }\n\n  function formatByteSize(bytes: number) {\n      if(bytes < 1024) return bytes + \" bytes\";\n      else if(bytes < 1048576) return(bytes / 1024).toFixed(3) + \" KiB\";\n      else if(bytes < 1073741824) return(bytes / 1048576).toFixed(3) + \" MiB\";\n      else return(bytes / 1073741824).toFixed(3) + \" GiB\";\n  }\n\n  return formatByteSize(sizeOf(obj));\n}\n","//import { browser } from \"webextension-polyfill-ts\";\n\ndeclare var browser: any;\n\n/**\n * Get data from storage\n * \n * EX: getFromStorage('key1', 'key2', ...)\n * \n * @param keys \n */\nexport function getFromStorage(...keys: string[]): Promise<any> {\n  let promises: Promise<any>[] = [];\n  keys.forEach((key: string) => {\n    promises.push(__get(key));\n  });\n  return Promise.all(promises);\n}\n\nfunction __get(key: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    try {\n      browser.storage.local.get(key).then((storage: any) => {\n        resolve(storage[key]);\n      });\n    }\n    catch(error) {\n      //console.log(error.message);\n      const value: any = localStorage.getItem(key);\n      let finalValue: any;\n      try {\n        finalValue = JSON.parse(value);\n      }\n      catch(error) {\n        finalValue = value;\n      }\n      resolve(finalValue);\n    }\n  });\n}\n\n/**\n * Save data to storage\n * \n * EX: saveToStorage({ key1: value1, key2: value2, ... })\n * \n * @param values \n */\nexport function saveToStorage(values: {[key: string]: any}): Promise<any> {\n  let promises: Promise<any>[] = [];\n  Object.keys(values).forEach((key: string) => {\n    promises.push(__save(key, values[key]));\n  });\n  return Promise.all(promises);\n}\n\nfunction __save(key: string, value: any): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      browser.storage.local.set({[key]: value}).then(() => {\n        resolve();\n      });\n    }\n    catch(error) {\n      //console.log(error.message);\n      let finalValue: any;\n      try {\n        finalValue = JSON.stringify(value);\n      }\n      catch(error) {\n        finalValue = value;\n      }\n      localStorage.setItem(key, finalValue);\n      resolve();\n    }\n  });\n}\n","/*\nThis Source Code Form is subject to the terms of the\nMozilla Public License, v. 2.0.\nIf a copy of the MPL was not distributed with this file,\nYou can obtain one at http://mozilla.org/MPL/2.0/.\nAuthor(s): XrXr, AXeL-dev\n\nThis module provide functions for making api certain YouTube Data API V3\nrequests. All functions return promise.\n*/\n\nimport { niceDuration, shortenLargeNumber } from './utils';\nimport { getFromStorage } from './storage';\n\nlet apiKey = process.env.REACT_APP_YOUTUBE_API_KEY;\n\n/**\n * Send API requests to youtube\n */\nconst apiRequest = (() => {\n    async function setApiKey() {\n        const [settings] = await getFromStorage('settings');\n        apiKey = settings?.apiKey?.length ? settings.apiKey : apiKey;\n    }\n\n    async function makeRequest (url: string) {\n        let response = await window.fetch(url);\n        //console.log(`HTTP ${response.status}: ${response.url}`);\n        if (!response.ok) {\n            const json = await response.json();\n            //console.log(json);\n            throw Error(json?.error?.errors[0] ? `<strong>${json.error.errors[0].reason}</strong>: ${json.error.errors[0].message.replace(/<\\/?[^>]+(>|$)/g, '')}` : `HTTP ${response.status}: ${response.url}`);\n        }\n        return await response.json();\n    }\n\n    function apiUrl (action: string, param: any) {\n        let url = \"https://www.googleapis.com/youtube/v3/\" + action + '?';\n        url += new URLSearchParams({...param, key: apiKey }).toString();\n        return url;\n    }\n\n    setApiKey();\n\n    return (action: string, apiArgs: any) => makeRequest(apiUrl(action, apiArgs));\n})();\n\n/**\n * Request a channel's activities after a date\n * Return a promise that resolves to api response\n * \n * @param channelId \n * @param after \n */\nfunction getChannelActivities (channelId: string, after: Date = new Date()) {\n    return apiRequest(\"activities\", {\n        part: \"snippet,contentDetails\",\n        channelId: channelId,\n        publishedAfter: after.toISOString(),\n        maxResults: 50\n    });\n}\n\n/**\n * Return video duration\n * \n * @param videoId \n */\nconst VIDEO_DOES_NOT_EXIST = Symbol(\"Video does not exist\");\nfunction getDuration (videoId: string) {\n    return apiRequest(\"videos\", {\n        part: \"contentDetails\",\n        fields: \"items/contentDetails/duration\",\n        id: videoId,\n    }).then(json => {\n        if (json.items.length === 0) {\n            throw VIDEO_DOES_NOT_EXIST;\n        }\n        return {\n            videoId,\n            duration: niceDuration(json.items[0].contentDetails.duration)\n        };\n    });\n}\n\n/**\n * Return video tags & duration\n * \n * @param videoId \n */\nfunction getTagsAndDuration (videoId: string) {\n    return apiRequest(\"videos\", {\n        part: \"snippet,contentDetails\",\n        fields: \"items/contentDetails/duration,items/snippet/tags\",\n        id: videoId,\n    }).then(res => {\n        res = res.items[0];\n        return {\n            duration: niceDuration(res.contentDetails.duration),\n            tags: (res.snippet && res.snippet.tags) || []\n        };\n    });\n}\n\n/**\n * Return video informations\n * \n * @param videoIdList \n */\nfunction getVideoInfo (videoIdList: string[]) {\n    let joinedIds = videoIdList.join(\",\");\n    return apiRequest(\"videos\", {\n        part: \"snippet,contentDetails,statistics,id\",\n        fields: \"items(id,contentDetails/duration,statistics/viewCount,snippet(title,channelTitle,channelId,publishedAt,thumbnails/medium))\",\n        id: joinedIds,\n        maxResults: 50, // not working when id is filled (which is the case here)\n    }).then(response => {\n        //console.log(response);\n        return response.items.map((item: any) => ({\n            id: item.id,\n            title: item.snippet.title,\n            url: 'https://www.youtube.com/watch?v=' + item.id,\n            duration: niceDuration(item.contentDetails.duration),\n            views: {\n                count: item.statistics.viewCount,\n                asString: shortenLargeNumber(item.statistics.viewCount),\n            },\n            publishedAt: new Date(item.snippet.publishedAt).getTime(),\n            thumbnail: item.snippet.thumbnails.medium.url,\n            channelId: item.snippet.channelId,\n            channelTitle: item.snippet.channelTitle,\n        }));\n    });\n}\n\n//getVideoInfo.batch_size = 50;\n\n/**\n * Request to search channel matching `query`. Return a promise that will\n * resolve to either [] or [channels]\n * \n * @param query \n * @param max \n */\nfunction searchChannel (query: string, max: number = 3) {\n    return apiRequest(\"search\", {\n        part: \"snippet\",\n        type: \"channel\",\n        order: \"relevance\",\n        q: query\n    }).then(responseJson => {\n        //console.log(responseJson);\n        let payLoad: any = [];\n        if (responseJson.pageInfo.totalResults > 0) {\n            const howMany = Math.min(responseJson.pageInfo.totalResults, max);\n            for (let i = 0; i < howMany; i++) {\n                if (responseJson.items[i]) {\n                    payLoad.push({\n                        title: responseJson.items[i].snippet.title,\n                        url: 'https://www.youtube.com/channel/' + responseJson.items[i].id.channelId + '/videos',\n                        description: responseJson.items[i].snippet.description,\n                        thumbnail: responseJson.items[i].snippet.thumbnails.medium.url,\n                        id: responseJson.items[i].id.channelId\n                    });\n                }\n            }\n        }\n        return payLoad;\n    });\n}\n\nexport {\n    searchChannel,\n    getDuration,\n    getChannelActivities,\n    getTagsAndDuration,\n    getVideoInfo,\n    VIDEO_DOES_NOT_EXIST,\n};\n","\nexport interface Channel {\n  id: string,\n  thumbnail: string,\n  title: string,\n  url: string,\n  description: string,\n  isHidden: boolean\n}\n\nexport enum ChannelSelection {\n  All = -1,\n  None = -2,\n  RecentVideos = -3,\n  TodaysVideos = -4\n}\n","import React from 'react';\n\n// Stolen from: https://stackoverflow.com/a/45810395\nexport const RawHTML = ({children, className = ''}: any): any =>\n  <span className={className} dangerouslySetInnerHTML={{ __html: children.replace(/\\n/g, '<br />')}} />\n","import React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme, fade } from '@material-ui/core/styles';\nimport throttle from 'lodash/throttle';\nimport { searchChannel } from '../../helpers/youtube';\nimport Avatar from '@material-ui/core/Avatar';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Channel } from '../../models/Channel';\nimport { getRegex } from '../../helpers/utils';\nimport { RawHTML } from '../shared/RawHTML';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(6),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  clearButton: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    margin: theme.spacing(0.75),\n    color: theme.palette.common.white,\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 4, 1, 6),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 200,\n      '&:focus': {\n        width: 260,\n      },\n    },\n  },\n  poper: {\n    position: 'absolute',\n    width: '100%',\n    zIndex: 1,\n    margin: '4px 0',\n    overflow: 'hidden',\n    borderRadius: '4px',\n    boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n  },\n  listbox: {\n    position: 'relative',\n    margin: 0,\n    padding: '8px 0',\n    border: 'none',\n    listStyle: 'none',\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: '40vh',\n    '& li': {\n      padding: '6px 16px'\n    },\n    '& li[data-focus=\"true\"]': {\n      backgroundColor: 'rgba(0, 0, 0, 0.08)',\n      cursor: 'pointer',\n    },\n    '& li:active': {\n      backgroundColor: 'rgba(0, 0, 0, 0.14)'\n    },\n  },\n  avatar: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n}));\n\ninterface SearchProps {\n  onSelect: Function;\n  onError: Function;\n}\n\nexport default function SearchChannelInput(props: SearchProps) {\n  const { onSelect, onError } = props;\n  const classes = useStyles();\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState<Channel[]>([]);\n  const {\n    getRootProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n  } = useAutocomplete({\n    id: 'search-autocomplete',\n    options: options,\n    getOptionLabel: option => {\n      //console.log(option);\n      if (option?.title) {\n        setInputValue(option.title);\n        return option.title;\n      }\n      return option;\n    },\n    value: inputValue,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const fetch = React.useMemo(\n    () =>\n      throttle((input: any, callback: Function) => {\n        //console.log(input);\n        searchChannel(input.value, 5).then((results: Channel[]) => {\n          //console.log(results);\n          callback(results);\n        }).catch((error) => {\n          onError(error);\n        });\n      }, 200),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (inputValue === '') {\n      setOptions([]);\n      return undefined;\n    }\n\n    fetch({ value: inputValue }, (results?: Channel[]) => {\n      if (active) {\n        setOptions(results || []);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [inputValue, fetch]);\n\n  return (\n    <div className={classes.search}>\n      <div {...getRootProps()}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Search for a channel…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ ...getInputProps(), 'aria-label': 'search' }}\n          onChange={handleChange}\n        />\n        {inputValue?.length > 0 && (\n          <IconButton aria-label=\"clear\" size=\"small\" className={classes.clearButton} onClick={() => setInputValue('')}>\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        )}\n      </div>\n      {groupedOptions.length > 0 ? (\n        <div className={classes.poper}>\n          <ul className={classes.listbox} {...getListboxProps()}>\n            {groupedOptions.map((option, index) => (\n              <li {...getOptionProps({ option, index })}>\n                <Grid container alignItems=\"center\" onClick={() => onSelect(option)}>\n                  <Grid item>\n                    <Avatar className={classes.avatar} alt={option.title} src={option.thumbnail} />\n                  </Grid>\n                  <Grid item xs>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      <RawHTML>{option.title.replace(getRegex('(' + inputValue + ')', 'gi'), `<strong>$1</strong>`)}</RawHTML>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Video } from '../../models/Video';\nimport { TimeAgo } from '../../helpers/utils';\n\ninterface MediaProps {\n  item: Video;\n  onClick: Function;\n}\n\nexport default function Media(props: MediaProps) {\n  const { item, onClick } = props;\n  const style = {\n    anchor: {\n      textDecoration: 'none',\n      color: 'inherit',\n      display: 'inline-block'\n    },\n    imageContainer: {\n      position: 'relative'\n    } as React.CSSProperties,\n    image: {\n      width: 210,\n      height: 118,\n      display: 'inherit'\n    },\n    duration: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      margin: '4px',\n      color: '#fff',\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      padding: '2px 4px',\n      borderRadius: '2px'\n    } as React.CSSProperties\n  };\n\n  return (\n    <Link href={item.url} style={style.anchor} target=\"_blank\" rel=\"noopener\" onClick={(event: any) => onClick(event)}>\n      <Box style={style.imageContainer}>\n        <img style={style.image} alt=\"\" src={item.thumbnail} />\n        <Typography variant=\"caption\" style={style.duration}>\n          {item.duration}\n        </Typography>\n      </Box>\n      <Box pr={2} mt={1}>\n        <Typography gutterBottom variant=\"body2\">\n          {item.title}\n        </Typography>\n        <Typography display=\"block\" variant=\"caption\" color=\"textSecondary\">\n          {item.channelTitle}\n        </Typography>\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          {`${item.views.asString || item.views} • ${TimeAgo.inWords(item.publishedAt)}`}\n        </Typography>\n      </Box>\n    </Link>\n  );\n}\n","// no need to import process Object since it will be defined by create-react-app\n\nexport const isDevEnv: boolean = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\nexport function debug(message: any, ...params: any) {\n  isDevEnv && console.log(message, ...params);\n}\n\nexport function warn(message: any, ...params: any) {\n  isDevEnv && console.warn(message, ...params);\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Video } from '../../models/Video';\nimport Media from './Media';\nimport { debug } from '../../helpers/debug';\n\ninterface VideoGridProps {\n  loading?: boolean;\n  videos: Video[];\n  maxPerChannel?: number;\n  maxSkeletons?: number;\n  onVideoClick: Function;\n}\n\nexport default function VideoGrid(props: VideoGridProps) {\n  const { videos, loading = false, maxPerChannel = 9, maxSkeletons = 9, onVideoClick } = props;\n  const [preventLongPress, setPreventLongPress] = React.useState(false);\n  const style = {\n    grid: {\n      minWidth: '428px'\n    }\n  };\n\n  const handleMouseEvent = (event: any) => {\n    debug(event.type, { preventLongPress: preventLongPress });\n    if (event.type === 'mousedown') {\n      setPreventLongPress(false); // always reset preventLongPress state on mousedown\n      setTimeout(() => {\n        // delay of 200 ms used here to wait for the click event\n        // if it fires immediately after the mousedown event then preventLongPress value will be false, otherwise it's probably a long press click\n        setPreventLongPress(true);\n      }, 200);\n    } else {\n      if (!preventLongPress) {\n        return true;\n      }\n      setPreventLongPress(false);\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    return false;\n  };\n\n  return (\n    <Grid container style={style.grid} onMouseDown={(event: any) => handleMouseEvent(event)} onClickCapture={(event: any) => handleMouseEvent(event)}>\n      {(loading ? Array.from(new Array(Math.min(maxPerChannel, maxSkeletons))) : videos.slice(0, maxPerChannel)).map((item, index) => (\n        <Box key={index} width={210} marginRight={0.5} marginBottom={3} draggable=\"false\">\n          {item ? (\n            <Media item={item} onClick={onVideoClick}></Media>\n          ) : (\n            <React.Fragment>\n              <Skeleton variant=\"rect\" width={210} height={118} />\n              <Box pt={0.5}>\n                <Skeleton />\n                <Skeleton width=\"60%\" />\n              </Box>\n            </React.Fragment>\n          )}\n        </Box>\n      ))}\n    </Grid>\n  );\n}\n","import { ChannelSelection } from \"./Channel\";\n\nexport interface Settings {\n  defaultChannelSelection: ChannelSelection,\n  videosPerChannel: number,\n  videosAnteriority: number,\n  sortVideosBy: string,\n  apiKey?: string,\n  autoVideosCheckRate: number,\n  enableRecentVideosNotifications: boolean,\n  autoPlayVideos: boolean,\n  openVideosInInactiveTabs: boolean,\n  openChannelsOnNameClick: boolean,\n  hideEmptyChannels: boolean,\n  autoClearRecentVideos: boolean,\n  autoClearCache: boolean,\n}\n\nexport enum SettingsType {\n  String,\n  Number,\n  Boolean\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport Link from '@material-ui/core/Link';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Video } from '../../models/Video';\nimport { Channel } from '../../models/Channel';\nimport { Settings } from '../../models/Settings';\nimport VideoGrid from './VideoGrid';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  breadcrumb: {\n    marginBottom: theme.spacing(2.5),\n  },\n  divider: {\n    marginBottom: theme.spacing(2.5),\n  },\n  link: {\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    outline: 'none',\n    '&:hover': {\n      backgroundColor: 'transparent'\n    },\n  },\n  title: {\n    marginLeft: theme.spacing(1),\n  },\n  youtube: {\n    '& :hover': {\n      color: '#f44336',\n    },\n  },\n  box: {\n    '& :last-child': {\n      '& hr.divider': {\n        display: 'none'\n      }\n    }\n  }\n}));\n\ninterface MultiVideoGridProps {\n  loading?: boolean;\n  channels: Channel[];\n  videos: Video[];\n  settings: Settings;\n  maxPerChannel?: number;\n  onSelect: Function;\n  onVideoClick: Function;\n  onSave: Function;\n  onRefresh: Function;\n}\n\nexport default function MultiVideoGrid(props: MultiVideoGridProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { channels, videos, settings, loading = false, maxPerChannel = 9, onSelect, onVideoClick, onSave, onRefresh } = props;\n  const [expandedChannelsIndexes, setExpandedChannelsIndexes] = React.useState<number[]>([]);\n\n  const hideChannel = (channel: Channel) => {\n    channels.forEach((c: Channel) => {\n      if (c.id === channel.id) {\n        c.isHidden = true;\n        onSave([...channels]);\n        onRefresh();\n        return;\n      }\n    });\n  };\n\n  const onChannelNameClick = (event: any, channel: Channel, index: number) => {\n    if (!settings?.openChannelsOnNameClick) {\n      event.preventDefault();\n      onSelect(channel, index);\n    }\n  };\n\n  return (\n    <Box overflow=\"hidden\" className={classes.box}>\n      {channels.map((channel: Channel, index: number) => {\n        if (channel.isHidden) {\n          // eslint-disable-next-line\n          return;\n        }\n        const channelVideos: Video[] = videos.filter((video: Video) => video.channelId === channel.id);\n        // hide empty channels\n        if (!loading && settings.hideEmptyChannels && channelVideos.length === 0) {\n          // eslint-disable-next-line\n          return;\n        }\n        return (\n          <Box key={index}>\n            <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumb}>\n              <Link color=\"inherit\" className={classes.link} href={channel.url} target=\"_blank\" rel=\"noopener\" onClick={(event: any) => onChannelNameClick(event, channel, index)}>\n                <Avatar alt={channel.title} src={channel.thumbnail} />\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" className={classes.title}>\n                  {channel.title}\n                </Typography>\n              </Link>\n              {!settings?.openChannelsOnNameClick && \n                <Link color=\"inherit\" className={`${classes.link} ${classes.youtube}`} href={channel.url} target=\"_blank\" rel=\"noopener\">\n                  <Tooltip title=\"Open channel\" aria-label=\"open-channel\">\n                    <YouTubeIcon />\n                  </Tooltip>\n                </Link>\n              }\n              <IconButton size=\"small\" className={classes.link} onClick={() => hideChannel(channel)}>\n                <Tooltip title=\"Hide channel\" aria-label=\"hide-channel\">\n                  <VisibilityOffIcon />\n                </Tooltip>\n              </IconButton>\n            </Breadcrumbs>\n            <VideoGrid videos={expandedChannelsIndexes.indexOf(index) > -1 ? channelVideos : channelVideos.slice(0, 3)} loading={loading} maxPerChannel={maxPerChannel} maxSkeletons={3} onVideoClick={onVideoClick} />\n            {channelVideos.length > 3 && expandedChannelsIndexes.indexOf(index) === -1 &&\n              <Tooltip title=\"Show more\" aria-label=\"show-more\">\n                <IconButton edge=\"end\" aria-label=\"show-more\" size=\"small\" style={{ marginBottom: theme.spacing(2.5) }} onClick={() => setExpandedChannelsIndexes([...expandedChannelsIndexes, index])}>\n                  <MoreHorizIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            }\n            <Divider className={`divider ${classes.divider}`} />\n          </Box>\n      )}\n    )}\n    </Box>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { RawHTML } from './RawHTML';\n\ninterface ConfirmationDialogProps {\n  open: boolean;\n  title: string;\n  description: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n}\n\nexport function ConfirmationDialog(props: ConfirmationDialogProps) {\n  const { open, title, description, confirmButtonText = 'Confirm', cancelButtonText = 'Cancel', onClose, onConfirm } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => onClose()}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n    <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <RawHTML>{description}</RawHTML>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose()} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={() => onConfirm()} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { RawHTML } from './RawHTML';\n\ninterface ImportDialogDialogProps {\n  open: boolean;\n  title: string;\n  description: string;\n  textFieldId: string;\n  textFieldLabel: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n  onValidate: Function;\n}\n\nexport function ImportDialog(props: ImportDialogDialogProps) {\n  const { open, title, description, textFieldId, textFieldLabel, confirmButtonText = 'Import', cancelButtonText = 'Cancel', onClose, onConfirm, onValidate } = props;\n  const [textFieldError, setTextFieldError] = React.useState(false);\n\n  const confirm = () => {\n    try {\n      const json = (document.getElementById(textFieldId) as any).value;\n      const data = JSON.parse(json);\n      const isValid = onValidate(data);\n      setTextFieldError(!isValid); // == false when isValid is true & vise versa\n      if (isValid) {\n        onConfirm(data);\n      }\n    } catch(error) {\n      setTextFieldError(true);\n    }\n  };\n\n  const close = () => {\n    setTextFieldError(false);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={close}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n    <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <RawHTML>{description}</RawHTML>\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id={textFieldId}\n          label={textFieldLabel}\n          error={textFieldError}\n          multiline\n          rows=\"10\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={close} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={confirm} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { isNumber } from '../../helpers/parser';\n\ninterface MoveToPositionDialogProps {\n  open: boolean;\n  title: string;\n  min?: number;\n  max?: number;\n  step?: number;\n  positionFieldId: string;\n  positionFieldLabel: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n}\n\nexport function MoveToPositionDialog(props: MoveToPositionDialogProps) {\n  const { open, title, min = 0, max = 100, step = 1, positionFieldId, positionFieldLabel, confirmButtonText = 'Move', cancelButtonText = 'Cancel', onClose, onConfirm } = props;\n  const [positionFieldError, setPositionFieldError] = React.useState(false);\n\n  const confirm = () => {\n    const position = (document.getElementById(positionFieldId) as any).value;\n    const isValid = isNumber(position);\n    setPositionFieldError(!isValid); // == false when isValid is true & vise versa\n    if (isValid) {\n      onConfirm(+position);\n    }\n  };\n\n  const close = () => {\n    setPositionFieldError(false);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={close}\n      aria-labelledby=\"alert-dialog-title\"\n    >\n    <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          id={positionFieldId}\n          label={positionFieldLabel}\n          error={positionFieldError}\n          inputProps={{ min: min, max: max, step: step }}\n          defaultValue={min}\n          type=\"number\"\n          size=\"small\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={close} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={confirm} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","\nexport function isNumber(value: string) {\n  return !isNaN(+value) && /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/.test(value);\n}\n","//import { browser } from \"webextension-polyfill-ts\";\n\ndeclare var browser: any;\n\nexport function isWebExtension(): boolean {\n  try {\n    return !!browser;\n  } catch(error) {\n    return false;\n  }\n}\n\nexport function createTab(url: string, isActive: boolean = true): Promise<any> {\n  return browser.tabs.create({\n    url: url,\n    active: isActive\n  });\n}\n\nexport function executeScript(tabId: number, code: string): void {\n  browser.tabs.executeScript(\n    tabId, {\n      code: code\n    }\n  );\n}\n\nexport function sendNotification(message: string, type: string|any = 'basic'): void {\n  browser.notifications.create({\n    type: type,\n    title: 'Youtube viewer',\n    iconUrl: 'icons/128.png',\n    message: message\n  });\n}\n\nexport function setBadgeText(text: string|number): void {\n  browser.browserAction.setBadgeText({\n    text: text === 0 ? '' : text.toString()\n  });\n}\n\nexport function setBadgeColors(backgroundColor: string, textColor: string): void {\n  if (isFirefox()) {\n    browser.browserAction.setBadgeTextColor({ color: textColor });\n  }\n  browser.browserAction.setBadgeBackgroundColor({ color: backgroundColor });\n}\n\nexport function getBadgeText(): Promise<string> {\n  return browser.browserAction.getBadgeText({});\n}\n\nexport function isFirefox(): boolean {\n  return navigator.userAgent.indexOf(\"Firefox\") !== -1;\n}\n\nexport function isChrome(): boolean {\n  return navigator.userAgent.indexOf(\"Chrome\") !== -1;\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport RootRef from '@material-ui/core/RootRef';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Channel, ChannelSelection } from '../../models/Channel';\nimport { ConfirmationDialog } from '../shared/ConfirmationDialog';\nimport { ImportDialog } from '../shared/ImportDialog';\nimport { MoveToPositionDialog } from '../shared/MoveToPositionDialog';\nimport { download } from '../../helpers/download';\nimport { isWebExtension, createTab, isFirefox } from '../../helpers/browser';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport ControlCameraIcon from '@material-ui/icons/ControlCamera';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TodayIcon from '@material-ui/icons/Today';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    channelsOptionsIcon: {\n      top: '50%',\n      right: '16px',\n      position: 'absolute',\n      transform: 'translateY(-50%)',\n    },\n    menuIcon: {\n      fontSize: 20,\n      marginRight: theme.spacing(1),\n      verticalAlign: 'middle',\n    },\n    subheader: {\n      position: 'relative',\n    }\n  }),\n);\n\nconst getListStyle = (isDraggingOver: boolean) => ({\n  //background: isDraggingOver ? 'lightblue' : 'lightgrey',\n});\n\nconst getListItemStyle = (isDragging: boolean, isHidden: boolean, draggableStyle: any) => ({\n  // styles we need to apply on draggables\n  ...draggableStyle,\n  ...(isDragging && {\n    background: \"rgb(235,235,235)\"\n  }),\n  ...(isHidden && {\n    opacity: 0.5,\n    textDecoration: \"line-through\"\n  })\n});\n\n// a little function to help us with reordering the dnd result\nconst reorder = (list: any, startIndex: number, endIndex: number) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\ninterface ChannelListProps {\n  channels: Channel[];\n  selectedIndex: number;\n  cacheSize: string;\n  todaysVideosCount: number;\n  recentVideosCount: number;\n  onShowAll: Function;\n  onShowTodaysVideos: Function;\n  onShowRecentVideos: Function;\n  onRefresh: Function;\n  onSelect: Function;\n  onDelete: Function;\n  onSave: Function;\n  onSelectedIndexChange: Function;\n  onClearCache: Function;\n  onClearRecentVideos: Function;\n  onImport: Function;\n}\n\nexport function ChannelList(props: ChannelListProps) {\n  const { channels, selectedIndex = ChannelSelection.All, cacheSize, todaysVideosCount, recentVideosCount, onShowAll, onShowTodaysVideos, onShowRecentVideos, onRefresh, onSelect, onDelete, onSave, onSelectedIndexChange, onClearCache, onClearRecentVideos, onImport } = props;\n  const classes = useStyles();\n  const [openDeleteChannelDialog, setOpenDeleteChannelDialog] = React.useState(false);\n  const [channelToDelete, setChannelToDelete] = React.useState<Channel>();\n  const [channelToDeleteIndex, setChannelToDeleteIndex] = React.useState(0);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openedMenuIndex, setOpenedMenuIndex] = React.useState<number|string>(-1);\n  const [openClearCacheDialog, setOpenClearCacheDialog] = React.useState(false);\n  const [openClearRecentVideosDialog, setOpenClearRecentVideosDialog] = React.useState(false);\n  const [openImportChannelsDialog, setOpenImportChannelsDialog] = React.useState(false);\n  const [moveToPositionChannelIndex, setMoveToPositionChannelIndex] = React.useState<number>(-1);\n\n  const onDragEnd = (result: any) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    moveChannel(result.source.index, result.destination.index);\n  };\n\n  const getSelectedChannel = (): Channel | undefined => channels.find((_, i) => i === selectedIndex);\n\n  const moveChannel = (indexFrom: number, indexTo: number) => {\n    closeMenu();\n    const selectedChannel = getSelectedChannel();\n    const items: Channel[] = reorder(\n      channels,\n      indexFrom,\n      indexTo\n    ) as Channel[];\n    //console.log(items);\n    onSave(items);\n    if (selectedChannel) {\n      onSelectedIndexChange(items.indexOf(selectedChannel));\n    }\n  };\n\n  const deleteChannel = (channel: Channel, index: number) => {\n    closeMenu();\n    setChannelToDelete(channel);\n    setChannelToDeleteIndex(index);\n    setOpenDeleteChannelDialog(true);\n  };\n\n  const confirmDeleteChannel = () => {\n    const selectedChannel = getSelectedChannel();\n    onDelete(channelToDeleteIndex);\n    if (selectedChannel && selectedIndex !== channelToDeleteIndex) {\n      onSelectedIndexChange(channels.filter((_, i) => i !== channelToDeleteIndex).indexOf(selectedChannel));\n    }\n    closeDeleteChannelDialog();\n  };\n\n  const closeDeleteChannelDialog = () => {\n    setOpenDeleteChannelDialog(false);\n  };\n\n  const openChannel = (channel: Channel) => {\n    closeMenu();\n    if (isWebExtension()) {\n      createTab(channel.url);\n    } else {\n      window.open(channel.url, '_blank');\n    }\n  };\n\n  const refreshChannel = (channel: Channel, index: number) => {\n    closeMenu();\n    onSelect(channel, index, true);\n  };\n\n  const setChannel = (channel: Channel, index: number) => {\n    closeMenu();\n    channels[index] = channel;\n    onSave([...channels]);\n    if (selectedIndex < 0 && selectedIndex !== ChannelSelection.None) {\n      onRefresh(selectedIndex);\n    }\n  };\n\n  const hideChannel = (channel: Channel, index: number) => {\n    channel.isHidden = true;\n    setChannel(channel, index);\n  };\n\n  const unhideChannel = (channel: Channel, index: number) => {\n    channel.isHidden = false;\n    setChannel(channel, index);\n  };\n\n  const openMenu = (event: any, index: number|string) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setOpenedMenuIndex(index);\n  };\n\n  const closeMenu = () => {\n    setAnchorEl(null);\n    setOpenedMenuIndex(-1);\n  };\n\n  const confirmClearCache = () => {\n    onClearCache();\n    closeClearCacheDialog();\n  };\n\n  const closeClearCacheDialog = () => {\n    setOpenClearCacheDialog(false);\n  };\n\n  const exportChannels = () => {\n    closeMenu();\n    const data = JSON.stringify(channels, null, 4);\n    const file = new Blob([data], {type: 'text/json'});\n    download(file, 'channels.json');\n  };\n\n  const importChannels = () => {\n    closeMenu();\n    setOpenImportChannelsDialog(true);\n  };\n\n  const closeImportChannelsDialog = () => {\n    setOpenImportChannelsDialog(false);\n  };\n\n  const confirmImportChannels = (channelsList: Channel[]) => {\n    onImport(channelsList);\n    closeImportChannelsDialog();\n  };\n\n  const openMoveChannelToPositionDialog = (channelIndex: number) => {\n    closeMenu();\n    setMoveToPositionChannelIndex(channelIndex);\n  };\n\n  const closeMoveChannelToPositionDialog = () => {\n    setMoveToPositionChannelIndex(-1);\n  };\n\n  const moveChannelToPosition = (position: number) => {\n    const indexTo = position - 1;\n    if (indexTo !== moveToPositionChannelIndex) {\n      moveChannel(moveToPositionChannelIndex, indexTo);\n    }\n    closeMoveChannelToPositionDialog();\n  };\n\n  const validateChannels = (channelsList: Channel[]): boolean => {\n    let isValid = true;\n    channelsList.forEach((channel: Channel) => {\n      if (!channel.id || !channel.title || !channel.thumbnail || !channel.description || !channel.url) {\n        //return false; // not working in foreach loop @see https://medium.com/front-end-weekly/3-things-you-didnt-know-about-the-foreach-loop-in-js-ff02cec465b1\n        isValid = false;\n      }\n    });\n    return isValid;\n  };\n\n  const clearCache = () => {\n    closeMenu();\n    setOpenClearCacheDialog(true);\n  };\n\n  const refreshRecentVideos = (event: any) => {\n    closeMenu();\n    onRefresh(ChannelSelection.RecentVideos, event);\n  };\n\n  const clearRecentVideos = () => {\n    closeMenu();\n    setOpenClearRecentVideosDialog(true);\n  };\n\n  const confirmClearRecentVideos = () => {\n    onClearRecentVideos();\n    closeClearRecentVideosDialog();\n  };\n\n  const closeClearRecentVideosDialog = () => {\n    setOpenClearRecentVideosDialog(false);\n  };\n\n  const refreshAll = (event?: any) => {\n    onRefresh(ChannelSelection.All, event);\n  };\n\n  const refreshTodaysVideos = (event: any) => {\n    closeMenu();\n    onRefresh(ChannelSelection.TodaysVideos, event);\n  };\n\n  return (\n    <React.Fragment>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n        {(provided: any, snapshot: any) => (\n          <RootRef rootRef={provided.innerRef}>\n            <List\n              dense\n              subheader={<ListSubheader className={classes.subheader}>Channels\n                <IconButton edge=\"end\" aria-label=\"channels-options\" size=\"small\" className={classes.channelsOptionsIcon} onClick={(event) => openMenu(event, 'channels-options')}>\n                  <MoreVertIcon fontSize=\"small\" />\n                </IconButton>\n                <Menu\n                  id=\"menu-channels-options\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={openedMenuIndex === 'channels-options'}\n                  onClose={closeMenu}\n                >\n                  <MenuItem onClick={() => exportChannels()}><GetAppIcon className={classes.menuIcon} /> Export</MenuItem>\n                  <MenuItem onClick={() => importChannels()}><ImportExportIcon className={classes.menuIcon} />Import</MenuItem>\n                  <Tooltip title={\"Cache size: \" + cacheSize} aria-label=\"clear-cache\">\n                    <MenuItem onClick={() => clearCache()}><DeleteSweepIcon className={classes.menuIcon} />Clear cache</MenuItem>\n                  </Tooltip>\n                </Menu>\n              </ListSubheader>}\n              style={getListStyle(snapshot.isDraggingOver)}\n            >\n              <ListItem button key=\"all\" selected={selectedIndex === ChannelSelection.All} onClick={() => onShowAll()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={channels.length}>\n                    <Avatar>\n                      <SubscriptionsIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"All\" />\n                {channels?.length > 0 && <ListItemSecondaryAction>\n                  <Tooltip title=\"Refresh\" aria-label=\"refresh\">\n                    <IconButton edge=\"end\" aria-label=\"refresh\" size=\"small\" onClick={(event) => refreshAll(event)}>\n                      <RefreshIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </ListItemSecondaryAction>}\n              </ListItem>\n              <ListItem button key=\"today\" selected={selectedIndex === ChannelSelection.TodaysVideos} onClick={() => onShowTodaysVideos()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={todaysVideosCount}>\n                    <Avatar>\n                      <TodayIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"Today's videos\" />\n                {channels?.length > 0 && <ListItemSecondaryAction>\n                  <Tooltip title=\"Refresh\" aria-label=\"refresh\">\n                    <IconButton edge=\"end\" aria-label=\"refresh\" size=\"small\" onClick={(event) => refreshTodaysVideos(event)}>\n                      <RefreshIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </ListItemSecondaryAction>}\n              </ListItem>\n              <ListItem button key=\"recent\" selected={selectedIndex === ChannelSelection.RecentVideos} onClick={() => onShowRecentVideos()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={recentVideosCount}>\n                    <Avatar>\n                      <AccessTimeIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"Recent videos\" />\n                {channels?.length > 0 && <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" aria-label=\"more\" size=\"small\" onClick={(event) => openMenu(event, ChannelSelection.RecentVideos)}>\n                    <MoreVertIcon fontSize=\"small\" />\n                  </IconButton>\n                  <Menu\n                    id=\"menu-recent-videos\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={openedMenuIndex === ChannelSelection.RecentVideos}\n                    onClose={closeMenu}\n                  >\n                    <MenuItem onClick={(event) => refreshRecentVideos(event)}><RefreshIcon className={classes.menuIcon} /> Refresh</MenuItem>\n                    {recentVideosCount > 0 && <MenuItem onClick={() => clearRecentVideos()}><DeleteIcon className={classes.menuIcon} /> Clear</MenuItem>}\n                  </Menu>\n                </ListItemSecondaryAction>}\n              </ListItem>\n              {channels.map((channel: Channel, index: number) => (\n                <Draggable key={channel.id} draggableId={channel.id} index={index}>\n                {(provided: any, snapshot: any) => (\n                  <ListItem\n                    ContainerProps={{ ref: provided.innerRef }}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getListItemStyle(\n                      snapshot.isDragging,\n                      channel.isHidden,\n                      provided.draggableProps.style\n                    )}\n                    button\n                    selected={index === selectedIndex}\n                    onClick={() => onSelect(channel, index)}\n                  >\n                    <ListItemIcon><Avatar alt={channel.title} src={channel.thumbnail} /></ListItemIcon>\n                    <ListItemText primary={channel.title} />\n                    <ListItemSecondaryAction>\n                      <IconButton edge=\"end\" aria-label=\"more\" size=\"small\" onClick={(event) => openMenu(event, index)}>\n                        <MoreVertIcon fontSize=\"small\" />\n                      </IconButton>\n                      <Menu\n                        id={\"menu-\" + index}\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={openedMenuIndex === index}\n                        onClose={closeMenu}\n                      >\n                        <MenuItem onClick={() => openChannel(channel)}><OpenInNewIcon className={classes.menuIcon} /> Open channel</MenuItem>\n                        <MenuItem onClick={() => refreshChannel(channel, index)}><RefreshIcon className={classes.menuIcon} /> Refresh</MenuItem>\n                        {isWebExtension() && isFirefox() && index > 0 && <MenuItem onClick={() => moveChannel(index, index - 1)}><KeyboardArrowUpIcon className={classes.menuIcon} />Move up</MenuItem>}\n                        {isWebExtension() && isFirefox() && index < channels.length - 1 && <MenuItem onClick={() => moveChannel(index, index + 1)}><KeyboardArrowDownIcon className={classes.menuIcon} />Move down</MenuItem>}\n                        {isWebExtension() && isFirefox() && <MenuItem onClick={() => openMoveChannelToPositionDialog(index)}><ControlCameraIcon className={classes.menuIcon} />Move to position</MenuItem>}\n                        {channel.isHidden ? \n                          <MenuItem onClick={() => unhideChannel(channel, index)}><VisibilityIcon className={classes.menuIcon} /> Unhide</MenuItem> : \n                          <MenuItem onClick={() => hideChannel(channel, index)}><VisibilityOffIcon className={classes.menuIcon} /> Hide</MenuItem>\n                        }\n                        <MenuItem onClick={() => deleteChannel(channel, index)}><DeleteIcon className={classes.menuIcon} /> Delete</MenuItem>\n                      </Menu>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          </RootRef>\n        )}\n        </Droppable>\n      </DragDropContext>\n      <ConfirmationDialog\n        open={openClearCacheDialog}\n        title=\"Clear cache\"\n        description=\"This action is irreversible, would you like to continue?\"\n        confirmButtonText=\"Clear\"\n        onClose={closeClearCacheDialog}\n        onConfirm={confirmClearCache}\n      />\n      <ConfirmationDialog\n        open={openClearRecentVideosDialog}\n        title=\"Clear recent videos\"\n        description=\"Would you like to reset/clear recent videos?\"\n        confirmButtonText=\"Clear\"\n        onClose={closeClearRecentVideosDialog}\n        onConfirm={confirmClearRecentVideos}\n      />\n      <ConfirmationDialog\n        open={openDeleteChannelDialog}\n        title=\"Delete Channel\"\n        description={\"Would you like to delete <strong>\" + channelToDelete?.title + \"</strong> channel?\"}\n        confirmButtonText=\"Delete\"\n        onClose={closeDeleteChannelDialog}\n        onConfirm={confirmDeleteChannel}\n      />\n      <ImportDialog\n        open={openImportChannelsDialog}\n        title=\"Import Channels\"\n        description=\"Copy & paste below the content of <strong>channels.json</strong> file. Notice that your current channels list will be overrided!\"\n        textFieldId=\"channels-to-import\"\n        textFieldLabel=\"Channels (json)\"\n        onClose={closeImportChannelsDialog}\n        onConfirm={confirmImportChannels}\n        onValidate={validateChannels}\n      />\n      <MoveToPositionDialog\n        open={moveToPositionChannelIndex > -1}\n        title=\"Move Channel To Position\"\n        min={1}\n        max={channels.length}\n        positionFieldId=\"channel-position\"\n        positionFieldLabel=\"Position\"\n        onClose={closeMoveChannelToPositionDialog}\n        onConfirm={moveChannelToPosition}\n      />\n    </React.Fragment>\n  )\n}\n","/**\n * Stolen from https://stackoverflow.com/a/44737041\n */\nexport function download(blob: Blob, filename: string) {\n  if (window.navigator.msSaveOrOpenBlob) { // IE10+\n    window.navigator.msSaveOrOpenBlob(blob, filename);\n  } else { // Others\n    let a = document.createElement('a'),\n        url = URL.createObjectURL(blob);\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);  \n    }, 0);\n  }\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport { RawHTML } from './RawHTML';\n\ninterface MessageSnackbarProps {\n  message: string|undefined;\n  open: boolean;\n  onClose: Function;\n  autoHideDuration?: number;\n  anchorOrigin?: any;\n}\n\nexport function MessageSnackbar(props: MessageSnackbarProps) {\n  const { message, open, onClose, autoHideDuration = 6000, anchorOrigin = { vertical: 'top', horizontal: 'center' } } = props;\n\n  return (\n    <Snackbar\n      anchorOrigin={anchorOrigin}\n      open={open}\n      autoHideDuration={autoHideDuration}\n      onClose={() => onClose()}\n      message={message && <RawHTML>{message}</RawHTML>}\n      action={\n        <Button color=\"secondary\" size=\"small\" onClick={() => onClose()}>\n          Close\n        </Button>\n      }\n    />\n  )\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport Slide from '@material-ui/core/Slide';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport Link from '@material-ui/core/Link';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport { Settings } from '../../models/Settings';\nimport { ChannelSelection } from '../../models/Channel';\nimport { isWebExtension } from '../../helpers/browser';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    settingsAppBar: {\n      position: 'relative',\n      backgroundColor: '#f44336',\n    },\n    settingsTitle: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    container: {\n      width: '223px',\n      height: '40px',\n    },\n    select: {\n      padding: '10px 26px 10px 12px',\n      '&:-moz-focusring': { // removes the ugly dotted outline around the selected option in Firefox\n        color: 'transparent',\n        textShadow: '0 0 0 #000',\n      },\n    },\n    optionLabel: {\n      maxWidth: '70%',\n    },\n  }),\n);\n\nconst settingsDialogTransition = React.forwardRef<unknown, TransitionProps>(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface SettingsDialogProps {\n  settings: Settings;\n  open: boolean;\n  onClose: Function;\n  onSave: Function;\n}\n\nexport function SettingsDialog(props: SettingsDialogProps) {\n  const { settings, open, onClose, onSave } = props;\n  const classes = useStyles();\n\n  const validateSettings = (event: any) => {\n    let input = event.target;\n    //console.log(input.type, input.min, input.max, input.value);\n    if (input.type === \"number\") {\n      if (!input.value.match(/^\\d+$/) || +input.value < +input.min) {\n        input.value = input.min;\n      } else if (+input.value > +input.max) {\n        input.value = input.max;\n      }\n    }\n  };\n\n  return (\n    <Dialog fullScreen open={open} onClose={() => onClose()} TransitionComponent={settingsDialogTransition}>\n      <AppBar color=\"secondary\" className={classes.settingsAppBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => onClose()} aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.settingsTitle}>\n            Settings\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => onSave()}>\n            save\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <List>\n        <ListItem>\n          <ListItemText primary=\"Default channel selection\" secondary=\"The channel menu that would be selected by default\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Select\n              native\n              inputProps={{ id: 'defaultChannelSelection', className: classes.select }}\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.container}\n              defaultValue={settings?.defaultChannelSelection}\n            >\n              <option value={ChannelSelection.All}>All</option>\n              <option value={ChannelSelection.TodaysVideos}>Today's videos</option>\n              <option value={ChannelSelection.RecentVideos}>Recent videos</option>\n            </Select>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Max videos per channel\" secondary=\"The maximum number of videos to show per channel\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"videosPerChannel\"\n              type=\"number\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ min: 3, max: 50, step: 3 }}\n              className={classes.container}\n              defaultValue={settings?.videosPerChannel}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Anteriority of videos (in days)\" secondary=\"Number of days to subtract from the current date\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"videosAnteriority\"\n              type=\"number\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ min: 1, max: 365, step: 7 }}\n              className={classes.container}\n              defaultValue={settings?.videosAnteriority}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Sort videos by\" secondary=\"Videos sorting criteria\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Select\n              native\n              inputProps={{ id: 'sortVideosBy', className: classes.select }}\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.container}\n              defaultValue={settings?.sortVideosBy}\n            >\n              <option value=\"date\">Date</option>\n              <option value=\"views\">Views</option>\n            </Select>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary={\n            <Typography variant=\"body1\" component=\"span\">Custom API key (<Link href=\"https://www.slickremix.com/docs/get-api-key-for-youtube/\" target=\"_blank\" rel=\"noopener\">How to get an API key?</Link>)</Typography>\n          } secondary={\n            <React.Fragment>\n              <Typography variant=\"body2\" component=\"span\">Replaces the default youtube API key used to fetch channels & videos data</Typography>\n              <br/>\n              <Typography variant=\"body2\" component=\"span\">(will apply the next time you {isWebExtension() ? 'open the extension popup' : 'reload the app'})</Typography>\n            </React.Fragment>\n          } className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"apiKey\"\n              type=\"text\"\n              placeholder=\"AIzaSyDOkg-u9jnhP-WnzX5WPJyV1sc5QQrtuyc\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ minLength: 39 }}\n              className={classes.container}\n              defaultValue={settings?.apiKey}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        {isWebExtension() &&\n          <React.Fragment>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Auto videos check rate (in minutes)\" secondary=\"Number of minutes to wait before auto-checking for recent videos\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <TextField\n                  id=\"autoVideosCheckRate\"\n                  type=\"number\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  inputProps={{ min: 5, max: 720, step: 5 }}\n                  className={classes.container}\n                  defaultValue={settings?.autoVideosCheckRate}\n                  onChange={(event) => validateSettings(event)}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Enable recent videos notifications\" secondary=\"Notifies you when recent videos get posted\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"enableRecentVideosNotifications\"\n                  defaultChecked={settings?.enableRecentVideosNotifications}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Auto play videos once opened\" secondary=\"Auto-play permission should be granted for youtube.com\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"autoPlayVideos\"\n                  defaultChecked={settings?.autoPlayVideos}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Open videos in inactive tabs\" secondary=\"Will open videos in new tabs without losing focus of the current tab\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"openVideosInInactiveTabs\"\n                  defaultChecked={settings?.openVideosInInactiveTabs}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </React.Fragment>\n        }\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Open channels on name click\" secondary='Will open channels directly by clicking on their name, replaces the icon button \"open channel\"' className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"openChannelsOnNameClick\"\n              defaultChecked={settings?.openChannelsOnNameClick}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Hide empty channels\" secondary=\"Hide all empty channels by default\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"hideEmptyChannels\"\n              defaultChecked={settings?.hideEmptyChannels}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Auto clear recent videos\" secondary=\"Auto-clear recent videos before each startup\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"autoClearRecentVideos\"\n              defaultChecked={settings?.autoClearRecentVideos}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Auto clear videos cache\" secondary=\"Cache may speed up loading time & reduce API quota consumption\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"autoClearCache\"\n              defaultChecked={settings?.autoClearCache}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\ninterface CustomSnackbarProps {\n  open: boolean;\n  message: string;\n  onClose: Function;\n  onRefresh: Function;\n}\n\nexport function CustomSnackbar(props: CustomSnackbarProps) {\n  const { open, message, onClose, onRefresh } = props;\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={() => onClose()}\n      message={message}\n      action={\n        <React.Fragment>\n          <Button color=\"secondary\" size=\"small\" onClick={(event) => onRefresh(null, event)}>\n            Refresh\n          </Button>\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => onClose()}>\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        </React.Fragment>\n      }\n    />\n  )\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Fade from '@material-ui/core/Fade';\nimport SearchChannelInput from './channel/SearchChannelInput';\nimport { Channel, ChannelSelection } from '../models/Channel';\nimport { getChannelActivities, getVideoInfo } from '../helpers/youtube';\nimport { Video } from '../models/Video';\nimport { getDateBefore, memorySizeOf, isInToday, diffHours } from '../helpers/utils';\nimport MultiVideoGrid from './video/MultiVideoGrid';\nimport VideoGrid from './video/VideoGrid';\nimport { Settings, SettingsType } from '../models/Settings';\nimport { saveToStorage } from '../helpers/storage';\nimport { ChannelList } from './channel/ChannelList';\nimport { MessageSnackbar } from './shared/MessageSnackbar';\nimport { SettingsDialog } from './settings/SettingsDialog';\nimport { CustomSnackbar } from './shared/CustomSnackbar';\nimport { isWebExtension, isFirefox, createTab, executeScript } from '../helpers/browser';\nimport { debug, warn } from '../helpers/debug';\n// @ts-ignore\nimport ReactPullToRefresh from 'react-pull-to-refresh';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      minWidth: '700px',\n      minHeight: isWebExtension() ? '500px' : '100vh',\n      maxWidth: isWebExtension() && isFirefox() ? '700px' : 'none',\n    },\n    appBar: {\n      backgroundColor: '#f44336',\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    container: {\n      display: 'flex',\n      width: '100%',\n      height: '80%',\n      justifyContent: 'center',\n    },\n    centered: {\n      alignSelf: 'center',\n      textAlign: 'center',\n      margin: '0 80px'\n    },\n    heartIcon: {\n      color: '#e25555',\n      fontSize: 16,\n      verticalAlign: 'middle',\n    },\n    madeWithLove: {\n      padding: theme.spacing(1, 0),\n    },\n  }),\n);\n\ninterface PopupProps {\n  channels: Channel[];\n  settings: Settings;\n  cache: any;\n  isReady: boolean;\n}\n\nexport default function Popup(props: PopupProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [channels, setChannels] = React.useState<Channel[]>(props.channels);\n  const [videos, setVideos] = React.useState<Video[]>([]);\n  const [openDrawer, setOpenDrawer] = React.useState(false);\n  const [isReady, setIsReady] = React.useState(props.isReady);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [selectedChannelIndex, setSelectedChannelIndex] = React.useState(ChannelSelection.All);\n  const [settings, setSettings] = React.useState<Settings>(props.settings);\n  const [openSettingsDialog, setOpenSettingsDialog] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState('');\n  const [lastError, setLastError] = React.useState<Error|null>(null);\n  const [cache, setCache] = React.useState<any>({});\n  const [recentVideosCount, setRecentVideosCount] = React.useState(0);\n  const [todaysVideosCount, setTodaysVideosCount] = React.useState(0);\n\n  React.useEffect(() => setChannels(props.channels), [props.channels]);\n  React.useEffect(() => setSettings(props.settings), [props.settings]);\n  React.useEffect(() => setCache(props.cache), [props.cache]);\n  React.useEffect(() => setIsReady(props.isReady), [props.isReady]);\n\n  React.useEffect(() => {\n    warn('isReady changed', isReady);\n    if (isReady) {\n      if (channels.length && !videos.length) {\n        showChannelSelection(settings.defaultChannelSelection, true);\n      } else if (selectedChannelIndex !== settings.defaultChannelSelection) {\n        setSelectedChannelIndex(settings.defaultChannelSelection);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isReady]);\n\n  React.useEffect(() => {\n    warn('channels changed', { isReady: isReady });\n    if (isReady) {\n      saveToStorage({ channels: channels });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channels]);\n\n  React.useEffect(() => {\n    warn('settings changed', { isReady: isReady });\n    if (isReady) {\n      saveToStorage({ settings: settings });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings]);\n\n  React.useEffect(() => {\n    warn('cache or channels changed', { isReady: isReady });\n    if (isReady) {\n      debug('----------------------');\n      debug('counting todays & recent videos');\n      let totalRecentVideosCount: number = 0, totalTodaysVideosCount: number = 0;\n      Object.keys(cache).forEach((channelId: string) => {\n        const channel = channels.find((c: Channel) => c.id === channelId);\n        if (!channel || channel.isHidden) {\n          return;\n        }\n        const recentVideosCountPerChannel = (cache[channelId].filter((video: Video) => video.isRecent)).length;\n        const todaysVideosCountPerChannel = (cache[channelId].filter((video: Video) => isInToday(video.publishedAt))).length;\n        debug(channel.title, { recent: recentVideosCountPerChannel, todays: todaysVideosCountPerChannel });\n        totalRecentVideosCount += recentVideosCountPerChannel;\n        totalTodaysVideosCount += todaysVideosCountPerChannel;\n      });\n      debug('total count', { recent: totalRecentVideosCount, todays: totalTodaysVideosCount });\n      setRecentVideosCount(totalRecentVideosCount);\n      setTodaysVideosCount(totalTodaysVideosCount);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cache, channels]);\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  const displayError = (error: Error) => {\n    console.error(error);\n    setLastError(error);\n  };\n\n  const getChannelVideos = (channel: Channel, ignoreCache: boolean = false): Promise<Video[]> => {\n    return new Promise((resolve, reject) => {\n      if (!ignoreCache && cache[channel.id]?.length) {\n        debug('----------------------');\n        debug('load videos from cache', channel.title, cache[channel.id]);\n        resolve(cache[channel.id].slice(0, settings.videosPerChannel));\n      } else {\n        getChannelActivities(channel.id, getDateBefore(settings.videosAnteriority)).then((results) => {\n          debug('----------------------');\n          debug('activities of', channel.title, results);\n          if (results?.items) {\n            // get recent videos ids\n            const videosIds: string[] = results.items.map((item: any) => item.contentDetails.upload?.videoId).filter((id: string) => id?.length);\n            const cacheVideosIds: string[] = cache[channel.id]?.length ? cache[channel.id].map((video: Video) => video.id) : [];\n            const recentVideosIds: string[] = videosIds.filter((videoId: string, index: number) => videosIds.indexOf(videoId) === index) // remove duplicates\n                                                       .slice(0, settings.videosPerChannel)\n                                                       .filter((videoId: string) => cacheVideosIds.indexOf(videoId) === -1); // remove videos already in cache\n            // get recent videos informations\n            if (!recentVideosIds.length) {\n              debug('no recent videos for this channel');\n              resolve(cache[channel.id]?.slice(0, settings.videosPerChannel) || []);\n            } else {\n              debug('getting recent videos of', channel.title, { recentVideosIds: recentVideosIds, cacheVideosIds: cacheVideosIds });\n              getVideoInfo(recentVideosIds).then((videosData: Video[]) => {\n                debug('recent videos data', videosData);\n                // mark new videos as recent\n                const now = new Date();\n                videosData = videosData.map((video: Video) => {\n                  const videoDate = new Date(video.publishedAt); // convert timestamp to Date object\n                  if (diffHours(now, videoDate) <= 24) { // avoid marking too old videos as recent when cache is empty\n                    video.isRecent = true;\n                  }\n                  return video;\n                });\n                // merge cached & new videos\n                cache[channel.id] = cache[channel.id]?.length ? [...videosData, ...cache[channel.id]] : videosData;\n                // sort videos\n                const videos = cache[channel.id].sort((a: Video, b: Video) => {\n                  if (settings.sortVideosBy === 'views' && a.views?.count && b.views?.count) {\n                    return b.views.count - a.views.count;\n                  } else {\n                    return b.publishedAt - a.publishedAt;\n                  }\n                }).slice(0, settings.videosPerChannel);\n                // save to cache\n                setCache({...cache});\n                saveToStorage({ cache: cache });\n                resolve(videos || []);\n              }).catch((error: Error) => {\n                displayError(error);\n                resolve([]);\n              });\n            }\n          } else {\n            resolve([]);\n          }\n        }).catch((error: Error) => {\n          displayError(error);\n          resolve([]);\n        });\n      }\n    });\n  };\n\n  const addChannel = (channel: Channel) => {\n    // Add channel\n    debug('added channel:', channel);\n    const found: Channel | undefined = channels.find((c: Channel) => c.id === channel.id);\n    if (!found) {\n      setChannels([...channels, channel]);\n      setSelectedChannelIndex(channels.length);\n    } else {\n      setSelectedChannelIndex(channels.indexOf(found));\n    }\n    // Get channel videos\n    setIsLoading(true);\n    getChannelVideos(channel).then((videos: Video[]) => {\n      setVideos(videos || []);\n      setIsLoading(false);\n    });\n  };\n\n  const selectChannel = (channel: Channel, index: number, ignoreCache: boolean = false) => {\n    // Select channel\n    debug('selected channel:', channel);\n    setSelectedChannelIndex(index);\n    // Get its videos\n    setIsLoading(true);\n    return getChannelVideos(channel, ignoreCache).then((videos: Video[]) => {\n      setVideos(videos || []);\n      setIsLoading(false);\n      window.scrollTo(0, 0); // scroll to top\n    });\n  };\n  \n  const deleteChannel = (index: number) => {\n    setChannels(channels.filter((_, i) => i !== index));\n    if (selectedChannelIndex === index) {\n      setVideos([]);\n      setSelectedChannelIndex(ChannelSelection.None);\n    }\n  };\n\n  const fetchChannelsVideos = (selection: ChannelSelection, filterFunction: Function|null = null, ignoreCache: boolean = false, customChannels?: Channel[]) => {\n    // Update channel selection\n    setSelectedChannelIndex(selection);\n    // Get channels videos\n    setIsLoading(true);\n    setVideos([]);\n    let promises: Promise<any>[] = [];\n    let videos: Video[] = [];\n    const channelsList = customChannels || channels;\n\n    channelsList.filter((channel: Channel) => !channel.isHidden).forEach((channel: Channel) => {\n\n      const promise = getChannelVideos(channel, ignoreCache).then((newVideos: Video[]) => {\n        debug('----------------------');\n        debug(channel.title, newVideos);\n        if (filterFunction) {\n          newVideos = newVideos.filter((video: Video) => filterFunction(video));\n        }\n        videos.push(...newVideos);\n      });\n      promises.push(promise);\n\n    });\n\n    return Promise.all(promises).finally(() => {\n      setVideos(videos);\n      setIsLoading(false);\n    });\n  };\n\n  const showAllChannels = (ignoreCache: boolean = false) => {\n    return fetchChannelsVideos(ChannelSelection.All, null, ignoreCache);\n  };\n\n  const showTodaysVideos = (ignoreCache: boolean = false) => {\n    return fetchChannelsVideos(ChannelSelection.TodaysVideos, (video: Video) => isInToday(video.publishedAt), ignoreCache);\n  };\n\n  const showRecentVideos = (ignoreCache: boolean = false) => {\n    return fetchChannelsVideos(ChannelSelection.RecentVideos, (video: Video) => video.isRecent, ignoreCache);\n  };\n\n  const showChannelSelection = (selection: ChannelSelection, ignoreCache: boolean = false) => {\n    switch(selection) {\n      case ChannelSelection.TodaysVideos:\n        return showTodaysVideos(ignoreCache);\n      case ChannelSelection.RecentVideos:\n        return showRecentVideos(ignoreCache);\n      case ChannelSelection.All:\n      default:\n        return showAllChannels(ignoreCache);\n    }\n  };\n\n  const clearRecentVideos = () => {\n    Object.keys(cache).forEach((channelId: string) => {\n      cache[channelId] = cache[channelId].map((video: Video) => {\n        video.isRecent = false;\n        return video;\n      });\n    });\n    setCache({...cache});\n    saveToStorage({ cache: cache });\n    if (selectedChannelIndex === ChannelSelection.RecentVideos) {\n      refreshChannels(ChannelSelection.RecentVideos);\n    }\n  };\n\n  const refreshChannels = (selection?: ChannelSelection, event?: any) => {\n    if (event) {\n      event.stopPropagation();\n    }\n    if (selection === undefined || selection === null) {\n      selection = selectedChannelIndex;\n    }\n    if (selection >= 0) {\n      return selectChannel(channels[selection], selection, true);\n    } else {\n      return showChannelSelection(selection, true);\n    }\n  };\n\n  const importChannels = (channelsList: Channel[]) => {\n    debug('importing channels', channelsList);\n    // Update channels\n    setChannels(channelsList);\n    fetchChannelsVideos(ChannelSelection.All, null, true, channelsList);\n    setSnackbarMessage('Channels imported!');\n  };\n\n  const clearCache = () => {\n    setCache({});\n    saveToStorage({ cache: {} });\n    setSnackbarMessage('Cache cleared!');\n  };\n\n  const getCacheSize = () => {\n    const size = memorySizeOf(cache);\n    //console.log(size);\n    return size;\n  };\n\n  const openSettings = (event: any) => {\n    event.stopPropagation();\n    setOpenSettingsDialog(true);\n  };\n\n  const closeSettings = () => {\n    setOpenSettingsDialog(false);\n  };\n\n  const getSettingsValue = (id: string, type: SettingsType) => {\n    const element = document.getElementById(id) as any;\n    if (element) {\n      switch(type) {\n        case SettingsType.Number:\n          return +element.value;\n        case SettingsType.Boolean:\n          return element.checked;\n        case SettingsType.String:\n        default:\n          return element.value;\n      }\n    } else {\n      return (settings as any)[id];\n    }\n  };\n\n  const saveSettings = () => {\n    // Update settings\n    setSettings({\n      defaultChannelSelection: getSettingsValue('defaultChannelSelection', SettingsType.Number),\n      videosPerChannel: getSettingsValue('videosPerChannel', SettingsType.Number),\n      videosAnteriority: getSettingsValue('videosAnteriority', SettingsType.Number),\n      sortVideosBy: getSettingsValue('sortVideosBy', SettingsType.String),\n      apiKey: getSettingsValue('apiKey', SettingsType.String),\n      autoVideosCheckRate: getSettingsValue('autoVideosCheckRate', SettingsType.Number),\n      enableRecentVideosNotifications: getSettingsValue('enableRecentVideosNotifications', SettingsType.Boolean),\n      autoPlayVideos: getSettingsValue('autoPlayVideos', SettingsType.Boolean),\n      openVideosInInactiveTabs: getSettingsValue('openVideosInInactiveTabs', SettingsType.Boolean),\n      openChannelsOnNameClick: getSettingsValue('openChannelsOnNameClick', SettingsType.Boolean),\n      hideEmptyChannels: getSettingsValue('hideEmptyChannels', SettingsType.Boolean),\n      autoClearRecentVideos: getSettingsValue('autoClearRecentVideos', SettingsType.Boolean),\n      autoClearCache: getSettingsValue('autoClearCache', SettingsType.Boolean),\n    });\n    closeSettings();\n    setSnackbarMessage('Settings saved!');\n  };\n\n  const closeSettingsSnackbar = () => {\n    setSnackbarMessage('');\n  };\n\n  const openVideo = (event: any) => {\n    event.stopPropagation();\n    const videoUrl = event.currentTarget.href;\n    if (isWebExtension() && videoUrl) {\n      event.preventDefault();\n      createTab(videoUrl, !settings.openVideosInInactiveTabs).then((tab: any) => {\n        if (settings.autoPlayVideos) {\n          executeScript(tab.id, `document.querySelector('#player video').play();`);\n        }\n      });\n    }\n  };\n\n  const handlePullToRefresh = (resolve: Function, reject: Function) => {\n    let promise: Promise<any>;\n    if (selectedChannelIndex >= 0) {\n      promise = selectChannel(channels[selectedChannelIndex], selectedChannelIndex, true);\n    } else {\n      promise = refreshChannels(selectedChannelIndex);\n    }\n    promise.then(() => {\n      resolve();\n    }).catch(() => {\n      reject();\n    });\n  };\n\n  const getNotHiddenChannelsCount = () => {\n    return channels.filter((channel: Channel) => !channel.isHidden)?.length;\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        color=\"secondary\"\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: openDrawer,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, openDrawer && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Youtube viewer\n          </Typography>\n          <SearchChannelInput onSelect={addChannel} onError={displayError} />\n          <div className={classes.grow} />\n          <IconButton edge=\"end\" aria-label=\"settings\" color=\"inherit\" onClick={(event) => openSettings(event)}>\n            <SettingsIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={openDrawer}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <ChannelList\n          channels={channels}\n          selectedIndex={selectedChannelIndex}\n          cacheSize={getCacheSize()}\n          todaysVideosCount={todaysVideosCount}\n          recentVideosCount={recentVideosCount}\n          onShowAll={showAllChannels}\n          onShowTodaysVideos={showTodaysVideos}\n          onShowRecentVideos={showRecentVideos}\n          onRefresh={refreshChannels}\n          onSelect={selectChannel}\n          onDelete={deleteChannel}\n          onSave={setChannels}\n          onSelectedIndexChange={setSelectedChannelIndex}\n          onClearCache={clearCache}\n          onClearRecentVideos={clearRecentVideos}\n          onImport={importChannels}\n        />\n        <div className={classes.grow} />\n        <Divider />\n        <Typography variant=\"caption\" align=\"center\" className={classes.madeWithLove}>\n          Made with <FavoriteRoundedIcon className={classes.heartIcon} /> by AXeL\n          <Link href=\"https://github.com/AXeL-dev/youtube-viewer\" target=\"_blank\" rel=\"noopener\">\n            <IconButton edge=\"end\" size=\"small\" aria-label=\"github link\">\n              <GitHubIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Link>\n        </Typography>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: openDrawer,\n        })}\n        //onClick={() => handleDrawerClose()}\n      >\n        <div className={classes.drawerHeader} />\n        {isReady && selectedChannelIndex !== ChannelSelection.None && (channels?.length ? (\n          <ReactPullToRefresh\n            onRefresh={handlePullToRefresh}\n            icon={(!settings.hideEmptyChannels && selectedChannelIndex < 0 && getNotHiddenChannelsCount() > 0) || videos?.length > 0 ? <ArrowDownwardIcon className=\"arrowicon\" /> : <i></i>}\n            distanceToRefresh={50}\n            resistance={5}\n            style={{ position: 'relative' }}\n          >\n            {selectedChannelIndex < 0 ? (\n              <MultiVideoGrid\n                channels={channels}\n                videos={videos}\n                settings={settings}\n                loading={isLoading}\n                maxPerChannel={settings.videosPerChannel}\n                onSelect={selectChannel}\n                onVideoClick={openVideo}\n                onSave={setChannels}\n                onRefresh={refreshChannels}\n              />\n            ) : (\n              <VideoGrid\n                videos={videos}\n                loading={isLoading}\n                maxPerChannel={settings.videosPerChannel}\n                onVideoClick={openVideo}\n              />\n            )}\n          </ReactPullToRefresh>\n        ) : (\n          <Fade in={true} timeout={3000}>\n            <Box className={classes.container}>\n              <Typography component=\"div\" variant=\"h5\" color=\"textSecondary\" className={classes.centered} style={{ cursor: 'default' }}>\n                <SearchIcon style={{ fontSize: 38, verticalAlign: 'middle' }} /> Start by typing a channel name in the search box\n              </Typography>\n            </Box>\n          </Fade>\n        ))}\n      </main>\n      <SettingsDialog settings={settings} open={openSettingsDialog} onClose={closeSettings} onSave={saveSettings} />\n      <CustomSnackbar open={!!snackbarMessage.length} message={snackbarMessage} onClose={closeSettingsSnackbar} onRefresh={refreshChannels} />\n      <MessageSnackbar message={lastError?.message} open={!!lastError} onClose={() => setLastError(null)} />\n    </div>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport Popup from './components/Popup';\nimport { getFromStorage, saveToStorage } from './helpers/storage';\nimport { Channel, ChannelSelection } from './models/Channel';\nimport { Settings } from './models/Settings';\nimport { isWebExtension, setBadgeText } from './helpers/browser';\nimport { debug } from './helpers/debug';\nimport { Video } from './models/Video';\n\ninterface AppProps {}\n\ninterface AppState {\n  channels: Channel[];\n  settings: Settings;\n  cache: any;\n  isReady: boolean;\n}\n\nclass App extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n    this.state = {\n      channels: [],\n      settings: {\n        defaultChannelSelection: ChannelSelection.All,\n        videosPerChannel: 9,\n        videosAnteriority: 30, // days\n        sortVideosBy: 'date',\n        autoVideosCheckRate: 30, // minutes\n        enableRecentVideosNotifications: true,\n        autoPlayVideos: false,\n        openVideosInInactiveTabs: false,\n        openChannelsOnNameClick: false,\n        hideEmptyChannels: false,\n        autoClearRecentVideos: true,\n        autoClearCache: false\n      },\n      cache: {},\n      isReady: false\n    };\n    this.updateState();\n    if (isWebExtension()) {\n      setBadgeText(''); // reset webextension badge\n    }\n  }\n\n  async updateState() {\n    // get data from storage\n    let [channels, settings, cache] = await getFromStorage('channels', 'settings', 'cache');\n    debug('Storage data:', {channels: channels, settings: settings, cache: cache});\n    // set/merge settings\n    settings = settings ? {...this.state.settings, ...settings} : this.state.settings;\n    // clear recent videos\n    if (settings?.autoClearRecentVideos && cache) {\n      let cacheHasChanged: boolean = false;\n      Object.keys(cache).forEach((channelId: string) => {\n        cache[channelId] = cache[channelId].map((video: Video) => {\n          if (video.isRecent) {\n            video.isRecent = false;\n            cacheHasChanged = true;\n          }\n          return video;\n        });\n      });\n      // update cache\n      if (cacheHasChanged) {\n        saveToStorage({ cache: cache });\n      }\n    }\n    // update state\n    this.setState({\n      channels: channels?.length ? channels : [],\n      settings: settings,\n      cache: !settings?.autoClearCache && cache ? cache : {},\n      isReady: true\n    });\n  }\n\n  render() {\n    return (\n      <Popup channels={this.state.channels} settings={this.state.settings} cache={this.state.cache} isReady={this.state.isReady} />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}