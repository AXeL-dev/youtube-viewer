{"version":3,"sources":["helpers/storage.ts","helpers/utils.ts","helpers/youtube.ts","helpers/browser.ts","components/Background.tsx","models/Channel.ts","components/shared/RawHTML.tsx","components/channel/SearchChannelInput.styles.ts","components/channel/SearchChannelInput.tsx","models/SortOrder.ts","components/video/VideoRenderer.styles.ts","atoms/videos.ts","atoms/settings.ts","atoms/cache.ts","atoms/channels.ts","atoms/snackbar.ts","components/video/VideoRenderer.tsx","helpers/debug.ts","components/video/VideoGrid.styles.ts","components/video/VideoGrid.tsx","components/video/MultiVideoGrid.styles.ts","components/video/MultiVideoGrid.tsx","components/shared/ConfirmationDialog.tsx","components/shared/ImportDialog.tsx","components/shared/MoveToPositionDialog.tsx","helpers/parser.ts","components/channel/ChannelList.styles.ts","components/channel/ChannelList.tsx","helpers/download.ts","components/snackbar/MessageSnackbar.tsx","models/Settings.ts","components/settings/SettingsDialog.styles.ts","components/settings/SettingsDialog.tsx","components/snackbar/BottomSnackbar.styles.ts","components/snackbar/BottomSnackbar.tsx","components/popup/Popup.styles.ts","hooks/useConstructor.ts","components/popup/Popup.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getFromStorage","promises","keys","forEach","key","push","__get","Promise","all","resolve","reject","browser","storage","local","get","then","error","finalValue","value","localStorage","getItem","JSON","parse","saveToStorage","values","Object","set","stringify","setItem","__save","niceDuration","ISO_8601_string","time","replace","toUpperCase","h","extract","m","s","join","stop","i","length","val","slice","shortenLargeNumber","num","decimal","digits","units","Math","pow","toFixed","TimeAgo","self","prefix","sufix","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","timeAgo","floor","Date","parseInt","separator","locales","words","interval","intervals","distance","trim","getDateBefore","before","date","setDate","getDate","isInToday","timestamp","setHours","diffHours","dt1","dt2","diff","getTime","abs","round","apiKey","process","apiRequest","a","settings","url","window","fetch","response","ok","json","Error","errors","reason","message","status","setApiKey","action","apiArgs","makeRequest","param","URLSearchParams","toString","apiUrl","getChannelActivities","channelId","after","part","publishedAfter","toISOString","maxResults","Symbol","getVideoInfo","videoIdList","joinedIds","fields","id","items","map","item","title","snippet","duration","contentDetails","views","count","statistics","viewCount","asString","publishedAt","thumbnail","thumbnails","medium","channelTitle","isWebExtension","createTab","isActive","tabs","create","active","sendNotification","type","notifications","iconUrl","setBadgeText","text","browserAction","isFirefox","navigator","userAgent","indexOf","ChannelSelection","defaults","Background","props","state","totalRecentVideosCount","checkedChannels","init","console","log","backgroundColor","textColor","setBadgeTextColor","color","setBadgeBackgroundColor","this","getAutoCheckRate","rate","autoCheckLoop","onClicked","addListener","notificationId","split","setTimeout","channels","cache","getRecentVideosCount","recentVideosCount","getBadgeText","badgeText","setState","enableRecentVideosNotifications","notification","autoVideosCheckRate","filter","channel","isHidden","isDisabled","results","videosIds","upload","videoId","cacheVideosIds","video","recentVideosIds","index","videosPerChannel","suffix","catch","finally","React","Component","RawHTML","children","className","dangerouslySetInnerHTML","__html","useStyles","makeStyles","theme","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","breakpoints","up","searchIcon","spacing","height","pointerEvents","display","alignItems","justifyContent","clearButton","right","top","margin","inputRoot","inputInput","padding","transition","transitions","poper","zIndex","overflow","boxShadow","listbox","border","listStyle","background","paper","maxHeight","cursor","avatar","secondary","marginRight","SearchChannelInput","onSelect","onError","classes","useState","inputValue","setInputValue","options","setOptions","useAutocomplete","getOptionLabel","option","getRootProps","getInputProps","getListboxProps","getOptionProps","groupedOptions","useMemo","func","wait","timeout","context","args","arguments","clearTimeout","apply","debounce","input","callback","query","max","order","q","responseJson","payLoad","pageInfo","totalResults","howMany","min","description","searchChannel","useEffect","InputBase","placeholder","root","inputProps","onChange","event","target","IconButton","aria-label","size","onClick","fontSize","Grid","container","Avatar","alt","src","xs","Typography","variant","RegExp","SortOrder","videoImageSize","anchor","textDecoration","imageContainer","opacity","left","image","overlay","bottom","textAlign","paddingLeft","paddingRight","transform","optionsButton","optionsIcon","visibilityIconBox","visibilityIcon","videosAtom","atom","defaultVideosSortOrder","DESC","videosSortOrderAtom","All","TodaysVideos","RecentVideos","WatchLaterVideos","ASC","setVideosSortOrderAtom","defaultSettings","defaultChannelSelection","videosAnteriority","sortVideosBy","autoPlayVideos","openVideosInInactiveTabs","openChannelsOnNameClick","hideEmptyChannels","autoCloseDrawer","autoClearRecentVideos","autoRemoveWatchLaterVideos","autoClearCache","settingsAtom","cacheAtom","channelsAtom","selectedChannelIndexAtom","defaultSnackbarOptions","snackbarAtom","isOpen","icon","autoHideDuration","showRefreshButton","snackbarClosedState","undefined","openSnackbarAtom","closeSnackbarAtom","VideoRenderer","useAtom","selectedChannelIndex","videos","setVideos","setCache","openSnackbar","useUpdateAtom","openVideo","stopPropagation","preventDefault","tab","tabId","code","executeScript","videoIndex","markAsWatched","removeVideoFromWatchLater","getVideoIndex","isWatched","findIndex","v","preventClick","isToWatchLater","Link","href","rel","Box","addVideoToWatchLater","Tooltip","pr","mt","gutterBottom","inWords","debug","params","styles","grid","minWidth","VideoGrid","loading","maxPerChannel","maxSkeletons","preventLongPress","setPreventLongPress","handleMouseEvent","style","onMouseDown","onClickCapture","Array","from","marginBottom","draggable","Fragment","Skeleton","pt","breadcrumb","divider","link","outline","youtube","box","MultiVideoGrid","useTheme","maxVisible","onSave","onRefresh","expandedChannelsIndexes","setExpandedChannelsIndexes","toggleChannelNotifications","activate","channelVideos","Breadcrumbs","onChannelNameClick","hideChannel","enableChannelNotifications","disableChannelNotifications","edge","Divider","ConfirmationDialog","open","confirmButtonText","cancelButtonText","onClose","onConfirm","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","ImportDialog","textFieldId","textFieldLabel","onValidate","textFieldError","setTextFieldError","close","TextField","label","multiline","rows","fullWidth","document","getElementById","data","isValid","MoveToPositionDialog","step","positionFieldId","positionFieldLabel","positionFieldError","setPositionFieldError","defaultValue","isNaN","test","createStyles","channelsOptionsIcon","menuIcon","verticalAlign","subheader","ChannelList","selectedIndex","todaysVideosCount","watchLaterVideosCount","onShowAll","onShowTodaysVideos","onShowRecentVideos","onShowWatchLaterVideos","onDelete","onSelectedIndexChange","onClearRecentVideos","onAddVideosToWatchLater","onClearWatchLaterVideos","onImport","useAtomValue","videosSortOrder","setVideosSortOrder","openDeleteChannelDialog","setOpenDeleteChannelDialog","channelToDeleteIndex","setChannelToDeleteIndex","anchorEl","setAnchorEl","openedMenuIndex","setOpenedMenuIndex","openClearCacheDialog","setOpenClearCacheDialog","openClearRecentVideosDialog","setOpenClearRecentVideosDialog","openClearWatchLaterVideosDialog","setOpenClearWatchLaterVideosDialog","openImportChannelsDialog","setOpenImportChannelsDialog","moveToPositionChannelIndex","setMoveToPositionChannelIndex","getSelectedChannel","find","_","moveChannel","indexFrom","indexTo","closeMenu","selectedChannel","list","startIndex","endIndex","result","splice","removed","reorder","closeDeleteChannelDialog","updateChannels","None","openMenu","currentTarget","getCacheSize","obj","bytes","formatByteSize","sizeOf","objClass","prototype","call","hasOwnProperty","memorySizeOf","closeClearCacheDialog","exportChannels","blob","filename","msSaveOrOpenBlob","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","Blob","closeImportChannelsDialog","closeMoveChannelToPositionDialog","closeClearRecentVideosDialog","closeClearWatchLaterVideosDialog","renderSortOrderMenuItems","sortOrder","MenuItem","disabled","isFirefoxExtension","onDragEnd","destination","source","droppableId","provided","snapshot","RootRef","rootRef","innerRef","List","dense","ListSubheader","keepMounted","isDraggingOver","ListItem","button","selected","ListItemIcon","Badge","badgeContent","ListItemText","primary","ListItemSecondaryAction","refreshAll","refreshTodaysVideos","refreshRecentVideos","draggableId","isDragging","draggableStyle","ContainerProps","ref","draggableProps","dragHandleProps","openChannel","refreshChannel","channelIndex","unhideChannel","deleteChannel","channelsList","MessageSnackbar","anchorOrigin","vertical","horizontal","Snackbar","SettingsType","settingsAppBar","settingsTitle","flex","select","textShadow","optionLabel","maxWidth","settingsDialogTransition","forwardRef","Slide","direction","SettingsDialog","setSettings","getSettingsValue","element","Number","Boolean","checked","String","validateSettings","match","fullScreen","TransitionComponent","AppBar","Toolbar","Select","native","component","minLength","Switch","defaultChecked","alert","SlideTransition","BottomSnackbar","snackbarKey","handleClose","Alert","severity","popupSize","minHeight","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","userSelect","grow","flexGrow","logo","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","centered","alignSelf","heartIcon","madeWithLove","useConstructor","callBack","hasBeenCalled","useRef","current","Popup","setChannels","maxVisibleVideos","setMaxVisibleVideos","setHeight","openDrawer","setOpenDrawer","isReady","setIsReady","isLoading","setIsLoading","setSelectedChannelIndex","openSettingsDialog","setOpenSettingsDialog","snackbar","closeSnackbar","lastError","setLastError","setRecentVideosCount","setTodaysVideosCount","setWatchLaterVideosCount","popupWidth","innerWidth","warn","showChannelSelection","updateVideosCount","totalTodaysVideosCount","totalWatchLaterVideosCount","c","recentVideosCountPerChannel","isRecent","todaysVideosCountPerChannel","watchLaterVideosCountPerChannel","recent","todays","watchLater","handleDrawerClose","displayError","getChannelVideos","ignoreCache","pipeFunction","videosData","now","videoDate","sortedVideos","sort","b","selectChannel","getSortFunction","scrollTo","fetchChannelsVideos","selection","filterFunction","sortFunction","customChannels","promise","showAllChannels","showTodaysVideos","showRecentVideos","showWatchLaterVideos","bulkUpdateVideos","updateFunction","refreshChannels","CssBaseline","clsx","found","openSettings","Drawer","cacheUpdated","align","distanceToRefresh","resistance","Fade","in","Main","cacheHasChanged","fetchData","App","exact","path","location","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0dd0fd2.chunk.js","sourcesContent":["//import { browser } from \"webextension-polyfill-ts\";\n\ndeclare var browser: any;\n\n/**\n * Get data from storage\n * \n * EX: getFromStorage('key1', 'key2', ...)\n * \n * @param keys \n */\nexport function getFromStorage(...keys: string[]): Promise<any> {\n  let promises: Promise<any>[] = [];\n  keys.forEach((key: string) => {\n    promises.push(__get(key));\n  });\n  return Promise.all(promises);\n}\n\nfunction __get(key: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    try {\n      browser.storage.local.get(key).then((storage: any) => {\n        resolve(storage[key]);\n      });\n    }\n    catch(error) {\n      //console.log(error.message);\n      const value: any = localStorage.getItem(key);\n      let finalValue: any;\n      try {\n        finalValue = JSON.parse(value);\n      }\n      catch(error) {\n        finalValue = value;\n      }\n      resolve(finalValue);\n    }\n  });\n}\n\n/**\n * Save data to storage\n * \n * EX: saveToStorage({ key1: value1, key2: value2, ... })\n * \n * @param values \n */\nexport function saveToStorage(values: {[key: string]: any}): Promise<any> {\n  let promises: Promise<any>[] = [];\n  Object.keys(values).forEach((key: string) => {\n    promises.push(__save(key, values[key]));\n  });\n  return Promise.all(promises);\n}\n\nfunction __save(key: string, value: any): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      browser.storage.local.set({[key]: value}).then(() => {\n        resolve();\n      });\n    }\n    catch(error) {\n      //console.log(error.message);\n      let finalValue: any;\n      try {\n        finalValue = JSON.stringify(value);\n      }\n      catch(error) {\n        finalValue = value;\n      }\n      localStorage.setItem(key, finalValue);\n      resolve();\n    }\n  });\n}\n","\n/**\n * Convert youtube duration to readable format\n * \n * @param ISO_8601_string {string}\n */\nexport function niceDuration (ISO_8601_string: string) {\n  let time = ISO_8601_string.replace(\"PT\", \"\").toUpperCase();\n  let h = extract('H');\n  let m = extract('M');\n  let s = extract('S');\n  return h !== '00' ? [h, m, s].join(':') : [m, s].join(':');\n\n  function extract (stop: string) {\n      for (let i = 0; i < time.length; i++) {\n          if (time[i] === stop) {\n              let val = time.slice(0, i);\n              if (val.length === 1 && stop !== 'H') {\n                  val = '0' + val;\n              }\n              time = time.slice(i + 1);\n              return val;\n          }\n      }\n      return '00';\n  }\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Shorten number to thousands, millions, billions, etc.\n * http://en.wikipedia.org/wiki/Metric_prefix\n *\n * @param {number} num Number to shorten.\n * @param {number} [digits=0] The number of digits to appear after the decimal point.\n * @returns {string|number}\n *\n * @example\n * // returns '12.5k'\n * shortenLargeNumber(12543, 1)\n *\n * @example\n * // returns '-13k'\n * shortenLargeNumber(-12567)\n *\n * @example\n * // returns '51M'\n * shortenLargeNumber(51000000)\n *\n * @example\n * // returns 651\n * shortenLargeNumber(651)\n *\n * @example\n * // returns 0.12345\n * shortenLargeNumber(0.12345)\n */\nexport function shortenLargeNumber(num: number, digits: number = 0) {\n  let units = ['k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'],\n      decimal;\n\n  for(let i=units.length-1; i>=0; i--) {\n      decimal = Math.pow(1000, i+1);\n\n      if(num <= -decimal || num >= decimal) {\n          return +(num / decimal).toFixed(digits) + units[i];\n      }\n  }\n\n  return num;\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return Date & time in words\n * Stolen from: https://stackoverflow.com/a/37802747\n */\nexport const TimeAgo = (() => {\n  let self: any = {};\n\n  // Public Methods\n  self.locales = {\n    prefix: '',\n    sufix:  'ago',\n    \n    seconds: 'less than a minute',\n    minute:  'about a minute',\n    minutes: '%d minutes',\n    hour:    'about an hour',\n    hours:   'about %d hours',\n    day:     'a day',\n    days:    '%d days',\n    month:   'about a month',\n    months:  '%d months',\n    year:    'about a year',\n    years:   '%d years'\n  };\n  \n  self.inWords = (timeAgo: any) => {\n    let seconds = Math.floor((new Date() as any - parseInt(timeAgo)) / 1000),\n        separator = self.locales.separator || ' ',\n        words = self.locales.prefix + separator,\n        interval = 0,\n        intervals: any = {\n          year:   seconds / 31536000,\n          month:  seconds / 2592000,\n          day:    seconds / 86400,\n          hour:   seconds / 3600,\n          minute: seconds / 60\n        };\n    \n    let distance = self.locales.seconds;\n    \n    for (let key in intervals) {\n      interval = Math.floor(intervals[key]);\n      \n      if (interval > 1) {\n        distance = self.locales[key + 's'];\n        break;\n      } else if (interval === 1) {\n        distance = self.locales[key];\n        break;\n      }\n    }\n    \n    distance = distance.replace(/%d/i, interval);\n    words += distance + separator + self.locales.sufix;\n\n    return words.trim();\n  };\n  \n  return self;\n})();\n\n// -------------------------------------------------------------------\n\n/**\n * Return current date minus number of days before\n * \n * @param before {number}\n */\nexport function getDateBefore(before: number = 0): Date {\n  let date = new Date();\n  date.setDate(date.getDate() - before);\n  return date;\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Check if the given timestamp is in today's date\n * Stolen from: https://stackoverflow.com/a/40628566\n * \n * @param timestamp \n */\nexport function isInToday(timestamp: number) {\n  let today = new Date();\n  if (today.setHours(0, 0, 0, 0) === new Date(timestamp).setHours(0, 0, 0, 0)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Returns hours difference between two dates\n * Stolen from: https://www.w3resource.com/javascript-exercises/javascript-date-exercise-45.php\n * \n * @param dt1 \n * @param dt2 \n */\nexport function diffHours(dt1: Date, dt2: Date): number {\n  let diff = (dt2.getTime() - dt1.getTime()) / 1000;\n  diff /= (60 * 60);\n  return Math.abs(Math.round(diff));\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return a new RegExp object instance\n * \n * @param pattern \n * @param modifiers \n */\nexport function getRegex(pattern: string, modifiers: string): RegExp {\n  return new RegExp(pattern, modifiers);\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return size of an object\n * Stolen from: https://gist.github.com/zensh/4975495\n * \n * @param obj \n */\nexport function memorySizeOf(obj: any) {\n  let bytes = 0;\n\n  function sizeOf(obj: any) {\n      if(obj !== null && obj !== undefined) {\n          switch(typeof obj) {\n          case 'number':\n              bytes += 8;\n              break;\n          case 'string':\n              bytes += obj.length * 2;\n              break;\n          case 'boolean':\n              bytes += 4;\n              break;\n          case 'object':\n              let objClass = Object.prototype.toString.call(obj).slice(8, -1);\n              if(objClass === 'Object' || objClass === 'Array') {\n                  for(let key in obj) {\n                      if(!obj.hasOwnProperty(key)) continue;\n                      sizeOf(obj[key]);\n                  }\n              } else bytes += obj.toString().length * 2;\n              break;\n          }\n      }\n      return bytes;\n  }\n\n  function formatByteSize(bytes: number) {\n      if(bytes < 1024) return bytes + \" bytes\";\n      else if(bytes < 1048576) return(bytes / 1024).toFixed(3) + \" KiB\";\n      else if(bytes < 1073741824) return(bytes / 1048576).toFixed(3) + \" MiB\";\n      else return(bytes / 1073741824).toFixed(3) + \" GiB\";\n  }\n\n  return formatByteSize(sizeOf(obj));\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Create a new function that limits calls to func to once every given timeframe.\n * Stolen from: https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_throttle\n * \n * @param func \n * @param timeFrame \n */\nexport function throttle(callback: Function, timeFrame: number): Function {\n  let lastTime = 0;\n  return (...args: any) => {\n    let now = new Date().getTime();\n    if (now - lastTime >= timeFrame) {\n      callback(...args);\n      lastTime = now;\n    }\n  };\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Create a new function that calls func with thisArg and args.\n * Stolen from: https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_debounce\n * \n * @param func \n * @param wait \n */\nexport function debounce(func: Function, wait: number): Function {\n  let timeout: any = null;\n  return function(this: any) {\n    const context = this, args = arguments;\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n      func.apply(context, args);\n    }, wait);\n  };\n}\n\n/**\n * Generates 26 [a-z0-9] characters, yielding a UID that is both shorter and more unique than RFC compliant GUIDs.\n * Dashes can be trivially added if human-readability matters.\n * Stolen from: https://stackoverflow.com/a/13403498\n */\nexport function generateGuid() {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\n","/*\nThis Source Code Form is subject to the terms of the\nMozilla Public License, v. 2.0.\nIf a copy of the MPL was not distributed with this file,\nYou can obtain one at http://mozilla.org/MPL/2.0/.\nAuthor(s): XrXr, AXeL-dev\n\nThis module provide functions for making api certain YouTube Data API V3\nrequests. All functions return promise.\n*/\n\nimport { niceDuration, shortenLargeNumber } from './utils';\nimport { getFromStorage } from './storage';\n\nlet apiKey = process.env.REACT_APP_YOUTUBE_API_KEY;\n\n/**\n * Send API requests to youtube\n */\nconst apiRequest = (() => {\n    async function setApiKey() {\n        const [settings] = await getFromStorage('settings');\n        apiKey = settings?.apiKey?.length ? settings.apiKey : apiKey;\n    }\n\n    async function makeRequest (url: string) {\n        let response = await window.fetch(url);\n        //console.log(`HTTP ${response.status}: ${response.url}`);\n        if (!response.ok) {\n            const json = await response.json();\n            //console.log(json);\n            throw Error(json?.error?.errors[0] ? `<strong>${json.error.errors[0].reason}</strong>: ${json.error.errors[0].message.replace(/<\\/?[^>]+(>|$)/g, '')}` : `HTTP ${response.status}: ${response.url}`);\n        }\n        return await response.json();\n    }\n\n    function apiUrl (action: string, param: any) {\n        let url = \"https://www.googleapis.com/youtube/v3/\" + action + '?';\n        url += new URLSearchParams({...param, key: apiKey }).toString();\n        return url;\n    }\n\n    setApiKey();\n\n    return (action: string, apiArgs: any) => makeRequest(apiUrl(action, apiArgs));\n})();\n\n/**\n * Request a channel's activities after a date\n * Return a promise that resolves to api response\n * \n * @param channelId \n * @param after \n */\nfunction getChannelActivities (channelId: string, after: Date = new Date()) {\n    return apiRequest(\"activities\", {\n        part: \"snippet,contentDetails\",\n        channelId: channelId,\n        publishedAfter: after.toISOString(),\n        maxResults: 50\n    });\n}\n\n/**\n * Return video duration\n * \n * @param videoId \n */\nconst VIDEO_DOES_NOT_EXIST = Symbol(\"Video does not exist\");\nfunction getDuration (videoId: string) {\n    return apiRequest(\"videos\", {\n        part: \"contentDetails\",\n        fields: \"items/contentDetails/duration\",\n        id: videoId,\n    }).then(json => {\n        if (json.items.length === 0) {\n            throw VIDEO_DOES_NOT_EXIST;\n        }\n        return {\n            videoId,\n            duration: niceDuration(json.items[0].contentDetails.duration)\n        };\n    });\n}\n\n/**\n * Return video tags & duration\n * \n * @param videoId \n */\nfunction getTagsAndDuration (videoId: string) {\n    return apiRequest(\"videos\", {\n        part: \"snippet,contentDetails\",\n        fields: \"items/contentDetails/duration,items/snippet/tags\",\n        id: videoId,\n    }).then(res => {\n        res = res.items[0];\n        return {\n            duration: niceDuration(res.contentDetails.duration),\n            tags: (res.snippet && res.snippet.tags) || []\n        };\n    });\n}\n\n/**\n * Return video informations\n * \n * @param videoIdList \n */\nfunction getVideoInfo (videoIdList: string[]) {\n    let joinedIds = videoIdList.join(\",\");\n    return apiRequest(\"videos\", {\n        part: \"snippet,contentDetails,statistics,id\",\n        fields: \"items(id,contentDetails/duration,statistics/viewCount,snippet(title,channelTitle,channelId,publishedAt,thumbnails/medium))\",\n        id: joinedIds,\n        maxResults: 50, // not working when id is filled (which is the case here)\n    }).then(response => {\n        //console.log(response);\n        return response.items.map((item: any) => ({\n            id: item.id,\n            title: item.snippet.title,\n            url: 'https://www.youtube.com/watch?v=' + item.id,\n            duration: niceDuration(item.contentDetails.duration),\n            views: {\n                count: item.statistics.viewCount,\n                asString: shortenLargeNumber(item.statistics.viewCount),\n            },\n            publishedAt: new Date(item.snippet.publishedAt).getTime(),\n            thumbnail: item.snippet.thumbnails.medium.url,\n            channelId: item.snippet.channelId,\n            channelTitle: item.snippet.channelTitle,\n        }));\n    });\n}\n\n//getVideoInfo.batch_size = 50;\n\n/**\n * Request to search channel matching `query`. Return a promise that will\n * resolve to either [] or [channels]\n * \n * @param query \n * @param max \n */\nfunction searchChannel (query: string, max: number = 3) {\n    return apiRequest(\"search\", {\n        part: \"snippet\",\n        type: \"channel\",\n        order: \"relevance\",\n        q: query\n    }).then(responseJson => {\n        //console.log(responseJson);\n        let payLoad: any = [];\n        if (responseJson.pageInfo.totalResults > 0) {\n            const howMany = Math.min(responseJson.pageInfo.totalResults, max);\n            for (let i = 0; i < howMany; i++) {\n                if (responseJson.items[i]) {\n                    payLoad.push({\n                        title: responseJson.items[i].snippet.title,\n                        url: 'https://www.youtube.com/channel/' + responseJson.items[i].id.channelId + '/videos',\n                        description: responseJson.items[i].snippet.description,\n                        thumbnail: responseJson.items[i].snippet.thumbnails.medium.url,\n                        id: responseJson.items[i].id.channelId\n                    });\n                }\n            }\n        }\n        return payLoad;\n    });\n}\n\nexport {\n    searchChannel,\n    getDuration,\n    getChannelActivities,\n    getTagsAndDuration,\n    getVideoInfo,\n    VIDEO_DOES_NOT_EXIST,\n};\n","//import { browser } from \"webextension-polyfill-ts\";\n\ndeclare var browser: any;\n\nexport function isWebExtension(): boolean {\n  try {\n    return !!browser;\n  } catch(error) {\n    return false;\n  }\n}\n\nexport function createTab(url: string, isActive: boolean = true): Promise<any> {\n  return browser.tabs.create({\n    url: url,\n    active: isActive\n  });\n}\n\nexport function executeScript(tabId: number, code: string): void {\n  browser.tabs.executeScript(\n    tabId, {\n      code: code\n    }\n  );\n}\n\nexport function sendNotification(message: string, id?: string, type: string|any = 'basic'): void { // id will be auto-generated if empty\n  browser.notifications.create(id, {\n    type: type,\n    title: 'Youtube viewer',\n    iconUrl: 'icons/128.png',\n    message: message\n  });\n}\n\nexport function setBadgeText(text: string|number): void {\n  browser.browserAction.setBadgeText({\n    text: text === 0 ? '' : text.toString()\n  });\n}\n\nexport function setBadgeColors(backgroundColor: string, textColor: string): void {\n  if (isFirefox()) {\n    browser.browserAction.setBadgeTextColor({ color: textColor });\n  }\n  browser.browserAction.setBadgeBackgroundColor({ color: backgroundColor });\n}\n\nexport function getBadgeText(): Promise<string> {\n  return browser.browserAction.getBadgeText({});\n}\n\nexport function isFirefox(): boolean {\n  return navigator.userAgent.indexOf(\"Firefox\") !== -1;\n}\n\nexport function isChrome(): boolean {\n  return navigator.userAgent.indexOf(\"Chrome\") !== -1;\n}\n","import React from 'react';\nimport { Channel } from '../models/Channel';\nimport { Settings } from '../models/Settings';\nimport { Video } from '../models/Video';\nimport { getFromStorage } from '../helpers/storage';\nimport { getDateBefore } from '../helpers/utils';\nimport { getChannelActivities } from '../helpers/youtube';\nimport { isWebExtension, setBadgeText, setBadgeColors, getBadgeText, sendNotification, createTab } from '../helpers/browser';\nimport { Notification } from '../models/Notification';\n\ndeclare var browser: any;\n\nconst defaults: any = {\n  videosCheckRate: 30, // minute(s)\n  videosAnteriority: 1, // day(s)\n  videosPerChannel: 9,\n};\n\ninterface BackgroundProps { }\n\ninterface BackgroundState {\n  totalRecentVideosCount: number;\n  checkedChannels: {\n    [key: string]: { // key == channel.id\n      videosIds: string[],\n      url: string\n    }\n  };\n}\n\nclass Background extends React.Component<BackgroundProps, BackgroundState> {\n  constructor(props: BackgroundProps) {\n    super(props);\n    this.state = {\n      totalRecentVideosCount: 0,\n      checkedChannels: {}\n    };\n    if (isWebExtension()) {\n      this.init();\n      console.log('background init executed.');\n    }\n  }\n\n  async init() {\n    setBadgeColors('#666', '#fff');\n    const rate = await this.getAutoCheckRate();\n    this.log('Rate:', rate);\n    this.autoCheckLoop(rate);\n    // Handle click on notifications\n    browser.notifications.onClicked.addListener((notificationId: string) => {\n      this.log('Notification clicked:', notificationId);\n      const [ , id ] = notificationId.split('::');\n      const url = this.state.checkedChannels[id]?.url;\n      if (url?.length) {\n        createTab(url);\n      }\n    });\n  }\n\n  log(message: any, ...params: any) {\n    //console.log(message, ...params); // comment/uncomment this to manually enable/disable logs\n  }\n\n  autoCheckLoop(rate: number) {\n    setTimeout(async () => {\n      // Get storage data\n      const [channels, settings, cache] = await getFromStorage('channels', 'settings', 'cache');\n      this.log('Storage data:', { channels: channels, settings: settings, cache: cache });\n      // Check for recent videos\n      const [recentVideosCount, notifications] = await this.getRecentVideosCount(channels, settings, cache);\n      const badgeText: string = await getBadgeText();\n      let { totalRecentVideosCount } = this.state;\n      this.log('Recent videos count:', recentVideosCount);\n      this.log('Badge text:', badgeText);\n      if (badgeText.length) { // if badge text wasn't reseted yet (means that the user didn't yet notice it), we increment the total count\n        totalRecentVideosCount += recentVideosCount;\n      } else {\n        totalRecentVideosCount = recentVideosCount;\n      }\n      this.setState({ totalRecentVideosCount: totalRecentVideosCount });\n      this.log('Total count:', totalRecentVideosCount);\n      setBadgeText(totalRecentVideosCount);\n      // Notify\n      if (settings?.enableRecentVideosNotifications && recentVideosCount > 0) {\n        notifications.forEach((notification: Notification) => {\n          const id = notification.id?.length ? new Date().getTime() + '::' + notification.id : '';\n          sendNotification(notification.message, id);\n        });\n      }\n      // Re-loop\n      this.autoCheckLoop(settings?.autoVideosCheckRate || defaults.videosCheckRate);\n    }, rate * 60 * 1000); // convert minutes to milliseconds\n  }\n\n  getAutoCheckRate(): Promise<number> {\n    return new Promise(async (resolve, reject) => {\n      const [settings] = await getFromStorage('settings');\n      resolve(settings?.autoVideosCheckRate || defaults.videosCheckRate);\n    });\n  }\n\n  getRecentVideosCount(channels: Channel[], settings: Settings, cache: any): Promise<[number, Notification[]]> {\n\n    return new Promise((resolve, reject) => {\n  \n      let count: number = 0;\n      let notifications: Notification[] = [];\n      let promises: Promise<any>[] = [];\n      let { checkedChannels } = this.state;\n  \n      channels.filter((channel: Channel) => !channel.isHidden && !channel.notifications?.isDisabled).forEach((channel) => {\n  \n        promises.push(\n          getChannelActivities(channel.id, getDateBefore(defaults.videosAnteriority)).then((results) => {\n            this.log('activities of', channel.title, results);\n            if (results?.items) {\n              // get recent videos ids\n              const videosIds: string[] = results.items.map((item: any) => item.contentDetails.upload?.videoId).filter((id: string) => id?.length);\n              const cacheVideosIds: string[] = cache[channel.id]?.length ? cache[channel.id].map((video: Video) => video.id) : [];\n              const recentVideosIds: string[] = videosIds.filter((videoId: string, index: number) => videosIds.indexOf(videoId) === index) // remove duplicates\n                                                         .slice(0, settings?.videosPerChannel || defaults.videosPerChannel)\n                                                         .filter((videoId: string) => !checkedChannels[channel.id] || checkedChannels[channel.id].videosIds.indexOf(videoId) === -1) // remove videos already checked\n                                                         .filter((videoId: string) => cacheVideosIds.indexOf(videoId) === -1); // remove videos already in cache\n              // set recent videos count\n              if (recentVideosIds.length) {\n                this.log(recentVideosIds.length, 'recent videos');\n                // update checked videos ids\n                if (!checkedChannels[channel.id]) {\n                  checkedChannels[channel.id] = {\n                    videosIds: [],\n                    url: channel.url\n                  };\n                }\n                checkedChannels[channel.id].videosIds.push(...recentVideosIds);\n                // generate notification messages\n                const suffix = recentVideosIds.length > 1 ? 's' : '';\n                notifications.push({\n                  message: `${channel.title} posted ${recentVideosIds.length} recent video${suffix}`,\n                  id: channel.id\n                });\n                // update count\n                count += recentVideosIds.length;\n              } else {\n                this.log('no recent videos for this channel');\n              }\n            }\n          }).catch((error: Error) => {\n            console.error(error);\n          })\n        );\n  \n      });\n  \n      Promise.all(promises).finally(() => {\n        this.setState({ checkedChannels: checkedChannels });\n        resolve([count, notifications]);\n      });\n  \n    });\n  \n  }\n\n  render() {\n    return (\n      <span>Silence is golden!</span>\n    );\n  }\n}\n\nexport default Background;\n","\nexport interface Channel {\n  id: string,\n  thumbnail: string,\n  title: string,\n  url: string,\n  description: string,\n  isHidden: boolean,\n  notifications: ChannelNotifications\n}\n\nexport interface ChannelNotifications {\n  isDisabled: boolean\n}\n\nexport enum ChannelSelection {\n  None = -1,\n  All = -2,\n  RecentVideos = -3,\n  TodaysVideos = -4,\n  WatchLaterVideos = -5\n}\n","import React from 'react';\n\n// Stolen from: https://stackoverflow.com/a/45810395\nexport const RawHTML = ({children, className = ''}: any): any =>\n  <span className={className} dangerouslySetInnerHTML={{ __html: children.replace(/\\n/g, '<br />')}} />;\n","import { makeStyles, Theme, fade } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      //marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(6),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  clearButton: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    margin: theme.spacing(0.75),\n    color: theme.palette.common.white,\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 4, 1, 6),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 240,\n      '&:focus': {\n        width: 300,\n      },\n    },\n  },\n  poper: {\n    position: 'absolute',\n    width: '100%',\n    zIndex: 1,\n    margin: '4px 0',\n    overflow: 'hidden',\n    borderRadius: '4px',\n    boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n  },\n  listbox: {\n    position: 'relative',\n    margin: 0,\n    padding: '8px 0',\n    border: 'none',\n    listStyle: 'none',\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: '40vh',\n    '& li': {\n      padding: '6px 16px'\n    },\n    '& li[data-focus=\"true\"]': {\n      backgroundColor: 'rgba(0, 0, 0, 0.08)',\n      cursor: 'pointer',\n    },\n    '& li:active': {\n      backgroundColor: 'rgba(0, 0, 0, 0.14)'\n    },\n  },\n  avatar: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n}));\n","import React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { searchChannel } from '../../helpers/youtube';\nimport Avatar from '@material-ui/core/Avatar';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Channel } from '../../models/Channel';\nimport { getRegex, debounce } from '../../helpers/utils';\nimport { RawHTML } from '../shared/RawHTML';\nimport { useStyles } from './SearchChannelInput.styles';\n\ninterface SearchChannelInputProps {\n  onSelect: Function;\n  onError: Function;\n}\n\nexport default function SearchChannelInput(props: SearchChannelInputProps) {\n  const { onSelect, onError } = props;\n  const classes = useStyles();\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState<Channel[]>([]);\n  const {\n    getRootProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n  } = useAutocomplete({\n    id: 'search-autocomplete',\n    options: options,\n    getOptionLabel: option => {\n      //console.log(option);\n      if (option?.title) {\n        setInputValue(option.title);\n        return option.title;\n      }\n      return option;\n    },\n    value: inputValue,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const fetch = React.useMemo(\n    () =>\n      debounce((input: any, callback: Function) => {\n        //console.log(input);\n        searchChannel(input.value, 5).then((results: Channel[]) => {\n          //console.log(results);\n          callback(results);\n        }).catch((error) => {\n          onError(error);\n        });\n      }, 200),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (inputValue === '') {\n      setOptions([]);\n      return undefined;\n    }\n\n    fetch({ value: inputValue }, (results?: Channel[]) => {\n      if (active) {\n        setOptions(results || []);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [inputValue, fetch]);\n\n  return (\n    <div className={classes.search}>\n      <div {...getRootProps()}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Search for a channel…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ ...getInputProps(), 'aria-label': 'search' }}\n          onChange={handleChange}\n        />\n        {inputValue?.length > 0 && (\n          <IconButton aria-label=\"clear\" size=\"small\" className={classes.clearButton} onClick={() => setInputValue('')}>\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        )}\n      </div>\n      {groupedOptions.length > 0 ? (\n        <div className={classes.poper}>\n          <ul className={classes.listbox} {...getListboxProps()}>\n            {groupedOptions.map((option, index) => (\n              <li {...getOptionProps({ option, index })}>\n                <Grid container alignItems=\"center\" onClick={() => onSelect(option)}>\n                  <Grid item>\n                    <Avatar className={classes.avatar} alt={option.title} src={option.thumbnail} />\n                  </Grid>\n                  <Grid item xs>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      <RawHTML>{option.title.replace(getRegex('(' + inputValue + ')', 'gi'), `<strong>$1</strong>`)}</RawHTML>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","\nexport enum SortOrder {\n  ASC = 'asc',\n  DESC = 'desc'\n}\n","import { makeStyles, Theme } from '@material-ui/core/styles';\n\nexport const videoImageSize = {\n  width: 210,\n  height: 118\n};\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  anchor: {\n    textDecoration: 'none',\n    color: 'inherit',\n    display: 'inline-block',\n    '&:hover': {\n      textDecoration: 'none',\n    }\n  },\n  imageContainer: {\n    position: 'relative',\n    '&:hover .overlay': {\n      opacity: 1,\n    },\n    '&:hover .options': {\n      top: '50%',\n      left: '50%',\n      opacity: 1,\n    }\n  },\n  image: {\n    width: videoImageSize.width,\n    height: videoImageSize.height,\n    display: 'inherit'\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n    opacity: 0,\n    transition: 'all 0.4s ease-in-out 0s',\n  },\n  options: {\n    position: 'absolute',\n    textAlign: 'center',\n    paddingLeft: '1em',\n    paddingRight: '1em',\n    width: '100%',\n    top: '50%',\n    left: '50%',\n    opacity: 0,\n    transform: 'translate(-50%, -50%)',\n    transition: 'all 0.3s ease-in-out 0s',\n  },\n  optionsButton: {\n    color: '#fff',\n    margin: theme.spacing(0.5),\n  },\n  optionsIcon: {\n    fontSize: '1.5em',\n    //verticalAlign: 'middle',\n    '&.bigger': {\n      fontSize: '2.1em',\n    }\n  },\n  visibilityIconBox: {\n    display: 'flex',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    margin: '4px',\n    color: '#eee',\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    padding: '3px 5px',\n    borderRadius: '2px',\n    '&:hover': {\n      color: '#fff'\n    }\n  },\n  visibilityIcon: {\n    fontSize: '1.22em',\n  },\n  duration: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    margin: '4px',\n    color: '#fff',\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    padding: '2px 4px',\n    borderRadius: '2px'\n  }\n}));\n","import { atom } from 'jotai';\nimport { Video, VideosSortOrder } from '../models/Video';\nimport { ChannelSelection } from '../models/Channel';\nimport { SortOrder } from '../models/SortOrder';\n\nexport const videosAtom = atom([] as Video[]);\n\nexport const defaultVideosSortOrder: SortOrder = SortOrder.DESC;\n\nexport const videosSortOrderAtom = atom({\n  [ChannelSelection.All]: SortOrder.DESC,\n  [ChannelSelection.TodaysVideos]: SortOrder.DESC,\n  [ChannelSelection.RecentVideos]: SortOrder.DESC,\n  [ChannelSelection.WatchLaterVideos]: SortOrder.ASC\n} as VideosSortOrder);\n\nexport const setVideosSortOrderAtom = atom( // write-only\n  null,\n  (get, set, args: VideosSortOrder) => {\n    set(videosSortOrderAtom, {\n      ...get(videosSortOrderAtom),\n      ...args\n    });\n  }\n);\n","import { atom } from 'jotai';\nimport { ChannelSelection } from '../models/Channel';\nimport { Settings } from '../models/Settings';\n\nexport const defaultSettings: Settings = {\n  defaultChannelSelection: ChannelSelection.All,\n  videosPerChannel: 9,\n  videosAnteriority: 30, // days\n  sortVideosBy: 'date',\n  autoVideosCheckRate: 30, // minutes\n  enableRecentVideosNotifications: true,\n  autoPlayVideos: false,\n  openVideosInInactiveTabs: false,\n  openChannelsOnNameClick: false,\n  hideEmptyChannels: true,\n  autoCloseDrawer: false,\n  autoClearRecentVideos: true,\n  autoRemoveWatchLaterVideos: true,\n  autoClearCache: false\n};\n\nexport const settingsAtom = atom(defaultSettings);\n","import { atom } from 'jotai';\nimport { Video } from '../models/Video';\n\nexport interface Cache {\n  [key: string]: Video[] // key == channel id\n}\n\nexport const cacheAtom = atom({} as Cache);\n","import { atom } from 'jotai';\nimport { Channel, ChannelSelection } from '../models/Channel';\n\nexport const channelsAtom = atom([] as Channel[]);\n\nexport const selectedChannelIndexAtom = atom(ChannelSelection.All);\n","import { atom } from 'jotai';\nimport { Getter } from 'jotai/core/types';\nimport { SnackbarOptions, Snackbar } from '../models/Snackbar';\n\nexport const defaultSnackbarOptions: Omit<SnackbarOptions, 'message'> = {\n  icon: 'info',\n  autoHideDuration: 5000,\n  showRefreshButton: false\n};\n\nexport const snackbarAtom = atom({\n  isOpen: false,\n  message: '',\n  icon: defaultSnackbarOptions.icon,\n  autoHideDuration: defaultSnackbarOptions.autoHideDuration,\n  showRefreshButton: defaultSnackbarOptions.showRefreshButton\n} as Snackbar);\n\nconst snackbarClosedState = (get: Getter) => ({\n  ...get(snackbarAtom), // previous state\n  isOpen: false,\n  key: undefined\n});\n\nexport const openSnackbarAtom = atom( // write-only\n  null,\n  (get, set, args: SnackbarOptions) => {\n    // close old snackbar\n    if (get(snackbarAtom).isOpen) {\n      set(snackbarAtom, snackbarClosedState(get));\n    }\n    // open a new one\n    set(snackbarAtom, {\n      isOpen: true,\n      message: args.message || args as any,\n      key: new Date().getTime(),\n      icon: args.icon || defaultSnackbarOptions.icon,\n      autoHideDuration: args.autoHideDuration || defaultSnackbarOptions.autoHideDuration,\n      showRefreshButton: args.showRefreshButton !== undefined ? args.showRefreshButton : defaultSnackbarOptions.showRefreshButton // don't use OR operator with boolean values, since false || true === true (not false)\n    });\n  }\n);\n\nexport const closeSnackbarAtom = atom( // write-only\n  null,\n  (get, set) => set(snackbarAtom, snackbarClosedState(get))\n);\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Video } from '../../models/Video';\nimport { TimeAgo } from '../../helpers/utils';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { ChannelSelection } from '../../models/Channel';\nimport { useStyles } from './VideoRenderer.styles';\nimport { isWebExtension, createTab, executeScript } from '../../helpers/browser';\nimport { useAtom } from 'jotai';\nimport { useUpdateAtom } from 'jotai/utils';\nimport { videosAtom } from '../../atoms/videos';\nimport { settingsAtom } from '../../atoms/settings';\nimport { cacheAtom } from '../../atoms/cache';\nimport { selectedChannelIndexAtom } from '../../atoms/channels';\nimport { openSnackbarAtom } from '../../atoms/snackbar';\n\ninterface VideoRendererProps {\n  video: Video;\n}\n\nexport default function VideoRenderer(props: VideoRendererProps) {\n  const { video } = props;\n  const classes = useStyles();\n  const [selectedChannelIndex] = useAtom(selectedChannelIndexAtom);\n  const [settings] = useAtom(settingsAtom);\n  const [videos, setVideos] = useAtom(videosAtom);\n  const [cache, setCache] = useAtom(cacheAtom);\n  const openSnackbar = useUpdateAtom(openSnackbarAtom);\n\n  const openVideo = (event: Event, video: Video) => {\n    event.stopPropagation();\n    if (isWebExtension() && video?.url) {\n      event.preventDefault();\n      createTab(video.url, !settings.openVideosInInactiveTabs).then((tab: any) => {\n        if (settings.autoPlayVideos) {\n          executeScript(tab.id, `document.querySelector('#player video').play();`);\n        }\n      });\n    }\n    const videoIndex = markAsWatched(video);\n    if (settings.autoRemoveWatchLaterVideos) {\n      removeVideoFromWatchLater(video, null, videoIndex);\n    }\n  };\n\n  const markAsWatched = (video: Video): number => {\n    const videoIndex: number = getVideoIndex(video);\n    if (videoIndex > -1 && !cache[video.channelId][videoIndex].isWatched) {\n      cache[video.channelId][videoIndex].isWatched = true;\n      setCache({...cache});\n    }\n    return videoIndex;\n  };\n\n  const getVideoIndex = (video: Video) => {\n    return cache[video?.channelId].findIndex((v: Video) => v.id === video?.id);\n  };\n\n  const preventClick = (event: Event) => {\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  const addVideoToWatchLater = (event: Event, video: Video) => {\n    preventClick(event);\n    const videoIndex: number = getVideoIndex(video);\n    if (videoIndex > -1) {\n      if (!cache[video.channelId][videoIndex].isToWatchLater) {\n        cache[video.channelId][videoIndex].isToWatchLater = true;\n        setCache({...cache});\n        openSnackbar({\n          message: 'Video added to watch later list!',\n          icon: 'success',\n          autoHideDuration: 3000\n        });\n      } else {\n        openSnackbar({\n          message: 'Video is already on watch later list!',\n          autoHideDuration: 3000\n        });\n      }\n    }\n  };\n\n  const removeVideoFromWatchLater = (video: Video, event?: Event|null, index: number = -1) => {\n    if (event) {\n      preventClick(event);\n    }\n    const videoIndex: number = index >= 0 ? index : getVideoIndex(video);\n    if (videoIndex > -1 && cache[video.channelId][videoIndex].isToWatchLater) {\n      // exclude video from shown videos\n      if (selectedChannelIndex === ChannelSelection.WatchLaterVideos) {\n        setVideos(videos.filter((v: Video) => v.id !== video.id));\n      }\n      // update cache\n      cache[video.channelId][videoIndex].isToWatchLater = false;\n      setCache({...cache});\n    }\n  };\n\n  return (\n    <Link href={video.url} className={classes.anchor} target=\"_blank\" rel=\"noopener\" onClick={(event: any) => openVideo(event, video)}>\n      <Box className={classes.imageContainer}>\n        <img className={classes.image} alt=\"\" src={video.thumbnail} />\n        <Box className={`${classes.overlay} overlay`}></Box>\n        <Box className={`${classes.options} options`}>\n          {selectedChannelIndex !== ChannelSelection.WatchLaterVideos ? !video.isToWatchLater && (\n            <IconButton size=\"small\" className={classes.optionsButton} onClick={(event: any) => addVideoToWatchLater(event, video)}>\n              <Tooltip title=\"Watch later\" aria-label=\"watch-later\">\n                <WatchLaterIcon className={classes.optionsIcon} />\n              </Tooltip>\n            </IconButton>\n          ) : video.isToWatchLater && (\n            <IconButton size=\"small\" className={classes.optionsButton} onClick={(event: any) => removeVideoFromWatchLater(video, event)}>\n              <Tooltip title=\"Remove\" aria-label=\"remove\">\n                <DeleteIcon className={classes.optionsIcon} />\n              </Tooltip>\n            </IconButton>\n          )}\n          <IconButton size=\"small\" className={classes.optionsButton}>\n            <Tooltip title=\"Watch now\" aria-label=\"watch-now\">\n              <PlayArrowIcon className={`${classes.optionsIcon} bigger`} />\n            </Tooltip>\n          </IconButton>\n        </Box>\n        {video.isWatched && (\n          <Box className={classes.visibilityIconBox} onClick={(event: any) => preventClick(event)}>\n            <Tooltip title=\"Already watched\" aria-label=\"already-watched\">\n              <VisibilityIcon className={classes.visibilityIcon} />\n            </Tooltip>\n          </Box>\n        )}\n        <Typography variant=\"caption\" className={classes.duration}>\n          {video.duration}\n        </Typography>\n      </Box>\n      <Box pr={2} mt={1}>\n        <Typography gutterBottom variant=\"body2\">\n          {video.title}\n        </Typography>\n        <Typography display=\"block\" variant=\"caption\" color=\"textSecondary\">\n          {video.channelTitle}\n        </Typography>\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          {`${video.views.asString || video.views} • ${TimeAgo.inWords(video.publishedAt)}`}\n        </Typography>\n      </Box>\n    </Link>\n  );\n}\n","// no need to import process Object since it will be defined by create-react-app\n\nexport const isDevEnv: boolean = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\nexport class debug {\n\n  static log(message: any, ...params: any) {\n    isDevEnv && console.log(message, ...params);\n  }\n  \n  static warn(message: any, ...params: any) {\n    isDevEnv && console.warn(message, ...params);\n  }\n\n}\n","\nexport const styles = {\n  grid: {\n    minWidth: '428px'\n  }\n};\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Video } from '../../models/Video';\nimport VideoRenderer from './VideoRenderer';\nimport { debug } from '../../helpers/debug';\nimport { styles } from './VideoGrid.styles';\n\ninterface VideoGridProps {\n  loading?: boolean;\n  videos: Video[];\n  maxPerChannel?: number;\n  maxSkeletons?: number;\n}\n\nexport default function VideoGrid(props: VideoGridProps) {\n  const { videos, loading = false, maxPerChannel = 9, maxSkeletons = 9 } = props;\n  const [preventLongPress, setPreventLongPress] = React.useState(false);\n  let timeout: any = null;\n\n  const handleMouseEvent = (event: any) => {\n    debug.log(event.type, { preventLongPress: preventLongPress });\n    if (event.type === 'mousedown') {\n      setPreventLongPress(false); // always reset preventLongPress state on mousedown\n      timeout = setTimeout(() => {\n        // delay of 200 ms used here to wait for the click event\n        // if it fires immediately after the mousedown event then preventLongPress value will be false, otherwise it's probably a long press click\n        setPreventLongPress(true);\n      }, 200);\n    } else {\n      if (!preventLongPress) {\n        return true;\n      }\n      setPreventLongPress(false);\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    return false;\n  };\n\n  React.useEffect(() => {\n    return () => { // equivalent to componentWillUnmount\n      if (timeout) {\n        clearTimeout(timeout); // Fix warning: Can't perform a React state update on an unmounted component.\n      }\n    };\n  });\n\n  return (\n    <Grid container style={styles.grid} onMouseDown={(event: any) => handleMouseEvent(event)} onClickCapture={(event: any) => handleMouseEvent(event)}>\n      {(loading ? Array.from(new Array(Math.min(maxPerChannel, maxSkeletons))) : videos.slice(0, maxPerChannel)).map((video, index) => (\n        <Box key={index} width={210} marginRight={0.5} marginBottom={3} draggable=\"false\">\n          {video ? (\n            <VideoRenderer video={video} ></VideoRenderer>\n          ) : (\n            <React.Fragment>\n              <Skeleton variant=\"rect\" width={210} height={118} />\n              <Box pt={0.5}>\n                <Skeleton />\n                <Skeleton width=\"60%\" />\n              </Box>\n            </React.Fragment>\n          )}\n        </Box>\n      ))}\n    </Grid>\n  );\n}\n","import { makeStyles, Theme } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme: Theme) => ({\n  breadcrumb: {\n    marginBottom: theme.spacing(2.5),\n  },\n  divider: {\n    marginBottom: theme.spacing(2.5),\n  },\n  link: {\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    outline: 'none',\n    '&:hover': {\n      backgroundColor: 'transparent'\n    },\n  },\n  title: {\n    marginLeft: theme.spacing(1),\n  },\n  youtube: {\n    '&:hover': {\n      color: '#f44336',\n    },\n  },\n  box: {\n    '&:last-child': {\n      '& hr.divider': {\n        display: 'none'\n      }\n    }\n  }\n}));\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport Link from '@material-ui/core/Link';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Video } from '../../models/Video';\nimport { Channel } from '../../models/Channel';\nimport { Settings } from '../../models/Settings';\nimport VideoGrid from './VideoGrid';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOff';\nimport { isWebExtension } from '../../helpers/browser';\nimport { useStyles } from './MultiVideoGrid.styles';\n\ninterface MultiVideoGridProps {\n  loading?: boolean;\n  channels: Channel[];\n  videos: Video[];\n  settings: Settings;\n  maxPerChannel?: number;\n  maxVisible?: number;\n  onSelect: Function;\n  onSave: Function;\n  onRefresh: Function;\n}\n\nexport default function MultiVideoGrid(props: MultiVideoGridProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { channels, videos, settings, loading = false, maxPerChannel = 9, maxVisible = 3, onSelect, onSave, onRefresh } = props;\n  const [expandedChannelsIndexes, setExpandedChannelsIndexes] = React.useState<number[]>([]);\n\n  const hideChannel = (index: number) => {\n    channels[index].isHidden = true;\n    onSave([...channels]);\n    onRefresh();\n  };\n\n  const disableChannelNotifications = (index: number) => {\n    toggleChannelNotifications(index, false);\n  };\n\n  const enableChannelNotifications = (index: number) => {\n    toggleChannelNotifications(index, true);\n  };\n\n  const toggleChannelNotifications = (index: number, activate: boolean) => {\n    channels[index].notifications = {\n      ...channels[index].notifications,\n      isDisabled: !activate\n    };\n    onSave([...channels]);\n  };\n\n  const onChannelNameClick = (event: any, channel: Channel, index: number) => {\n    if (!settings?.openChannelsOnNameClick) {\n      event.preventDefault();\n      onSelect(channel, index);\n    }\n  };\n\n  return (\n    <Box overflow=\"hidden\" className={classes.box}>\n      {channels.map((channel: Channel, index: number) => {\n        if (channel.isHidden) {\n          // eslint-disable-next-line\n          return;\n        }\n        const channelVideos: Video[] = videos.filter((video: Video) => video.channelId === channel.id);\n        // hide empty channels\n        if (!loading && settings.hideEmptyChannels && channelVideos.length === 0) {\n          // eslint-disable-next-line\n          return;\n        }\n        return (\n          <Box key={index}>\n            <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumb}>\n              <Link color=\"inherit\" className={classes.link} href={channel.url} target=\"_blank\" rel=\"noopener\" onClick={(event: any) => onChannelNameClick(event, channel, index)}>\n                <Avatar alt={channel.title} src={channel.thumbnail} />\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" className={classes.title}>\n                  {channel.title}\n                </Typography>\n              </Link>\n              {!settings?.openChannelsOnNameClick && (\n                <Link color=\"inherit\" className={`${classes.link} ${classes.youtube}`} href={channel.url} target=\"_blank\" rel=\"noopener\">\n                  <Tooltip title=\"Open channel\" aria-label=\"open-channel\">\n                    <YouTubeIcon />\n                  </Tooltip>\n                </Link>\n              )}\n              <IconButton size=\"small\" className={classes.link} onClick={() => hideChannel(index)}>\n                <Tooltip title=\"Hide channel\" aria-label=\"hide-channel\">\n                  <VisibilityOffIcon />\n                </Tooltip>\n              </IconButton>\n              {isWebExtension() && settings.enableRecentVideosNotifications && (channel.notifications?.isDisabled ? (\n                <IconButton size=\"small\" className={classes.link} onClick={() => enableChannelNotifications(index)}>\n                  <Tooltip title=\"Enable notifications\" aria-label=\"enable-channel-notifiactions\">\n                    <NotificationsActiveIcon />\n                  </Tooltip>\n                </IconButton>\n              ) : (\n                <IconButton size=\"small\" className={classes.link} onClick={() => disableChannelNotifications(index)}>\n                  <Tooltip title=\"Disable notifications\" aria-label=\"disable-channel-notifiactions\">\n                    <NotificationsOffIcon />\n                  </Tooltip>\n                </IconButton>\n              ))}\n            </Breadcrumbs>\n            <VideoGrid\n              videos={expandedChannelsIndexes.indexOf(index) > -1 ? channelVideos : channelVideos.slice(0, maxVisible)}\n              loading={loading}\n              maxPerChannel={maxPerChannel}\n              maxSkeletons={maxVisible}\n            />\n            {channelVideos.length > maxVisible && expandedChannelsIndexes.indexOf(index) === -1 && (\n              <Tooltip title=\"Show more\" aria-label=\"show-more\">\n                <IconButton edge=\"end\" aria-label=\"show-more\" size=\"small\" style={{ marginBottom: theme.spacing(2.5) }} onClick={() => setExpandedChannelsIndexes([...expandedChannelsIndexes, index])}>\n                  <MoreHorizIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            )}\n            <Divider className={`divider ${classes.divider}`} />\n          </Box>\n      )}\n    )}\n    </Box>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { RawHTML } from './RawHTML';\n\ninterface ConfirmationDialogProps {\n  open: boolean;\n  title: string;\n  description: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n}\n\nexport function ConfirmationDialog(props: ConfirmationDialogProps) {\n  const { open, title, description, confirmButtonText = 'Confirm', cancelButtonText = 'Cancel', onClose, onConfirm } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => onClose()}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <RawHTML>{description}</RawHTML>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose()} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={() => onConfirm()} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { RawHTML } from './RawHTML';\n\ninterface ImportDialogProps {\n  open: boolean;\n  title: string;\n  description: string;\n  textFieldId: string;\n  textFieldLabel: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n  onValidate: Function;\n}\n\nexport function ImportDialog(props: ImportDialogProps) {\n  const { open, title, description, textFieldId, textFieldLabel, confirmButtonText = 'Import', cancelButtonText = 'Cancel', onClose, onConfirm, onValidate } = props;\n  const [textFieldError, setTextFieldError] = React.useState(false);\n\n  const confirm = () => {\n    try {\n      const json = (document.getElementById(textFieldId) as any).value;\n      const data = JSON.parse(json);\n      const isValid = onValidate(data);\n      setTextFieldError(!isValid); // == false when isValid is true & vice versa\n      if (isValid) {\n        onConfirm(data);\n      }\n    } catch(error) {\n      setTextFieldError(true);\n    }\n  };\n\n  const close = () => {\n    setTextFieldError(false);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={close}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <RawHTML>{description}</RawHTML>\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id={textFieldId}\n          label={textFieldLabel}\n          error={textFieldError}\n          multiline\n          rows=\"10\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={close} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={confirm} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { isNumber } from '../../helpers/parser';\n\ninterface MoveToPositionDialogProps {\n  open: boolean;\n  title: string;\n  min?: number;\n  max?: number;\n  step?: number;\n  positionFieldId: string;\n  positionFieldLabel: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n}\n\nexport function MoveToPositionDialog(props: MoveToPositionDialogProps) {\n  const { open, title, min = 0, max = 100, step = 1, positionFieldId, positionFieldLabel, confirmButtonText = 'Move', cancelButtonText = 'Cancel', onClose, onConfirm } = props;\n  const [positionFieldError, setPositionFieldError] = React.useState(false);\n\n  const confirm = () => {\n    const position = (document.getElementById(positionFieldId) as any).value;\n    const isValid = isNumber(position);\n    setPositionFieldError(!isValid); // == false when isValid is true & vice versa\n    if (isValid) {\n      onConfirm(+position);\n    }\n  };\n\n  const close = () => {\n    setPositionFieldError(false);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={close}\n      aria-labelledby=\"alert-dialog-title\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          id={positionFieldId}\n          label={positionFieldLabel}\n          error={positionFieldError}\n          inputProps={{ min: min, max: max, step: step }}\n          defaultValue={min}\n          type=\"number\"\n          size=\"small\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={close} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={confirm} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","\nexport function isNumber(value: string) {\n  return !isNaN(+value) && /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/.test(value);\n}\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    channelsOptionsIcon: {\n      top: '50%',\n      right: '16px',\n      position: 'absolute',\n      transform: 'translateY(-50%)',\n    },\n    menuIcon: {\n      fontSize: 20,\n      marginRight: theme.spacing(1),\n      verticalAlign: 'middle',\n    },\n    subheader: {\n      position: 'relative',\n    }\n  }),\n);\n","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport RootRef from '@material-ui/core/RootRef';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Channel, ChannelSelection } from '../../models/Channel';\nimport { ConfirmationDialog } from '../shared/ConfirmationDialog';\nimport { ImportDialog } from '../shared/ImportDialog';\nimport { MoveToPositionDialog } from '../shared/MoveToPositionDialog';\nimport { download } from '../../helpers/download';\nimport { isWebExtension, createTab, isFirefox } from '../../helpers/browser';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport ControlCameraIcon from '@material-ui/icons/ControlCamera';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TodayIcon from '@material-ui/icons/Today';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOff';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport { useStyles } from './ChannelList.styles';\nimport { memorySizeOf } from '../../helpers/utils';\nimport { useAtom } from 'jotai';\nimport { useUpdateAtom, useAtomValue } from 'jotai/utils';\nimport { cacheAtom } from '../../atoms/cache';\nimport { settingsAtom } from '../../atoms/settings';\nimport { openSnackbarAtom } from '../../atoms/snackbar';\nimport { videosSortOrderAtom, setVideosSortOrderAtom, defaultVideosSortOrder } from '../../atoms/videos';\nimport { SortOrder } from '../../models/SortOrder';\n\nconst getListStyle = (isDraggingOver: boolean) => ({\n  //background: isDraggingOver ? 'lightblue' : 'lightgrey',\n});\n\nconst getListItemStyle = (isDragging: boolean, isHidden: boolean, draggableStyle: any) => ({\n  // styles we need to apply on draggables\n  ...draggableStyle,\n  ...(isDragging && {\n    background: \"rgb(235,235,235)\"\n  }),\n  ...(isHidden && {\n    opacity: 0.5,\n    textDecoration: \"line-through\"\n  })\n});\n\n// a little function to help us with reordering the dnd result\nconst reorder = (list: any, startIndex: number, endIndex: number) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\ninterface ChannelListProps {\n  className?: string;\n  channels: Channel[];\n  selectedIndex: number;\n  todaysVideosCount: number;\n  recentVideosCount: number;\n  watchLaterVideosCount: number;\n  onShowAll: Function;\n  onShowTodaysVideos: Function;\n  onShowRecentVideos: Function;\n  onShowWatchLaterVideos: Function;\n  onRefresh: Function;\n  onSelect: Function;\n  onDelete: Function;\n  onSave: Function;\n  onSelectedIndexChange: Function;\n  onClearRecentVideos: Function;\n  onAddVideosToWatchLater: Function;\n  onClearWatchLaterVideos: Function;\n  onImport: Function;\n}\n\nexport function ChannelList(props: ChannelListProps) {\n  const { className, channels, selectedIndex = ChannelSelection.All,\n          todaysVideosCount, recentVideosCount, watchLaterVideosCount,\n          onShowAll, onShowTodaysVideos, onShowRecentVideos, onShowWatchLaterVideos,\n          onRefresh, onSelect, onDelete, onSave, onSelectedIndexChange, onClearRecentVideos,\n          onAddVideosToWatchLater, onClearWatchLaterVideos, onImport } = props;\n  const classes = useStyles();\n  const [cache, setCache] = useAtom(cacheAtom);\n  const [settings] = useAtom(settingsAtom);\n  const openSnackbar = useUpdateAtom(openSnackbarAtom);\n  const [videosSortOrder, setVideosSortOrder] = [useAtomValue(videosSortOrderAtom), useUpdateAtom(setVideosSortOrderAtom)];\n  const [openDeleteChannelDialog, setOpenDeleteChannelDialog] = React.useState(false);\n  const [channelToDeleteIndex, setChannelToDeleteIndex] = React.useState(-1);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openedMenuIndex, setOpenedMenuIndex] = React.useState<number|string>(-1);\n  const [openClearCacheDialog, setOpenClearCacheDialog] = React.useState(false);\n  const [openClearRecentVideosDialog, setOpenClearRecentVideosDialog] = React.useState(false);\n  const [openClearWatchLaterVideosDialog, setOpenClearWatchLaterVideosDialog] = React.useState(false);\n  const [openImportChannelsDialog, setOpenImportChannelsDialog] = React.useState(false);\n  const [moveToPositionChannelIndex, setMoveToPositionChannelIndex] = React.useState<number>(-1);\n\n  const onDragEnd = (result: any) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    moveChannel(result.source.index, result.destination.index);\n  };\n\n  const getSelectedChannel = (): Channel | undefined => channels.find((_, i) => i === selectedIndex);\n\n  const moveChannel = (indexFrom: number, indexTo: number) => {\n    closeMenu();\n    const selectedChannel = getSelectedChannel();\n    const items: Channel[] = reorder(\n      channels,\n      indexFrom,\n      indexTo\n    ) as Channel[];\n    //console.log(items);\n    onSave(items);\n    if (selectedChannel) {\n      onSelectedIndexChange(items.indexOf(selectedChannel));\n    }\n  };\n\n  const deleteChannel = (index: number) => {\n    closeMenu();\n    setChannelToDeleteIndex(index);\n    setOpenDeleteChannelDialog(true);\n  };\n\n  const confirmDeleteChannel = () => {\n    const selectedChannel = getSelectedChannel();\n    onDelete(channelToDeleteIndex);\n    if (selectedChannel && selectedIndex !== channelToDeleteIndex) {\n      onSelectedIndexChange(channels.filter((_, i) => i !== channelToDeleteIndex).indexOf(selectedChannel));\n    }\n    closeDeleteChannelDialog();\n  };\n\n  const closeDeleteChannelDialog = () => {\n    setOpenDeleteChannelDialog(false);\n  };\n\n  const openChannel = (channel: Channel) => {\n    closeMenu();\n    if (isWebExtension()) {\n      createTab(channel.url);\n    } else {\n      window.open(channel.url, '_blank');\n    }\n  };\n\n  const refreshChannel = (channel: Channel, index: number) => {\n    closeMenu();\n    onSelect(channel, index, true);\n  };\n\n  const updateChannels = (channels: Channel[]) => {\n    closeMenu();\n    onSave([...channels]);\n    if (selectedIndex < 0 && selectedIndex !== ChannelSelection.None) {\n      onRefresh(selectedIndex);\n    }\n  };\n\n  const hideChannel = (index: number) => {\n    channels[index].isHidden = true;\n    updateChannels(channels);\n  };\n\n  const unhideChannel = (index: number) => {\n    channels[index].isHidden = false;\n    updateChannels(channels);\n  };\n\n  const disableChannelNotifications = (index: number) => {\n    toggleChannelNotifications(index, false);\n  };\n\n  const enableChannelNotifications = (index: number) => {\n    toggleChannelNotifications(index, true);\n  };\n\n  const toggleChannelNotifications = (index: number, activate: boolean) => {\n    channels[index].notifications = {\n      ...channels[index].notifications,\n      isDisabled: !activate\n    };\n    updateChannels(channels);\n  };\n\n  const openMenu = (event: any, index: number|string) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setOpenedMenuIndex(index);\n  };\n\n  const closeMenu = () => {\n    setAnchorEl(null);\n    setOpenedMenuIndex(-1);\n  };\n\n  const confirmClearCache = () => {\n    setCache({});\n    openSnackbar({\n      message: 'Cache cleared!',\n      icon: 'success',\n      showRefreshButton: true\n    });\n    closeClearCacheDialog();\n  };\n\n  const getCacheSize = () => {\n    const size = memorySizeOf(cache);\n    //console.log(size);\n    return size;\n  };\n\n  const closeClearCacheDialog = () => {\n    setOpenClearCacheDialog(false);\n  };\n\n  const exportChannels = () => {\n    closeMenu();\n    const data = JSON.stringify(channels, null, 4);\n    const file = new Blob([data], {type: 'text/json'});\n    download(file, 'channels.json');\n  };\n\n  const importChannels = () => {\n    closeMenu();\n    setOpenImportChannelsDialog(true);\n  };\n\n  const closeImportChannelsDialog = () => {\n    setOpenImportChannelsDialog(false);\n  };\n\n  const confirmImportChannels = (channelsList: Channel[]) => {\n    onImport(channelsList);\n    closeImportChannelsDialog();\n  };\n\n  const openMoveChannelToPositionDialog = (channelIndex: number) => {\n    closeMenu();\n    setMoveToPositionChannelIndex(channelIndex);\n  };\n\n  const closeMoveChannelToPositionDialog = () => {\n    setMoveToPositionChannelIndex(-1);\n  };\n\n  const moveChannelToPosition = (position: number) => {\n    const indexTo = position - 1;\n    if (indexTo !== moveToPositionChannelIndex) {\n      moveChannel(moveToPositionChannelIndex, indexTo);\n    }\n    closeMoveChannelToPositionDialog();\n  };\n\n  const validateChannels = (channelsList: Channel[]): boolean => {\n    let isValid = true;\n    channelsList.forEach((channel: Channel) => {\n      if (!channel.id || !channel.title || !channel.thumbnail || !channel.description || !channel.url) {\n        //return false; // not working in foreach loop @see https://medium.com/front-end-weekly/3-things-you-didnt-know-about-the-foreach-loop-in-js-ff02cec465b1\n        isValid = false;\n      }\n    });\n    return isValid;\n  };\n\n  const clearCache = () => {\n    closeMenu();\n    setOpenClearCacheDialog(true);\n  };\n\n  const refreshRecentVideos = (event: any) => {\n    closeMenu();\n    onRefresh(ChannelSelection.RecentVideos, event);\n  };\n\n  const clearRecentVideos = () => {\n    closeMenu();\n    setOpenClearRecentVideosDialog(true);\n  };\n\n  const confirmClearRecentVideos = () => {\n    onClearRecentVideos();\n    closeClearRecentVideosDialog();\n  };\n\n  const closeClearRecentVideosDialog = () => {\n    setOpenClearRecentVideosDialog(false);\n  };\n\n  const addRecentVideosToWatchLater = () => {\n    closeMenu();\n    onAddVideosToWatchLater();\n  };\n\n  const refreshAll = (event?: any) => {\n    onRefresh(ChannelSelection.All, event);\n  };\n\n  const refreshTodaysVideos = (event: any) => {\n    //closeMenu(); // no need to\n    onRefresh(ChannelSelection.TodaysVideos, event);\n  };\n\n  const clearWatchLaterVideos = () => {\n    setOpenClearWatchLaterVideosDialog(true);\n  };\n\n  const confirmClearWatchLaterVideos = () => {\n    onClearWatchLaterVideos();\n    closeClearWatchLaterVideosDialog();\n  };\n\n  const closeClearWatchLaterVideosDialog = () => {\n    setOpenClearWatchLaterVideosDialog(false);\n  };\n\n  const renderSortOrderMenuItems = (index: number|ChannelSelection) => {\n    const sortOrder = videosSortOrder[index] || defaultVideosSortOrder;\n    return (\n      <div> {/* using React.Fragment instead of a div returns the following error \"the Menu component doesn't accept a Fragment as a child.\" */}\n        <MenuItem disabled={sortOrder === SortOrder.ASC} onClick={(event) => {\n            closeMenu();\n            setVideosSortOrder({ [index]: SortOrder.ASC });\n            onRefresh(index, event, SortOrder.ASC);\n          }}\n        >\n          <ArrowUpwardIcon className={classes.menuIcon} /> Sort by Asc\n        </MenuItem>\n        <MenuItem disabled={sortOrder === SortOrder.DESC} onClick={(event) => {\n            closeMenu();\n            setVideosSortOrder({ [index]: SortOrder.DESC });\n            onRefresh(index, event, SortOrder.DESC);\n          }}\n        >\n          <ArrowDownwardIcon className={classes.menuIcon} /> Sort by Desc\n        </MenuItem>\n      </div>\n    );\n  };\n\n  const isFirefoxExtension = isWebExtension() && isFirefox();\n\n  return (\n    <div className={className || ''}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n        {(provided: any, snapshot: any) => (\n          <RootRef rootRef={provided.innerRef}>\n            <List\n              dense\n              subheader={<ListSubheader className={classes.subheader}>Channels\n                <IconButton edge=\"end\" aria-label=\"channels-options\" size=\"small\" className={classes.channelsOptionsIcon} onClick={(event) => openMenu(event, 'channels-options')}>\n                  <MoreVertIcon fontSize=\"small\" />\n                </IconButton>\n                <Menu\n                  id=\"menu-channels-options\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={openedMenuIndex === 'channels-options'}\n                  onClose={closeMenu}\n                >\n                  <MenuItem onClick={() => exportChannels()}><GetAppIcon className={classes.menuIcon} />Export</MenuItem>\n                  <MenuItem onClick={() => importChannels()}><ImportExportIcon className={classes.menuIcon} />Import</MenuItem>\n                  <Tooltip title={\"Cache size: \" + getCacheSize()} aria-label=\"clear-cache\">\n                    <MenuItem onClick={() => clearCache()}><DeleteSweepIcon className={classes.menuIcon} />Clear cache</MenuItem>\n                  </Tooltip>\n                </Menu>\n              </ListSubheader>}\n              style={getListStyle(snapshot.isDraggingOver)}\n            >\n              <ListItem button key=\"all\" selected={selectedIndex === ChannelSelection.All} onClick={() => onShowAll()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={channels.length}>\n                    <Avatar>\n                      <SubscriptionsIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"All\" />\n                {channels?.length > 0 && (\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"more\" size=\"small\" onClick={(event) => openMenu(event, ChannelSelection.All)}>\n                      <MoreVertIcon fontSize=\"small\" />\n                    </IconButton>\n                    <Menu\n                      id=\"menu-all-channels\"\n                      anchorEl={anchorEl}\n                      keepMounted\n                      open={openedMenuIndex === ChannelSelection.All}\n                      onClose={closeMenu}\n                    >\n                      {renderSortOrderMenuItems(ChannelSelection.All)}\n                      <MenuItem onClick={(event) => refreshAll(event)}><RefreshIcon className={classes.menuIcon} /> Refresh</MenuItem>\n                    </Menu>\n                  </ListItemSecondaryAction>\n                )}\n              </ListItem>\n              <ListItem button key=\"today\" selected={selectedIndex === ChannelSelection.TodaysVideos} onClick={() => onShowTodaysVideos()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={todaysVideosCount}>\n                    <Avatar>\n                      <TodayIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"Today's videos\" />\n                {channels?.length > 0 && (\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"more\" size=\"small\" onClick={(event) => openMenu(event, ChannelSelection.TodaysVideos)}>\n                      <MoreVertIcon fontSize=\"small\" />\n                    </IconButton>\n                    <Menu\n                      id=\"menu-todays-videos\"\n                      anchorEl={anchorEl}\n                      keepMounted\n                      open={openedMenuIndex === ChannelSelection.TodaysVideos}\n                      onClose={closeMenu}\n                    >\n                      {renderSortOrderMenuItems(ChannelSelection.TodaysVideos)}\n                      <MenuItem onClick={(event) => refreshTodaysVideos(event)}><RefreshIcon className={classes.menuIcon} /> Refresh</MenuItem>\n                    </Menu>\n                  </ListItemSecondaryAction>\n                )}\n              </ListItem>\n              <ListItem button key=\"recent\" selected={selectedIndex === ChannelSelection.RecentVideos} onClick={() => onShowRecentVideos()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={recentVideosCount}>\n                    <Avatar>\n                      <NotificationsNoneIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"Recent videos\" />\n                {channels?.length > 0 && (\n                  <ListItemSecondaryAction>\n                    <IconButton edge=\"end\" aria-label=\"more\" size=\"small\" onClick={(event) => openMenu(event, ChannelSelection.RecentVideos)}>\n                      <MoreVertIcon fontSize=\"small\" />\n                    </IconButton>\n                    <Menu\n                      id=\"menu-recent-videos\"\n                      anchorEl={anchorEl}\n                      keepMounted\n                      open={openedMenuIndex === ChannelSelection.RecentVideos}\n                      onClose={closeMenu}\n                    >\n                      {renderSortOrderMenuItems(ChannelSelection.RecentVideos)}\n                      <MenuItem onClick={(event) => refreshRecentVideos(event)}><RefreshIcon className={classes.menuIcon} /> Refresh</MenuItem>\n                      {recentVideosCount > 0 && selectedIndex === ChannelSelection.RecentVideos && <MenuItem onClick={() => addRecentVideosToWatchLater()}><AccessTimeIcon className={classes.menuIcon} /> Add all to watch later list</MenuItem>}\n                      {recentVideosCount > 0 && <MenuItem onClick={() => clearRecentVideos()}><DeleteOutlineIcon className={classes.menuIcon} /> Clear</MenuItem>}\n                    </Menu>\n                  </ListItemSecondaryAction>\n                )}\n              </ListItem>\n              <ListItem button key=\"watchLater\" selected={selectedIndex === ChannelSelection.WatchLaterVideos} onClick={() => onShowWatchLaterVideos()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={watchLaterVideosCount}>\n                    <Avatar>\n                      <AccessTimeIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"Watch later\" />\n                <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" aria-label=\"more\" size=\"small\" onClick={(event) => openMenu(event, ChannelSelection.WatchLaterVideos)}>\n                    <MoreVertIcon fontSize=\"small\" />\n                  </IconButton>\n                  <Menu\n                    id=\"menu-watch-later-videos\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={openedMenuIndex === ChannelSelection.WatchLaterVideos}\n                    onClose={closeMenu}\n                  >\n                    {renderSortOrderMenuItems(ChannelSelection.WatchLaterVideos)}\n                    {watchLaterVideosCount > 0 && (\n                      <MenuItem onClick={() => clearWatchLaterVideos()}><DeleteOutlineIcon className={classes.menuIcon} /> Clear</MenuItem>\n                    )}\n                  </Menu>\n                </ListItemSecondaryAction>\n              </ListItem>\n              {channels.map((channel: Channel, index: number) => (\n                <Draggable key={channel.id} draggableId={channel.id} index={index}>\n                {(provided: any, snapshot: any) => (\n                  <ListItem\n                    ContainerProps={{ ref: provided.innerRef }}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getListItemStyle(\n                      snapshot.isDragging,\n                      channel.isHidden,\n                      provided.draggableProps.style\n                    )}\n                    button\n                    selected={index === selectedIndex}\n                    onClick={() => onSelect(channel, index)}\n                  >\n                    <ListItemIcon><Avatar alt={channel.title} src={channel.thumbnail} /></ListItemIcon>\n                    <ListItemText primary={channel.title} />\n                    <ListItemSecondaryAction>\n                      <IconButton edge=\"end\" aria-label=\"more\" size=\"small\" onClick={(event) => openMenu(event, index)}>\n                        <MoreVertIcon fontSize=\"small\" />\n                      </IconButton>\n                      <Menu\n                        id={\"menu-\" + index}\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={openedMenuIndex === index}\n                        onClose={closeMenu}\n                      >\n                        {renderSortOrderMenuItems(index)}\n                        <MenuItem onClick={() => openChannel(channel)}><OpenInNewIcon className={classes.menuIcon} /> Open channel</MenuItem>\n                        <MenuItem onClick={() => refreshChannel(channel, index)}><RefreshIcon className={classes.menuIcon} /> Refresh</MenuItem>\n                        {isFirefoxExtension && index > 0 && (\n                          <MenuItem onClick={() => moveChannel(index, index - 1)}><KeyboardArrowUpIcon className={classes.menuIcon} />Move up</MenuItem>\n                        )}\n                        {isFirefoxExtension && index < channels.length - 1 && (\n                          <MenuItem onClick={() => moveChannel(index, index + 1)}><KeyboardArrowDownIcon className={classes.menuIcon} />Move down</MenuItem>\n                        )}\n                        {isFirefoxExtension && (\n                          <MenuItem onClick={() => openMoveChannelToPositionDialog(index)}><ControlCameraIcon className={classes.menuIcon} />Move to position</MenuItem>\n                        )}\n                        {channel.isHidden ? (\n                          <MenuItem onClick={() => unhideChannel(index)}><VisibilityIcon className={classes.menuIcon} /> Unhide</MenuItem>\n                        ) : (\n                          <MenuItem onClick={() => hideChannel(index)}><VisibilityOffIcon className={classes.menuIcon} /> Hide</MenuItem>\n                        )}\n                        {isWebExtension() && settings.enableRecentVideosNotifications && (channel.notifications?.isDisabled ? (\n                          <MenuItem onClick={() => enableChannelNotifications(index)}><NotificationsActiveIcon className={classes.menuIcon} /> Enable notifications</MenuItem>\n                        ) : (\n                          <MenuItem onClick={() => disableChannelNotifications(index)}><NotificationsOffIcon className={classes.menuIcon} /> Disable notifications</MenuItem>\n                        ))}\n                        <MenuItem onClick={() => deleteChannel(index)}><DeleteOutlineIcon className={classes.menuIcon} /> Delete</MenuItem>\n                      </Menu>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          </RootRef>\n        )}\n        </Droppable>\n      </DragDropContext>\n      <ConfirmationDialog\n        open={openClearCacheDialog}\n        title=\"Clear cache\"\n        description=\"This action is irreversible, would you like to continue?\"\n        confirmButtonText=\"Clear\"\n        onClose={closeClearCacheDialog}\n        onConfirm={confirmClearCache}\n      />\n      <ConfirmationDialog\n        open={openClearRecentVideosDialog}\n        title=\"Clear recent videos\"\n        description=\"Would you like to reset/clear recent videos?\"\n        confirmButtonText=\"Clear\"\n        onClose={closeClearRecentVideosDialog}\n        onConfirm={confirmClearRecentVideos}\n      />\n      <ConfirmationDialog\n        open={openClearWatchLaterVideosDialog}\n        title=\"Clear watch later videos\"\n        description=\"Would you like to reset/clear watch later videos?\"\n        confirmButtonText=\"Clear\"\n        onClose={closeClearWatchLaterVideosDialog}\n        onConfirm={confirmClearWatchLaterVideos}\n      />\n      <ConfirmationDialog\n        open={openDeleteChannelDialog}\n        title=\"Delete Channel\"\n        description={`Would you like to delete <strong>${channels[channelToDeleteIndex]?.title}</strong> channel?`}\n        confirmButtonText=\"Delete\"\n        onClose={closeDeleteChannelDialog}\n        onConfirm={confirmDeleteChannel}\n      />\n      <ImportDialog\n        open={openImportChannelsDialog}\n        title=\"Import Channels\"\n        description=\"Copy & paste below the content of <strong>channels.json</strong> file. Notice that your current channels list will be overrided!\"\n        textFieldId=\"channels-to-import\"\n        textFieldLabel=\"Channels (json)\"\n        onClose={closeImportChannelsDialog}\n        onConfirm={confirmImportChannels}\n        onValidate={validateChannels}\n      />\n      <MoveToPositionDialog\n        open={moveToPositionChannelIndex > -1}\n        title=\"Move Channel To Position\"\n        min={1}\n        max={channels.length}\n        positionFieldId=\"channel-position\"\n        positionFieldLabel=\"Position\"\n        onClose={closeMoveChannelToPositionDialog}\n        onConfirm={moveChannelToPosition}\n      />\n    </div>\n  )\n}\n","\n// Stolen from https://stackoverflow.com/a/44737041\nexport function download(blob: Blob, filename: string) {\n  if (window.navigator.msSaveOrOpenBlob) { // IE10+\n    window.navigator.msSaveOrOpenBlob(blob, filename);\n  } else { // Others\n    let a = document.createElement('a'),\n        url = URL.createObjectURL(blob);\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);  \n    }, 0);\n  }\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport { RawHTML } from '../shared/RawHTML';\n\ninterface MessageSnackbarProps {\n  message: string|undefined;\n  open: boolean;\n  onClose: Function;\n  autoHideDuration?: number;\n  anchorOrigin?: any;\n}\n\nexport function MessageSnackbar(props: MessageSnackbarProps) {\n  const { message, open, onClose, autoHideDuration = 6000, anchorOrigin = { vertical: 'top', horizontal: 'center' } } = props;\n\n  return (\n    <Snackbar\n      anchorOrigin={anchorOrigin}\n      open={open}\n      autoHideDuration={autoHideDuration}\n      onClose={() => onClose()}\n      message={message && <RawHTML>{message}</RawHTML>}\n      action={\n        <Button color=\"secondary\" size=\"small\" onClick={() => onClose()}>\n          Close\n        </Button>\n      }\n    />\n  )\n}\n","import { ChannelSelection } from \"./Channel\";\n\nexport interface Settings {\n  defaultChannelSelection: ChannelSelection,\n  videosPerChannel: number,\n  videosAnteriority: number,\n  sortVideosBy: string,\n  apiKey?: string,\n  autoVideosCheckRate: number,\n  enableRecentVideosNotifications: boolean,\n  autoPlayVideos: boolean,\n  openVideosInInactiveTabs: boolean,\n  openChannelsOnNameClick: boolean,\n  hideEmptyChannels: boolean,\n  autoCloseDrawer: boolean,\n  autoClearRecentVideos: boolean,\n  autoRemoveWatchLaterVideos: boolean,\n  autoClearCache: boolean,\n}\n\nexport enum SettingsType {\n  String,\n  Number,\n  Boolean\n}\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    settingsAppBar: {\n      position: 'relative',\n      backgroundColor: '#f44336',\n    },\n    settingsTitle: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    container: {\n      width: '223px',\n      height: '40px',\n    },\n    select: {\n      padding: '10px 26px 10px 12px',\n      '&:-moz-focusring': { // removes the ugly dotted outline around the selected option in Firefox\n        color: 'transparent',\n        textShadow: '0 0 0 #000',\n      },\n    },\n    optionLabel: {\n      maxWidth: '70%',\n    },\n  }),\n);\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport Slide from '@material-ui/core/Slide';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport Link from '@material-ui/core/Link';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport { SettingsType } from '../../models/Settings';\nimport { ChannelSelection } from '../../models/Channel';\nimport { isWebExtension } from '../../helpers/browser';\nimport { useStyles } from './SettingsDialog.styles';\nimport { useAtom } from 'jotai';\nimport { useUpdateAtom } from 'jotai/utils';\nimport { settingsAtom } from '../../atoms/settings';\nimport { openSnackbarAtom } from '../../atoms/snackbar';\n\nconst settingsDialogTransition = React.forwardRef<unknown, TransitionProps>(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface SettingsDialogProps {\n  open: boolean;\n  onClose: Function;\n}\n\nexport function SettingsDialog(props: SettingsDialogProps) {\n  const { open, onClose } = props;\n  const classes = useStyles();\n  const [settings, setSettings] = useAtom(settingsAtom);\n  const openSnackbar = useUpdateAtom(openSnackbarAtom);\n\n  const getSettingsValue = (id: string, type: SettingsType) => {\n    const element = document.getElementById(id) as any;\n    if (element) {\n      switch(type) {\n        case SettingsType.Number:\n          return +element.value;\n        case SettingsType.Boolean:\n          return element.checked;\n        case SettingsType.String:\n        default:\n          return element.value;\n      }\n    } else {\n      return (settings as any)[id];\n    }\n  };\n\n  const saveSettings = () => {\n    // Update settings\n    setSettings({\n      defaultChannelSelection: getSettingsValue('defaultChannelSelection', SettingsType.Number),\n      videosPerChannel: getSettingsValue('videosPerChannel', SettingsType.Number),\n      videosAnteriority: getSettingsValue('videosAnteriority', SettingsType.Number),\n      sortVideosBy: getSettingsValue('sortVideosBy', SettingsType.String),\n      apiKey: getSettingsValue('apiKey', SettingsType.String),\n      autoVideosCheckRate: getSettingsValue('autoVideosCheckRate', SettingsType.Number),\n      enableRecentVideosNotifications: getSettingsValue('enableRecentVideosNotifications', SettingsType.Boolean),\n      autoPlayVideos: getSettingsValue('autoPlayVideos', SettingsType.Boolean),\n      openVideosInInactiveTabs: getSettingsValue('openVideosInInactiveTabs', SettingsType.Boolean),\n      openChannelsOnNameClick: getSettingsValue('openChannelsOnNameClick', SettingsType.Boolean),\n      hideEmptyChannels: getSettingsValue('hideEmptyChannels', SettingsType.Boolean),\n      autoCloseDrawer: getSettingsValue('autoCloseDrawer', SettingsType.Boolean),\n      autoClearRecentVideos: getSettingsValue('autoClearRecentVideos', SettingsType.Boolean),\n      autoRemoveWatchLaterVideos: getSettingsValue('autoRemoveWatchLaterVideos', SettingsType.Boolean),\n      autoClearCache: getSettingsValue('autoClearCache', SettingsType.Boolean),\n    });\n    onClose();\n    openSnackbar({\n      message: 'Settings saved!',\n      icon: 'success',\n      showRefreshButton: true\n    });\n  };\n\n  const validateSettings = (event: any) => {\n    let input = event.target;\n    //console.log(input.type, input.min, input.max, input.value);\n    if (input.type === \"number\") {\n      if (!input.value.match(/^\\d+$/) || +input.value < +input.min) {\n        input.value = input.min;\n      } else if (+input.value > +input.max) {\n        input.value = input.max;\n      }\n    }\n  };\n\n  return (\n    <Dialog fullScreen open={open} onClose={() => onClose()} TransitionComponent={settingsDialogTransition}>\n      <AppBar color=\"secondary\" className={classes.settingsAppBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => onClose()} aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.settingsTitle}>\n            Settings\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => saveSettings()}>\n            save\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <List>\n        <ListItem>\n          <ListItemText primary=\"Default channel selection\" secondary=\"The channel menu that would be selected by default\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Select\n              native\n              inputProps={{ id: 'defaultChannelSelection', className: classes.select }}\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.container}\n              defaultValue={settings?.defaultChannelSelection}\n            >\n              <option value={ChannelSelection.All}>All</option>\n              <option value={ChannelSelection.TodaysVideos}>Today's videos</option>\n              <option value={ChannelSelection.RecentVideos}>Recent videos</option>\n              <option value={ChannelSelection.WatchLaterVideos}>Watch later</option>\n            </Select>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Max videos per channel\" secondary=\"The maximum number of videos to show per channel\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"videosPerChannel\"\n              type=\"number\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ min: 3, max: 50, step: 1 }}\n              className={classes.container}\n              defaultValue={settings?.videosPerChannel}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Anteriority of videos (in days)\" secondary=\"Number of days to subtract from the current date\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"videosAnteriority\"\n              type=\"number\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ min: 1, max: 365, step: 7 }}\n              className={classes.container}\n              defaultValue={settings?.videosAnteriority}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Sort videos by\" secondary=\"Videos sorting criteria (requires clearing cache)\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Select\n              native\n              inputProps={{ id: 'sortVideosBy', className: classes.select }}\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.container}\n              defaultValue={settings?.sortVideosBy}\n            >\n              <option value=\"date\">Date</option>\n              <option value=\"views\">Views</option>\n            </Select>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary={\n            <Typography variant=\"body1\" component=\"span\">Custom API key (<Link href=\"https://www.slickremix.com/docs/get-api-key-for-youtube/\" target=\"_blank\" rel=\"noopener\">How to get an API key?</Link>)</Typography>\n          } secondary={\n            <React.Fragment>\n              <Typography variant=\"body2\" component=\"span\">Replaces the default youtube API key used to fetch channels & videos data</Typography>\n              <br/>\n              <Typography variant=\"body2\" component=\"span\">(will apply the next time you {isWebExtension() ? 'open the extension popup' : 'reload the app'})</Typography>\n            </React.Fragment>\n          } className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"apiKey\"\n              type=\"text\"\n              placeholder=\"AIzaSyDOkg-u9jnhP-WnzX5WPJyV1sc5QQrtuyc\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ minLength: 39 }}\n              className={classes.container}\n              defaultValue={settings?.apiKey}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        {isWebExtension() && (\n          <React.Fragment>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Auto videos check rate (in minutes)\" secondary=\"Number of minutes to wait before auto-checking for recent videos\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <TextField\n                  id=\"autoVideosCheckRate\"\n                  type=\"number\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  inputProps={{ min: 5, max: 720, step: 1 }}\n                  className={classes.container}\n                  defaultValue={settings?.autoVideosCheckRate}\n                  onChange={(event) => validateSettings(event)}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Enable recent videos notifications\" secondary=\"Notifies you when recent videos get posted\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"enableRecentVideosNotifications\"\n                  defaultChecked={settings?.enableRecentVideosNotifications}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Auto play videos once opened\" secondary=\"Auto-play permission should be granted for youtube.com\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"autoPlayVideos\"\n                  defaultChecked={settings?.autoPlayVideos}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Open videos in inactive tabs\" secondary=\"Will open videos in new tabs without losing focus of the current tab\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"openVideosInInactiveTabs\"\n                  defaultChecked={settings?.openVideosInInactiveTabs}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </React.Fragment>\n        )}\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Open channels on name click\" secondary='Will open channels directly by clicking on their name, replaces the icon button \"open channel\"' className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"openChannelsOnNameClick\"\n              defaultChecked={settings?.openChannelsOnNameClick}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Hide empty channels\" secondary=\"Hide all empty channels by default\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"hideEmptyChannels\"\n              defaultChecked={settings?.hideEmptyChannels}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Auto close drawer\" secondary=\"Auto close channels list drawer when clicking outside\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"autoCloseDrawer\"\n              defaultChecked={settings?.autoCloseDrawer}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Auto clear recent videos\" secondary=\"Auto-clear recent videos before each startup\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"autoClearRecentVideos\"\n              defaultChecked={settings?.autoClearRecentVideos}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Auto remove watch later videos\" secondary='Auto-remove watch later videos when clicking on \"Watch now\"' className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"autoRemoveWatchLaterVideos\"\n              defaultChecked={settings?.autoRemoveWatchLaterVideos}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Auto clear videos cache\" secondary=\"Cache may speed up loading time & reduce API quota consumption\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"autoClearCache\"\n              defaultChecked={settings?.autoClearCache}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </Dialog>\n  )\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  alert: {\n    color: '#fff',\n    backgroundColor: '#323232',\n  }\n});\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport Alert from '@material-ui/lab/Alert';\nimport { SnackbarIcon } from '../../models/Snackbar';\nimport { useStyles } from './BottomSnackbar.styles';\n\nfunction SlideTransition(props: TransitionProps) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\ninterface BottomSnackbarProps {\n  open: boolean;\n  snackbarKey?: string|number; // used when displaying multiple consecutive snackbars\n  message: string;\n  icon?: SnackbarIcon,\n  onClose: Function;\n  onRefresh: Function;\n  autoHideDuration?: number;\n  showRefreshButton?: boolean\n}\n\nexport function BottomSnackbar(props: BottomSnackbarProps) {\n  const { open, snackbarKey, message, icon, onClose, onRefresh, autoHideDuration = 6000, showRefreshButton = true } = props;\n  const classes = useStyles();\n\n  const handleClose = (event: React.SyntheticEvent | MouseEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    onClose();\n  };\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      key={snackbarKey}\n      open={open}\n      autoHideDuration={autoHideDuration}\n      TransitionComponent={SlideTransition}\n      onClose={handleClose}\n    >\n      <Alert\n        severity={icon}\n        className={classes.alert}\n        variant=\"filled\"\n        onClose={handleClose}\n        action={\n          <React.Fragment>\n            {showRefreshButton && (\n              <Button color=\"secondary\" size=\"small\" onClick={(event) => onRefresh(null, event)}>\n                Refresh\n              </Button>\n            )}\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      >\n        {message}\n      </Alert>\n    </Snackbar>\n  )\n}\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { isWebExtension, isFirefox } from '../../helpers/browser';\n\nexport const popupSize = {\n  width: 700,\n  height: 500\n};\n\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      minWidth: `${popupSize.width}px`,\n      minHeight: isWebExtension() ? `${popupSize.height}px` : '100vh',\n      maxHeight: isWebExtension() ? `${popupSize.height}px` : 'none',\n      maxWidth: isWebExtension() && isFirefox() ? `${popupSize.width}px` : 'none',\n    },\n    appBar: {\n      backgroundColor: '#f44336',\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(1.5),\n    },\n    hide: {\n      display: 'none',\n    },\n    disabled: {\n      pointerEvents: 'none',\n      userSelect: 'none',\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    logo: {\n      display: 'flex',\n      marginRight: theme.spacing(3.5),\n      cursor: 'default',\n      '& > img': {\n        width: 32,\n        height: 32,\n        filter: 'contrast(150%) brightness(100%)',\n      }\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      //padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    container: {\n      display: 'flex',\n      width: '100%',\n      height: '80%',\n      justifyContent: 'center',\n      '&.expanded': {\n        height: '100%',\n      },\n    },\n    centered: {\n      alignSelf: 'center',\n      textAlign: 'center',\n    },\n    heartIcon: {\n      color: '#e25555',\n      fontSize: 16,\n      verticalAlign: 'middle',\n    },\n    madeWithLove: {\n      padding: theme.spacing(1, 0),\n    },\n  }),\n);\n","import React from 'react';\n\n// Stolen from: https://dev.to/jz222/comment/ndbf\nexport const useConstructor = (callBack = () => {}) => {\n  const hasBeenCalled = React.useRef(false);\n  if (hasBeenCalled.current) return;\n  callBack();\n  hasBeenCalled.current = true;\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport { useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Fade from '@material-ui/core/Fade';\nimport SearchChannelInput from '../channel/SearchChannelInput';\nimport { Channel, ChannelSelection } from '../../models/Channel';\nimport { getChannelActivities, getVideoInfo } from '../../helpers/youtube';\nimport { Video } from '../../models/Video';\nimport { getDateBefore, isInToday, diffHours } from '../../helpers/utils';\nimport MultiVideoGrid from '../video/MultiVideoGrid';\nimport VideoGrid from '../video/VideoGrid';\nimport { saveToStorage } from '../../helpers/storage';\nimport { ChannelList } from '../channel/ChannelList';\nimport { MessageSnackbar } from '../snackbar/MessageSnackbar';\nimport { SettingsDialog } from '../settings/SettingsDialog';\nimport { BottomSnackbar } from '../snackbar/BottomSnackbar';\nimport { isWebExtension } from '../../helpers/browser';\nimport { debug } from '../../helpers/debug';\nimport { useStyles } from './Popup.styles';\n// @ts-ignore\nimport ReactPullToRefresh from 'react-pull-to-refresh';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\nimport { useAtom } from 'jotai';\nimport { useUpdateAtom, useAtomValue } from 'jotai/utils';\nimport { channelsAtom, selectedChannelIndexAtom } from '../../atoms/channels';\nimport { videosAtom, videosSortOrderAtom } from '../../atoms/videos';\nimport { settingsAtom } from '../../atoms/settings';\nimport { cacheAtom } from '../../atoms/cache';\nimport { snackbarAtom, openSnackbarAtom, closeSnackbarAtom } from '../../atoms/snackbar';\nimport { SortOrder } from '../../models/SortOrder';\nimport { useConstructor } from '../../hooks/useConstructor';\nimport { videoImageSize } from '../video/VideoRenderer.styles';\nimport { popupSize } from './Popup.styles';\n\ninterface PopupProps {\n  isReady: boolean;\n}\n\nexport default function Popup(props: PopupProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [channels, setChannels] = useAtom(channelsAtom);\n  const [videos, setVideos] = useAtom(videosAtom);\n  const videosSortOrder = useAtomValue(videosSortOrderAtom);\n  const [maxVisibleVideos, setMaxVisibleVideos] = React.useState(3);\n  const [height, setHeight] = React.useState('100%');\n  const [openDrawer, setOpenDrawer] = React.useState(false);\n  const [isReady, setIsReady] = React.useState(props.isReady);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [selectedChannelIndex, setSelectedChannelIndex] = useAtom(selectedChannelIndexAtom);\n  const [settings] = useAtom(settingsAtom);\n  const [openSettingsDialog, setOpenSettingsDialog] = React.useState(false);\n  const [snackbar, openSnackbar, closeSnackbar] = [useAtomValue(snackbarAtom), useUpdateAtom(openSnackbarAtom), useUpdateAtom(closeSnackbarAtom)];\n  const [lastError, setLastError] = React.useState<Error|null>(null);\n  const [cache, setCache] = useAtom(cacheAtom);\n  const [recentVideosCount, setRecentVideosCount] = React.useState(0);\n  const [todaysVideosCount, setTodaysVideosCount] = React.useState(0);\n  const [watchLaterVideosCount, setWatchLaterVideosCount] = React.useState(0);\n\n  useConstructor(() => {\n    // Set height\n    const height = isWebExtension() ? '100%' : '100vh';\n    debug.log('height:', height);\n    setHeight(height);\n    // Set maxVisibleVideos\n    const containerPadding = 48,\n          popupWidth = isWebExtension() ? popupSize.width : window.innerWidth;\n    let maxVisibleVideos = Math.floor((popupWidth - containerPadding) / videoImageSize.width);\n    if (maxVisibleVideos > settings.videosPerChannel) {\n      maxVisibleVideos = settings.videosPerChannel;\n    }\n    debug.log('max visible videos:', maxVisibleVideos);\n    setMaxVisibleVideos(maxVisibleVideos);\n  });\n\n  React.useEffect(() => \n    setIsReady(props.isReady)\n  , [props.isReady]);\n\n  React.useEffect(() => {\n    debug.warn('isReady changed', isReady);\n    if (isReady) {\n      if (channels.length && !videos.length) {\n        showChannelSelection(settings.defaultChannelSelection, true);\n      } else if (selectedChannelIndex !== settings.defaultChannelSelection) {\n        setSelectedChannelIndex(settings.defaultChannelSelection);\n      }\n      updateVideosCount();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isReady]);\n\n  React.useEffect(() => {\n    debug.warn('channels changed', { isReady: isReady });\n    if (isReady) {\n      saveToStorage({ channels: channels });\n      updateVideosCount();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channels]);\n\n  React.useEffect(() => {\n    debug.warn('settings changed', { isReady: isReady });\n    if (isReady) {\n      saveToStorage({ settings: settings });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings]);\n\n  React.useEffect(() => {\n    debug.warn('cache changed', { isReady: isReady });\n    if (isReady) {\n      saveToStorage({ cache: cache });\n      updateVideosCount();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cache]);\n\n  const updateVideosCount = () => {\n    debug.log('----------------------');\n    debug.log('counting videos');\n    let totalRecentVideosCount: number = 0,\n        totalTodaysVideosCount: number = 0,\n        totalWatchLaterVideosCount: number = 0;\n    Object.keys(cache).forEach((channelId: string) => {\n      const channel = channels.find((c: Channel) => c.id === channelId);\n      if (!channel || channel.isHidden) {\n        return;\n      }\n      const recentVideosCountPerChannel = (cache[channelId].filter((video: Video) => video.isRecent)).length;\n      const todaysVideosCountPerChannel = (cache[channelId].filter((video: Video) => isInToday(video.publishedAt))).length;\n      const watchLaterVideosCountPerChannel = (cache[channelId].filter((video: Video) => video.isToWatchLater)).length;\n      debug.log(channel.title, {\n        recent: recentVideosCountPerChannel,\n        todays: todaysVideosCountPerChannel,\n        watchLater: watchLaterVideosCountPerChannel,\n      });\n      totalRecentVideosCount += recentVideosCountPerChannel;\n      totalTodaysVideosCount += todaysVideosCountPerChannel;\n      totalWatchLaterVideosCount += watchLaterVideosCountPerChannel;\n    });\n    debug.log('total count', {\n      recent: totalRecentVideosCount,\n      todays: totalTodaysVideosCount,\n      watchLater: totalWatchLaterVideosCount,\n    });\n    setRecentVideosCount(totalRecentVideosCount);\n    setTodaysVideosCount(totalTodaysVideosCount);\n    setWatchLaterVideosCount(totalWatchLaterVideosCount);\n  };\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  const displayError = (error: Error) => {\n    console.error(error);\n    setLastError(error);\n  };\n\n  /**\n   * Get a specific channel videos\n   * \n   * @param channel channel object\n   * @param ignoreCache boolean value that defines if the cache should be ignored\n   * @param pipeFunction pipe function can be used to filter videos before they get sliced, by default it does nothing more than returning the original videos array\n   */\n  const getChannelVideos = (\n    channel: Channel,\n    ignoreCache: boolean = false,\n    pipeFunction: ((channelVideos: Video[]) => Video[]) = (channelVideos: Video[]) => channelVideos\n  ): Promise<Video[]> => {\n    return new Promise((resolve, reject) => {\n      if (!ignoreCache && cache[channel.id]?.length) {\n        debug.log('----------------------');\n        debug.log('load videos from cache', channel.title, cache[channel.id]);\n        resolve(pipeFunction(cache[channel.id]).slice(0, settings.videosPerChannel));\n      } else {\n        getChannelActivities(channel.id, getDateBefore(settings.videosAnteriority)).then((results) => {\n          debug.log('----------------------');\n          debug.log('activities of', channel.title, results);\n          if (results?.items) {\n            // Get recent videos ids\n            const videosIds: string[] = results.items.map((item: any) => item.contentDetails.upload?.videoId).filter((id: string) => id?.length);\n            const cacheVideosIds: string[] = cache[channel.id]?.length ? cache[channel.id].map((video: Video) => video.id) : [];\n            const recentVideosIds: string[] = videosIds.filter((videoId: string, index: number) => videosIds.indexOf(videoId) === index) // remove duplicates\n                                                       .slice(0, settings.videosPerChannel)\n                                                       .filter((videoId: string) => cacheVideosIds.indexOf(videoId) === -1); // remove videos already in cache\n            // Get recent videos informations\n            if (!recentVideosIds.length) {\n              debug.log('no recent videos for this channel');\n              resolve(pipeFunction(cache[channel.id])?.slice(0, settings.videosPerChannel) || []);\n            } else {\n              debug.log('getting recent videos of', channel.title, { recentVideosIds: recentVideosIds, cacheVideosIds: cacheVideosIds });\n              getVideoInfo(recentVideosIds).then((videosData: Video[]) => {\n                debug.log('recent videos data', videosData);\n                // Mark new videos as recent\n                const now = new Date();\n                videosData = videosData.map((video: Video) => {\n                  const videoDate = new Date(video.publishedAt); // convert timestamp to Date object\n                  if (diffHours(now, videoDate) <= 24) { // avoid marking too old videos as recent when cache is empty\n                    video.isRecent = true;\n                  }\n                  return video;\n                });\n                // Merge cached & new videos\n                cache[channel.id] = cache[channel.id]?.length ? [...videosData, ...cache[channel.id]] : videosData;\n                // Sort videos\n                const sortedVideos = cache[channel.id].sort((a: Video, b: Video) => {\n                  if (settings.sortVideosBy === 'views' && a.views?.count && b.views?.count) {\n                    return b.views.count - a.views.count;\n                  } else {\n                    return b.publishedAt - a.publishedAt;\n                  }\n                });\n                // Save to cache\n                setCache({...cache});\n                resolve(pipeFunction(sortedVideos)?.slice(0, settings.videosPerChannel) || []);\n              }).catch((error: Error) => {\n                displayError(error);\n                resolve([]);\n              });\n            }\n          } else {\n            resolve([]);\n          }\n        }).catch((error: Error) => {\n          displayError(error);\n          resolve([]);\n        });\n      }\n    });\n  };\n\n  const addChannel = (channel: Channel) => {\n    // Add channel\n    debug.log('added channel:', channel);\n    const found: Channel | undefined = channels.find((c: Channel) => c.id === channel.id);\n    if (!found) {\n      setChannels([...channels, channel]);\n      setSelectedChannelIndex(channels.length);\n    } else {\n      setSelectedChannelIndex(channels.indexOf(found));\n    }\n    // Get channel videos\n    setIsLoading(true);\n    getChannelVideos(channel).then((results: Video[]) => {\n      setVideos(results || []);\n      setIsLoading(false);\n    });\n  };\n\n  const selectChannel = (channel: Channel, index: number, ignoreCache: boolean = false, sortOrder?: SortOrder) => {\n    // Select channel\n    debug.log('selected channel:', channel);\n    setSelectedChannelIndex(index);\n    if (sortOrder === undefined || sortOrder === null) {\n      sortOrder = videosSortOrder[index]; // == undefined if videosSortOrder[index] is not yet set\n    }\n    // Get its videos\n    setIsLoading(true);\n    return getChannelVideos(channel, ignoreCache).then((results: Video[]) => {\n      if (sortOrder) {\n        results = results.sort(getSortFunction(sortOrder));\n      }\n      setVideos(results || []);\n      setIsLoading(false);\n      window.scrollTo(0, 0); // scroll to top\n    });\n  };\n  \n  const deleteChannel = (index: number) => {\n    setChannels(channels.filter((_, i) => i !== index));\n    if (selectedChannelIndex === index) {\n      setVideos([]);\n      setSelectedChannelIndex(ChannelSelection.None);\n    }\n  };\n\n  const fetchChannelsVideos = (\n    selection: ChannelSelection,\n    filterFunction: ((video: Video) => boolean|undefined)|null = null,\n    sortFunction: ((a: Video, b: Video) => number)|null = null,\n    ignoreCache: boolean = false,\n    customChannels?: Channel[]\n  ) => {\n    // Update channel selection\n    setSelectedChannelIndex(selection);\n    // Get channels videos\n    setIsLoading(true);\n    setVideos([]);\n    let promises: Promise<any>[] = [];\n    let results: Video[] = [];\n    const channelsList = customChannels || channels;\n\n    channelsList.filter((channel: Channel) => !channel.isHidden).forEach((channel: Channel) => {\n\n      const promise = getChannelVideos(channel, ignoreCache, (channelVideos: Video[]) => {\n        if (filterFunction) {\n          return channelVideos?.filter(filterFunction);\n        } else {\n          return channelVideos;\n        }\n      }).then((channelVideos: Video[]) => {\n        debug.log('----------------------');\n        debug.log(channel.title, channelVideos);\n        if (sortFunction) {\n          channelVideos = channelVideos.sort(sortFunction);\n        }\n        results.push(...channelVideos);\n      });\n      promises.push(promise);\n\n    });\n\n    return Promise.all(promises).finally(() => {\n      setVideos(results);\n      setIsLoading(false);\n    });\n  };\n\n  const getSortFunction = (sortOrder: SortOrder) => {\n    return (a: Video, b: Video) => sortOrder === SortOrder.ASC ? a.publishedAt - b.publishedAt : b.publishedAt - a.publishedAt;\n  };\n\n  const showAllChannels = (\n    ignoreCache: boolean = false,\n    sortOrder: SortOrder = videosSortOrder[ChannelSelection.All]\n  ) => {\n    return fetchChannelsVideos(ChannelSelection.All, null, getSortFunction(sortOrder), ignoreCache);\n  };\n\n  const showTodaysVideos = (\n    ignoreCache: boolean = false,\n    sortOrder: SortOrder = videosSortOrder[ChannelSelection.TodaysVideos]\n  ) => {\n    return fetchChannelsVideos(ChannelSelection.TodaysVideos, (video: Video) => isInToday(video.publishedAt), getSortFunction(sortOrder), ignoreCache);\n  };\n\n  const showRecentVideos = (\n    ignoreCache: boolean = false,\n    sortOrder: SortOrder = videosSortOrder[ChannelSelection.RecentVideos]\n  ) => {\n    return fetchChannelsVideos(ChannelSelection.RecentVideos, (video: Video) => video.isRecent, getSortFunction(sortOrder), ignoreCache);\n  };\n\n  const showWatchLaterVideos = (\n    ignoreCache: boolean = false,\n    sortOrder: SortOrder = videosSortOrder[ChannelSelection.WatchLaterVideos]\n  ) => {\n    return fetchChannelsVideos(ChannelSelection.WatchLaterVideos, (video: Video) => video.isToWatchLater, getSortFunction(sortOrder), ignoreCache);\n  };\n\n  const showChannelSelection = (selection: ChannelSelection, ignoreCache: boolean = false, sortOrder?: SortOrder) => {\n    switch(selection) {\n      case ChannelSelection.TodaysVideos:\n        return showTodaysVideos(ignoreCache, sortOrder);\n      case ChannelSelection.RecentVideos:\n        return showRecentVideos(ignoreCache, sortOrder);\n      case ChannelSelection.WatchLaterVideos:\n        return showWatchLaterVideos(ignoreCache, sortOrder);\n      case ChannelSelection.All:\n      default:\n        return showAllChannels(ignoreCache, sortOrder);\n    }\n  };\n\n  const bulkUpdateVideos = (updateFunction: (video: Video) => void, callback?: () => void) => {\n    Object.keys(cache).forEach((channelId: string) => {\n      cache[channelId] = cache[channelId].map((video: Video) => {\n        updateFunction(video);\n        return video;\n      });\n    });\n    setCache({...cache});\n    if (callback) {\n      callback();\n    }\n  };\n\n  const clearRecentVideos = () => {\n    bulkUpdateVideos((video: Video) => video.isRecent = false, () => {\n      if (selectedChannelIndex === ChannelSelection.RecentVideos) {\n        refreshChannels(ChannelSelection.RecentVideos);\n      }\n    });\n  };\n\n  const clearWatchLaterVideos = () => {\n    bulkUpdateVideos((video: Video) => video.isToWatchLater = false, () => {\n      if (selectedChannelIndex === ChannelSelection.WatchLaterVideos) {\n        setVideos([]);\n      }\n    });\n  };\n\n  const refreshChannels = (selection?: ChannelSelection, event?: any, sortOrder?: SortOrder) => {\n    if (event) {\n      event.stopPropagation();\n    }\n    if (selection === undefined || selection === null) {\n      selection = selectedChannelIndex;\n    }\n    if (selection >= 0) {\n      return selectChannel(channels[selection], selection, true, sortOrder);\n    } else {\n      return showChannelSelection(selection, true, sortOrder);\n    }\n  };\n\n  const importChannels = (channelsList: Channel[]) => {\n    debug.log('importing channels', channelsList);\n    // Update channels\n    setChannels(channelsList);\n    fetchChannelsVideos(ChannelSelection.All, null, null, true, channelsList);\n    openSnackbar({\n      message: 'Channels imported!',\n      icon: 'success',\n      showRefreshButton: true\n    });\n  };\n\n  const openSettings = (event: any) => {\n    event.stopPropagation();\n    setOpenSettingsDialog(true);\n  };\n\n  const closeSettings = () => {\n    setOpenSettingsDialog(false);\n  };\n\n  const addAllVideosToWatchLater = () => {\n    let cacheUpdated: boolean = false;\n    videos.forEach((video: Video) => {\n      const videoIndex: number = cache[video?.channelId].findIndex((v: Video) => v.id === video?.id);\n      if (videoIndex > -1 && !cache[video.channelId][videoIndex].isToWatchLater) {\n        cache[video.channelId][videoIndex].isToWatchLater = true;\n        cacheUpdated = true;\n      }\n    });\n    if (cacheUpdated) {\n      setCache({...cache});\n      openSnackbar({\n        message: 'All videos added to watch later list!',\n        icon: 'success'\n      });\n    }\n  };\n\n  const handlePullToRefresh = (resolve: Function, reject: Function) => {\n    let promise: Promise<any>;\n    if (selectedChannelIndex >= 0) {\n      promise = selectChannel(channels[selectedChannelIndex], selectedChannelIndex, true);\n    } else {\n      promise = refreshChannels(selectedChannelIndex);\n    }\n    promise.then(() => {\n      resolve();\n    }).catch(() => {\n      reject();\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        color=\"secondary\"\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: openDrawer,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, openDrawer && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <span title=\"Youtube viewer\" className={classes.logo}>\n            <img alt=\"logo\" src=\"icons/128.png\" />\n          </span>\n          <SearchChannelInput onSelect={addChannel} onError={displayError} />\n          <div className={classes.grow} />\n          <IconButton edge=\"end\" aria-label=\"settings\" color=\"inherit\" onClick={(event) => openSettings(event)}>\n            <SettingsIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={openDrawer}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <ChannelList\n          className={isLoading ? classes.disabled : ''}\n          channels={channels}\n          selectedIndex={selectedChannelIndex}\n          todaysVideosCount={todaysVideosCount}\n          recentVideosCount={recentVideosCount}\n          watchLaterVideosCount={watchLaterVideosCount}\n          onShowAll={showAllChannels}\n          onShowTodaysVideos={showTodaysVideos}\n          onShowRecentVideos={showRecentVideos}\n          onShowWatchLaterVideos={showWatchLaterVideos}\n          onRefresh={refreshChannels}\n          onSelect={selectChannel}\n          onDelete={deleteChannel}\n          onSave={setChannels}\n          onSelectedIndexChange={setSelectedChannelIndex}\n          onClearRecentVideos={clearRecentVideos}\n          onAddVideosToWatchLater={addAllVideosToWatchLater}\n          onClearWatchLaterVideos={clearWatchLaterVideos}\n          onImport={importChannels}\n        />\n        <div className={classes.grow} />\n        <Divider />\n        <Typography variant=\"caption\" align=\"center\" className={classes.madeWithLove}>\n          Made with <FavoriteRoundedIcon className={classes.heartIcon} /> by AXeL\n          <Link href=\"https://github.com/AXeL-dev/youtube-viewer\" target=\"_blank\" rel=\"noopener\">\n            <IconButton edge=\"end\" size=\"small\" aria-label=\"github link\">\n              <GitHubIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Link>\n        </Typography>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: openDrawer,\n        })}\n        onClick={() => settings.autoCloseDrawer && handleDrawerClose()}\n      >\n        <div className={classes.drawerHeader} />\n        {isReady && selectedChannelIndex !== ChannelSelection.None && (channels?.length ? (\n          <ReactPullToRefresh\n            onRefresh={handlePullToRefresh}\n            icon={<ArrowDownwardIcon className=\"arrowicon\" />}\n            distanceToRefresh={50}\n            resistance={5}\n            style={{ position: 'relative', height: `calc(${height} - 64px)`, overflow: 'auto' }}\n          >\n            {videos?.length === 0 && !isLoading ? (\n              <Fade in={true} timeout={1000}>\n                <Box className={`${classes.container} expanded`}>\n                  <Typography component=\"div\" variant=\"h5\" color=\"textSecondary\" className={classes.centered} style={{ cursor: 'default' }}>\n                    <VideocamOffIcon style={{ fontSize: 38, verticalAlign: 'middle' }} /> No videos available\n                  </Typography>\n                </Box>\n              </Fade>\n            ) : selectedChannelIndex < 0 ? (\n              <MultiVideoGrid\n                channels={channels}\n                videos={videos}\n                settings={settings}\n                loading={isLoading}\n                maxPerChannel={settings.videosPerChannel}\n                maxVisible={maxVisibleVideos}\n                onSelect={selectChannel}\n                onSave={setChannels}\n                onRefresh={refreshChannels}\n              />\n            ) : (\n              <VideoGrid\n                videos={videos}\n                loading={isLoading}\n                maxPerChannel={settings.videosPerChannel}\n              />\n            )}\n          </ReactPullToRefresh>\n        ) : (\n          <Fade in={true} timeout={3000}>\n            <Box className={classes.container}>\n              <Typography component=\"div\" variant=\"h5\" color=\"textSecondary\" className={classes.centered} style={{ cursor: 'default' }}>\n                <SearchIcon style={{ fontSize: 38, verticalAlign: 'middle' }} /> Start by typing a channel name in the search box\n              </Typography>\n            </Box>\n          </Fade>\n        ))}\n      </main>\n      <SettingsDialog\n        open={openSettingsDialog}\n        onClose={closeSettings}\n      />\n      <BottomSnackbar\n        open={snackbar.isOpen}\n        snackbarKey={snackbar.key}\n        message={snackbar.message}\n        icon={snackbar.icon}\n        autoHideDuration={snackbar.autoHideDuration}\n        showRefreshButton={snackbar.showRefreshButton}\n        onClose={closeSnackbar}\n        onRefresh={refreshChannels}\n      />\n      <MessageSnackbar\n        message={lastError?.message}\n        open={!!lastError}\n        onClose={() => setLastError(null)}\n      />\n    </div>\n  )\n}\n","import React from 'react';\nimport Popup from './popup/Popup';\nimport { getFromStorage, saveToStorage } from '../helpers/storage';\nimport { isWebExtension, setBadgeText } from '../helpers/browser';\nimport { debug } from '../helpers/debug';\nimport { Video } from '../models/Video';\nimport { useConstructor } from '../hooks/useConstructor';\nimport { useUpdateAtom } from 'jotai/utils';\nimport { channelsAtom } from '../atoms/channels';\nimport { settingsAtom, defaultSettings } from '../atoms/settings';\nimport { cacheAtom } from '../atoms/cache';\n\nexport default function Main() {\n  const setChannels = useUpdateAtom(channelsAtom);\n  const setSettings = useUpdateAtom(settingsAtom);\n  const setCache = useUpdateAtom(cacheAtom);\n  const [isReady, setIsReady] = React.useState(false);\n\n  useConstructor(() => {\n    fetchData();\n    if (isWebExtension()) {\n      setBadgeText(''); // reset webextension badge\n    }\n  });\n\n  async function fetchData() {\n    // get data from storage\n    let [channels, settings, cache] = await getFromStorage('channels', 'settings', 'cache');\n    debug.log('Storage data:', {\n      channels: channels,\n      settings: settings,\n      cache: cache\n    });\n    // set/merge settings\n    settings = settings ? {...defaultSettings, ...settings} : defaultSettings;\n    // clear recent videos\n    if (settings?.autoClearRecentVideos && cache) {\n      let cacheHasChanged: boolean = false;\n      Object.keys(cache).forEach((channelId: string) => {\n        cache[channelId] = cache[channelId].map((video: Video) => {\n          if (video.isRecent) {\n            video.isRecent = false;\n            cacheHasChanged = true;\n          }\n          return video;\n        });\n      });\n      // update cache\n      if (cacheHasChanged) {\n        saveToStorage({ cache: cache });\n      }\n    }\n    // update state\n    setChannels(channels || []);\n    setSettings(settings);\n    setCache(!settings?.autoClearCache && cache ? cache : {});\n    setIsReady(true);\n  }\n\n  return (\n    <Popup isReady={isReady} />\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Background from './components/Background';\nimport Main from './components/Main';\nimport { Provider } from 'jotai';\n\nconst App: React.FC = () => {\n  return (\n    <Provider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/background\" component={Background} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}