{"version":3,"sources":["helpers/storage.ts","helpers/utils.ts","helpers/youtube.ts","helpers/browser.ts","components/Background.tsx","models/Channel.ts","components/shared/RawHTML.tsx","components/channel/SearchChannelInput.tsx","components/video/Media.tsx","helpers/debug.ts","components/video/VideoGrid.tsx","models/Settings.ts","components/video/MultiVideoGrid.tsx","components/shared/ConfirmationDialog.tsx","components/shared/ImportDialog.tsx","components/shared/MoveToPositionDialog.tsx","helpers/parser.ts","components/channel/ChannelList.tsx","helpers/download.ts","components/shared/MessageSnackbar.tsx","components/settings/SettingsDialog.tsx","components/shared/CustomSnackbar.tsx","components/Popup.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getFromStorage","promises","keys","forEach","key","push","__get","Promise","all","resolve","reject","browser","storage","local","get","then","error","finalValue","value","localStorage","getItem","JSON","parse","saveToStorage","values","Object","set","stringify","setItem","__save","niceDuration","ISO_8601_string","time","replace","toUpperCase","h","extract","m","s","join","stop","i","length","val","slice","shortenLargeNumber","num","decimal","digits","units","Math","pow","toFixed","TimeAgo","self","prefix","sufix","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","timeAgo","floor","Date","parseInt","separator","locales","words","interval","intervals","distance","trim","getDateBefore","before","date","setDate","getDate","isInToday","timestamp","setHours","diffHours","dt1","dt2","diff","getTime","abs","round","apiKey","process","apiRequest","a","settings","url","window","fetch","response","ok","json","Error","errors","reason","message","status","setApiKey","action","apiArgs","makeRequest","param","URLSearchParams","toString","apiUrl","getChannelActivities","channelId","after","part","publishedAfter","toISOString","maxResults","Symbol","getVideoInfo","videoIdList","joinedIds","fields","id","items","map","item","title","snippet","duration","contentDetails","views","count","statistics","viewCount","asString","publishedAt","thumbnail","thumbnails","medium","channelTitle","isWebExtension","createTab","isActive","tabs","create","active","sendNotification","type","notifications","iconUrl","setBadgeText","text","browserAction","isFirefox","navigator","userAgent","indexOf","ChannelSelection","defaults","Background","props","state","totalRecentVideosCount","checkedChannels","init","console","log","backgroundColor","textColor","setBadgeTextColor","color","setBadgeBackgroundColor","this","getAutoCheckRate","rate","autoCheckLoop","onClicked","addListener","notificationId","split","setTimeout","channels","cache","getRecentVideosCount","recentVideosCount","getBadgeText","badgeText","setState","enableRecentVideosNotifications","notification","autoVideosCheckRate","filter","channel","isHidden","notificationsDisabled","results","videosIds","upload","videoId","cacheVideosIds","video","recentVideosIds","index","videosPerChannel","suffix","catch","finally","React","Component","RawHTML","children","className","dangerouslySetInnerHTML","__html","useStyles","makeStyles","theme","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","breakpoints","up","spacing","searchIcon","height","pointerEvents","display","alignItems","justifyContent","clearButton","right","top","margin","inputRoot","inputInput","padding","transition","transitions","poper","zIndex","overflow","boxShadow","listbox","border","listStyle","background","paper","maxHeight","cursor","avatar","secondary","marginRight","SearchChannelInput","onSelect","onError","classes","useState","inputValue","setInputValue","options","setOptions","useAutocomplete","getOptionLabel","option","getRootProps","getInputProps","getListboxProps","getOptionProps","groupedOptions","useMemo","func","wait","timeout","context","args","arguments","clearTimeout","apply","debounce","input","callback","query","max","order","q","responseJson","payLoad","pageInfo","totalResults","howMany","min","description","searchChannel","useEffect","InputBase","placeholder","root","inputProps","onChange","event","target","IconButton","aria-label","size","onClick","fontSize","Grid","container","Avatar","alt","src","xs","Typography","variant","RegExp","anchor","textDecoration","imageContainer","opacity","left","image","overlay","bottom","textAlign","paddingLeft","paddingRight","transform","optionsButton","optionsIcon","Media","selectedChannelIndex","onWatchLaterClick","Link","href","rel","Box","WatchLaterVideos","Tooltip","pr","mt","gutterBottom","inWords","debug","params","warn","VideoGrid","videos","loading","maxPerChannel","maxSkeletons","onVideoClick","onVideoWatchLaterClick","preventLongPress","setPreventLongPress","handleMouseEvent","stopPropagation","preventDefault","style","minWidth","onMouseDown","onClickCapture","Array","from","marginBottom","draggable","Fragment","Skeleton","pt","SettingsType","breadcrumb","divider","link","outline","youtube","box","MultiVideoGrid","useTheme","onSave","onRefresh","expandedChannelsIndexes","setExpandedChannelsIndexes","channelVideos","hideEmptyChannels","Breadcrumbs","openChannelsOnNameClick","onChannelNameClick","c","hideChannel","edge","Divider","ConfirmationDialog","open","confirmButtonText","cancelButtonText","onClose","onConfirm","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","ImportDialog","textFieldId","textFieldLabel","onValidate","textFieldError","setTextFieldError","close","TextField","label","multiline","rows","fullWidth","document","getElementById","data","isValid","MoveToPositionDialog","step","positionFieldId","positionFieldLabel","positionFieldError","setPositionFieldError","defaultValue","isNaN","test","createStyles","channelsOptionsIcon","menuIcon","verticalAlign","subheader","ChannelList","selectedIndex","All","cacheSize","todaysVideosCount","watchLaterVideosCount","onShowAll","onShowTodaysVideos","onShowRecentVideos","onShowWatchLaterVideos","onDelete","onSelectedIndexChange","onClearCache","onClearRecentVideos","onAddVideosToWatchLater","onClearWatchLaterVideos","onImport","openDeleteChannelDialog","setOpenDeleteChannelDialog","channelToDelete","setChannelToDelete","channelToDeleteIndex","setChannelToDeleteIndex","anchorEl","setAnchorEl","openedMenuIndex","setOpenedMenuIndex","openClearCacheDialog","setOpenClearCacheDialog","openClearRecentVideosDialog","setOpenClearRecentVideosDialog","openClearWatchLaterVideosDialog","setOpenClearWatchLaterVideosDialog","openImportChannelsDialog","setOpenImportChannelsDialog","moveToPositionChannelIndex","setMoveToPositionChannelIndex","getSelectedChannel","find","_","moveChannel","indexFrom","indexTo","closeMenu","selectedChannel","list","startIndex","endIndex","result","splice","removed","reorder","closeDeleteChannelDialog","setChannel","None","openMenu","currentTarget","closeClearCacheDialog","exportChannels","blob","filename","msSaveOrOpenBlob","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","Blob","closeImportChannelsDialog","closeMoveChannelToPositionDialog","closeClearRecentVideosDialog","closeClearWatchLaterVideosDialog","onDragEnd","destination","source","droppableId","provided","snapshot","RootRef","rootRef","innerRef","List","dense","ListSubheader","keepMounted","MenuItem","isDraggingOver","ListItem","button","selected","ListItemIcon","Badge","badgeContent","ListItemText","primary","ListItemSecondaryAction","refreshAll","TodaysVideos","refreshTodaysVideos","RecentVideos","refreshRecentVideos","draggableId","ContainerProps","ref","draggableProps","dragHandleProps","isDragging","draggableStyle","openChannel","refreshChannel","channelIndex","unhideChannel","enableChannelNotifications","disableChannelNotifications","deleteChannel","channelsList","MessageSnackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Snackbar","settingsAppBar","settingsTitle","flex","select","textShadow","optionLabel","maxWidth","settingsDialogTransition","forwardRef","Slide","direction","SettingsDialog","validateSettings","match","fullScreen","TransitionComponent","AppBar","Toolbar","Select","native","defaultChannelSelection","videosAnteriority","sortVideosBy","component","minLength","Switch","defaultChecked","autoPlayVideos","openVideosInInactiveTabs","autoClearRecentVideos","autoClearCache","CustomSnackbar","showRefreshButton","minHeight","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","grow","flexGrow","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","centered","alignSelf","heartIcon","madeWithLove","Popup","setChannels","setVideos","openDrawer","setOpenDrawer","isReady","setIsReady","isLoading","setIsLoading","setSelectedChannelIndex","setSettings","openSettingsDialog","setOpenSettingsDialog","snackbarMessage","setSnackbarMessage","snackbarAutoHideDuration","setSnackbarAutoHideDuration","showSnackbarRefreshButton","setShowSnackbarRefreshButton","lastError","setLastError","setCache","setRecentVideosCount","setTodaysVideosCount","setWatchLaterVideosCount","showChannelSelection","totalTodaysVideosCount","totalWatchLaterVideosCount","recentVideosCountPerChannel","isRecent","todaysVideosCountPerChannel","watchLaterVideosCountPerChannel","isToWatchLater","recent","todays","watchLater","handleDrawerClose","displayError","getChannelVideos","ignoreCache","videosData","now","videoDate","sort","b","selectChannel","scrollTo","fetchChannelsVideos","selection","filterFunction","customChannels","promise","newVideos","showAllChannels","showTodaysVideos","showRecentVideos","showWatchLaterVideos","refreshChannels","undefined","closeSettings","getSettingsValue","element","Number","Boolean","checked","String","openSnackbar","openVideo","tab","tabId","code","executeScript","removeVideoFromWatchLater","addVideoToWatchLater","videoIndex","findIndex","v","CssBaseline","clsx","noWrap","found","openSettings","Drawer","obj","bytes","formatByteSize","sizeOf","objClass","prototype","call","hasOwnProperty","memorySizeOf","cacheUpdated","align","icon","distanceToRefresh","resistance","Fade","in","Main","updateState","cacheHasChanged","App","exact","path","location","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f951ea6.chunk.js","sourcesContent":["//import { browser } from \"webextension-polyfill-ts\";\n\ndeclare var browser: any;\n\n/**\n * Get data from storage\n * \n * EX: getFromStorage('key1', 'key2', ...)\n * \n * @param keys \n */\nexport function getFromStorage(...keys: string[]): Promise<any> {\n  let promises: Promise<any>[] = [];\n  keys.forEach((key: string) => {\n    promises.push(__get(key));\n  });\n  return Promise.all(promises);\n}\n\nfunction __get(key: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    try {\n      browser.storage.local.get(key).then((storage: any) => {\n        resolve(storage[key]);\n      });\n    }\n    catch(error) {\n      //console.log(error.message);\n      const value: any = localStorage.getItem(key);\n      let finalValue: any;\n      try {\n        finalValue = JSON.parse(value);\n      }\n      catch(error) {\n        finalValue = value;\n      }\n      resolve(finalValue);\n    }\n  });\n}\n\n/**\n * Save data to storage\n * \n * EX: saveToStorage({ key1: value1, key2: value2, ... })\n * \n * @param values \n */\nexport function saveToStorage(values: {[key: string]: any}): Promise<any> {\n  let promises: Promise<any>[] = [];\n  Object.keys(values).forEach((key: string) => {\n    promises.push(__save(key, values[key]));\n  });\n  return Promise.all(promises);\n}\n\nfunction __save(key: string, value: any): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      browser.storage.local.set({[key]: value}).then(() => {\n        resolve();\n      });\n    }\n    catch(error) {\n      //console.log(error.message);\n      let finalValue: any;\n      try {\n        finalValue = JSON.stringify(value);\n      }\n      catch(error) {\n        finalValue = value;\n      }\n      localStorage.setItem(key, finalValue);\n      resolve();\n    }\n  });\n}\n","\n/**\n * Convert youtube duration to readable format\n * \n * @param ISO_8601_string {string}\n */\nexport function niceDuration (ISO_8601_string: string) {\n  let time = ISO_8601_string.replace(\"PT\", \"\").toUpperCase();\n  let h = extract('H');\n  let m = extract('M');\n  let s = extract('S');\n  return h !== '00' ? [h, m, s].join(':') : [m, s].join(':');\n\n  function extract (stop: string) {\n      for (let i = 0; i < time.length; i++) {\n          if (time[i] === stop) {\n              let val = time.slice(0, i);\n              if (val.length === 1 && stop !== 'H') {\n                  val = '0' + val;\n              }\n              time = time.slice(i + 1);\n              return val;\n          }\n      }\n      return '00';\n  }\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Shorten number to thousands, millions, billions, etc.\n * http://en.wikipedia.org/wiki/Metric_prefix\n *\n * @param {number} num Number to shorten.\n * @param {number} [digits=0] The number of digits to appear after the decimal point.\n * @returns {string|number}\n *\n * @example\n * // returns '12.5k'\n * shortenLargeNumber(12543, 1)\n *\n * @example\n * // returns '-13k'\n * shortenLargeNumber(-12567)\n *\n * @example\n * // returns '51M'\n * shortenLargeNumber(51000000)\n *\n * @example\n * // returns 651\n * shortenLargeNumber(651)\n *\n * @example\n * // returns 0.12345\n * shortenLargeNumber(0.12345)\n */\nexport function shortenLargeNumber(num: number, digits: number = 0) {\n  let units = ['k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'],\n      decimal;\n\n  for(let i=units.length-1; i>=0; i--) {\n      decimal = Math.pow(1000, i+1);\n\n      if(num <= -decimal || num >= decimal) {\n          return +(num / decimal).toFixed(digits) + units[i];\n      }\n  }\n\n  return num;\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return Date & time in words\n * Stolen from: https://stackoverflow.com/a/37802747\n */\nexport const TimeAgo = (() => {\n  let self: any = {};\n\n  // Public Methods\n  self.locales = {\n    prefix: '',\n    sufix:  'ago',\n    \n    seconds: 'less than a minute',\n    minute:  'about a minute',\n    minutes: '%d minutes',\n    hour:    'about an hour',\n    hours:   'about %d hours',\n    day:     'a day',\n    days:    '%d days',\n    month:   'about a month',\n    months:  '%d months',\n    year:    'about a year',\n    years:   '%d years'\n  };\n  \n  self.inWords = (timeAgo: any) => {\n    let seconds = Math.floor((new Date() as any - parseInt(timeAgo)) / 1000),\n        separator = self.locales.separator || ' ',\n        words = self.locales.prefix + separator,\n        interval = 0,\n        intervals: any = {\n          year:   seconds / 31536000,\n          month:  seconds / 2592000,\n          day:    seconds / 86400,\n          hour:   seconds / 3600,\n          minute: seconds / 60\n        };\n    \n    let distance = self.locales.seconds;\n    \n    for (let key in intervals) {\n      interval = Math.floor(intervals[key]);\n      \n      if (interval > 1) {\n        distance = self.locales[key + 's'];\n        break;\n      } else if (interval === 1) {\n        distance = self.locales[key];\n        break;\n      }\n    }\n    \n    distance = distance.replace(/%d/i, interval);\n    words += distance + separator + self.locales.sufix;\n\n    return words.trim();\n  };\n  \n  return self;\n})();\n\n// -------------------------------------------------------------------\n\n/**\n * Return current date minus number of days before\n * \n * @param before {number}\n */\nexport function getDateBefore(before: number = 0): Date {\n  let date = new Date();\n  date.setDate(date.getDate() - before);\n  return date;\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Check if the given timestamp is in today's date\n * Stolen from: https://stackoverflow.com/a/40628566\n * \n * @param timestamp \n */\nexport function isInToday(timestamp: number) {\n  let today = new Date();\n  if (today.setHours(0, 0, 0, 0) === new Date(timestamp).setHours(0, 0, 0, 0)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Returns hours difference between two dates\n * Stolen from: https://www.w3resource.com/javascript-exercises/javascript-date-exercise-45.php\n * \n * @param dt1 \n * @param dt2 \n */\nexport function diffHours(dt1: Date, dt2: Date): number {\n  let diff = (dt2.getTime() - dt1.getTime()) / 1000;\n  diff /= (60 * 60);\n  return Math.abs(Math.round(diff));\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return a new RegExp object instance\n * \n * @param pattern \n * @param modifiers \n */\nexport function getRegex(pattern: string, modifiers: string): RegExp {\n  return new RegExp(pattern, modifiers);\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return size of an object\n * Stolen from: https://gist.github.com/zensh/4975495\n * \n * @param obj \n */\nexport function memorySizeOf(obj: any) {\n  let bytes = 0;\n\n  function sizeOf(obj: any) {\n      if(obj !== null && obj !== undefined) {\n          switch(typeof obj) {\n          case 'number':\n              bytes += 8;\n              break;\n          case 'string':\n              bytes += obj.length * 2;\n              break;\n          case 'boolean':\n              bytes += 4;\n              break;\n          case 'object':\n              let objClass = Object.prototype.toString.call(obj).slice(8, -1);\n              if(objClass === 'Object' || objClass === 'Array') {\n                  for(let key in obj) {\n                      if(!obj.hasOwnProperty(key)) continue;\n                      sizeOf(obj[key]);\n                  }\n              } else bytes += obj.toString().length * 2;\n              break;\n          }\n      }\n      return bytes;\n  }\n\n  function formatByteSize(bytes: number) {\n      if(bytes < 1024) return bytes + \" bytes\";\n      else if(bytes < 1048576) return(bytes / 1024).toFixed(3) + \" KiB\";\n      else if(bytes < 1073741824) return(bytes / 1048576).toFixed(3) + \" MiB\";\n      else return(bytes / 1073741824).toFixed(3) + \" GiB\";\n  }\n\n  return formatByteSize(sizeOf(obj));\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Create a new function that limits calls to func to once every given timeframe.\n * Stolen from: https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_throttle\n * \n * @param func \n * @param timeFrame \n */\nexport function throttle(callback: Function, timeFrame: number): Function {\n  let lastTime = 0;\n  return (...args: any) => {\n    let now = new Date().getTime();\n    if (now - lastTime >= timeFrame) {\n      callback(...args);\n      lastTime = now;\n    }\n  };\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Create a new function that calls func with thisArg and args.\n * Stolen from: https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_debounce\n * \n * @param func \n * @param wait \n */\nexport function debounce(func: Function, wait: number): Function {\n  let timeout: any = null;\n  return function(this: any) {\n    const context = this, args = arguments;\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n      func.apply(context, args);\n    }, wait);\n  };\n}\n\n/**\n * Generates 26 [a-z0-9] characters, yielding a UID that is both shorter and more unique than RFC compliant GUIDs.\n * Dashes can be trivially added if human-readability matters.\n * Stolen from: https://stackoverflow.com/a/13403498\n */\nexport function generateGuid() {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\n","/*\nThis Source Code Form is subject to the terms of the\nMozilla Public License, v. 2.0.\nIf a copy of the MPL was not distributed with this file,\nYou can obtain one at http://mozilla.org/MPL/2.0/.\nAuthor(s): XrXr, AXeL-dev\n\nThis module provide functions for making api certain YouTube Data API V3\nrequests. All functions return promise.\n*/\n\nimport { niceDuration, shortenLargeNumber } from './utils';\nimport { getFromStorage } from './storage';\n\nlet apiKey = process.env.REACT_APP_YOUTUBE_API_KEY;\n\n/**\n * Send API requests to youtube\n */\nconst apiRequest = (() => {\n    async function setApiKey() {\n        const [settings] = await getFromStorage('settings');\n        apiKey = settings?.apiKey?.length ? settings.apiKey : apiKey;\n    }\n\n    async function makeRequest (url: string) {\n        let response = await window.fetch(url);\n        //console.log(`HTTP ${response.status}: ${response.url}`);\n        if (!response.ok) {\n            const json = await response.json();\n            //console.log(json);\n            throw Error(json?.error?.errors[0] ? `<strong>${json.error.errors[0].reason}</strong>: ${json.error.errors[0].message.replace(/<\\/?[^>]+(>|$)/g, '')}` : `HTTP ${response.status}: ${response.url}`);\n        }\n        return await response.json();\n    }\n\n    function apiUrl (action: string, param: any) {\n        let url = \"https://www.googleapis.com/youtube/v3/\" + action + '?';\n        url += new URLSearchParams({...param, key: apiKey }).toString();\n        return url;\n    }\n\n    setApiKey();\n\n    return (action: string, apiArgs: any) => makeRequest(apiUrl(action, apiArgs));\n})();\n\n/**\n * Request a channel's activities after a date\n * Return a promise that resolves to api response\n * \n * @param channelId \n * @param after \n */\nfunction getChannelActivities (channelId: string, after: Date = new Date()) {\n    return apiRequest(\"activities\", {\n        part: \"snippet,contentDetails\",\n        channelId: channelId,\n        publishedAfter: after.toISOString(),\n        maxResults: 50\n    });\n}\n\n/**\n * Return video duration\n * \n * @param videoId \n */\nconst VIDEO_DOES_NOT_EXIST = Symbol(\"Video does not exist\");\nfunction getDuration (videoId: string) {\n    return apiRequest(\"videos\", {\n        part: \"contentDetails\",\n        fields: \"items/contentDetails/duration\",\n        id: videoId,\n    }).then(json => {\n        if (json.items.length === 0) {\n            throw VIDEO_DOES_NOT_EXIST;\n        }\n        return {\n            videoId,\n            duration: niceDuration(json.items[0].contentDetails.duration)\n        };\n    });\n}\n\n/**\n * Return video tags & duration\n * \n * @param videoId \n */\nfunction getTagsAndDuration (videoId: string) {\n    return apiRequest(\"videos\", {\n        part: \"snippet,contentDetails\",\n        fields: \"items/contentDetails/duration,items/snippet/tags\",\n        id: videoId,\n    }).then(res => {\n        res = res.items[0];\n        return {\n            duration: niceDuration(res.contentDetails.duration),\n            tags: (res.snippet && res.snippet.tags) || []\n        };\n    });\n}\n\n/**\n * Return video informations\n * \n * @param videoIdList \n */\nfunction getVideoInfo (videoIdList: string[]) {\n    let joinedIds = videoIdList.join(\",\");\n    return apiRequest(\"videos\", {\n        part: \"snippet,contentDetails,statistics,id\",\n        fields: \"items(id,contentDetails/duration,statistics/viewCount,snippet(title,channelTitle,channelId,publishedAt,thumbnails/medium))\",\n        id: joinedIds,\n        maxResults: 50, // not working when id is filled (which is the case here)\n    }).then(response => {\n        //console.log(response);\n        return response.items.map((item: any) => ({\n            id: item.id,\n            title: item.snippet.title,\n            url: 'https://www.youtube.com/watch?v=' + item.id,\n            duration: niceDuration(item.contentDetails.duration),\n            views: {\n                count: item.statistics.viewCount,\n                asString: shortenLargeNumber(item.statistics.viewCount),\n            },\n            publishedAt: new Date(item.snippet.publishedAt).getTime(),\n            thumbnail: item.snippet.thumbnails.medium.url,\n            channelId: item.snippet.channelId,\n            channelTitle: item.snippet.channelTitle,\n        }));\n    });\n}\n\n//getVideoInfo.batch_size = 50;\n\n/**\n * Request to search channel matching `query`. Return a promise that will\n * resolve to either [] or [channels]\n * \n * @param query \n * @param max \n */\nfunction searchChannel (query: string, max: number = 3) {\n    return apiRequest(\"search\", {\n        part: \"snippet\",\n        type: \"channel\",\n        order: \"relevance\",\n        q: query\n    }).then(responseJson => {\n        //console.log(responseJson);\n        let payLoad: any = [];\n        if (responseJson.pageInfo.totalResults > 0) {\n            const howMany = Math.min(responseJson.pageInfo.totalResults, max);\n            for (let i = 0; i < howMany; i++) {\n                if (responseJson.items[i]) {\n                    payLoad.push({\n                        title: responseJson.items[i].snippet.title,\n                        url: 'https://www.youtube.com/channel/' + responseJson.items[i].id.channelId + '/videos',\n                        description: responseJson.items[i].snippet.description,\n                        thumbnail: responseJson.items[i].snippet.thumbnails.medium.url,\n                        id: responseJson.items[i].id.channelId\n                    });\n                }\n            }\n        }\n        return payLoad;\n    });\n}\n\nexport {\n    searchChannel,\n    getDuration,\n    getChannelActivities,\n    getTagsAndDuration,\n    getVideoInfo,\n    VIDEO_DOES_NOT_EXIST,\n};\n","//import { browser } from \"webextension-polyfill-ts\";\n\ndeclare var browser: any;\n\nexport function isWebExtension(): boolean {\n  try {\n    return !!browser;\n  } catch(error) {\n    return false;\n  }\n}\n\nexport function createTab(url: string, isActive: boolean = true): Promise<any> {\n  return browser.tabs.create({\n    url: url,\n    active: isActive\n  });\n}\n\nexport function executeScript(tabId: number, code: string): void {\n  browser.tabs.executeScript(\n    tabId, {\n      code: code\n    }\n  );\n}\n\nexport function sendNotification(message: string, id?: string, type: string|any = 'basic'): void { // id will be auto-generated if empty\n  browser.notifications.create(id, {\n    type: type,\n    title: 'Youtube viewer',\n    iconUrl: 'icons/128.png',\n    message: message\n  });\n}\n\nexport function setBadgeText(text: string|number): void {\n  browser.browserAction.setBadgeText({\n    text: text === 0 ? '' : text.toString()\n  });\n}\n\nexport function setBadgeColors(backgroundColor: string, textColor: string): void {\n  if (isFirefox()) {\n    browser.browserAction.setBadgeTextColor({ color: textColor });\n  }\n  browser.browserAction.setBadgeBackgroundColor({ color: backgroundColor });\n}\n\nexport function getBadgeText(): Promise<string> {\n  return browser.browserAction.getBadgeText({});\n}\n\nexport function isFirefox(): boolean {\n  return navigator.userAgent.indexOf(\"Firefox\") !== -1;\n}\n\nexport function isChrome(): boolean {\n  return navigator.userAgent.indexOf(\"Chrome\") !== -1;\n}\n","import React from 'react';\nimport { Channel } from '../models/Channel';\nimport { Settings } from '../models/Settings';\nimport { Video } from '../models/Video';\nimport { getFromStorage } from '../helpers/storage';\nimport { getDateBefore } from '../helpers/utils';\nimport { getChannelActivities } from '../helpers/youtube';\nimport { isWebExtension, setBadgeText, setBadgeColors, getBadgeText, sendNotification, createTab } from '../helpers/browser';\nimport { Notification } from '../models/Notification';\n\ndeclare var browser: any;\n\nconst defaults: any = {\n  videosCheckRate: 30, // minute(s)\n  videosAnteriority: 1, // day(s)\n  videosPerChannel: 9,\n};\n\ninterface BackgroundProps {}\n\ninterface BackgroundState {\n  totalRecentVideosCount: number;\n  checkedChannels: {\n    [key: string]: { // key == channel.id\n      videosIds: string[],\n      url: string\n    }\n  };\n}\n\nclass Background extends React.Component<BackgroundProps, BackgroundState> {\n  constructor(props: BackgroundProps) {\n    super(props);\n    this.state = {\n      totalRecentVideosCount: 0,\n      checkedChannels: {}\n    };\n    if (isWebExtension()) {\n      this.init();\n      console.log('background init executed.');\n    }\n  }\n\n  async init() {\n    setBadgeColors('#666', '#fff');\n    const rate = await this.getAutoCheckRate();\n    this.log('Rate:', rate);\n    this.autoCheckLoop(rate);\n    // Handle click on notifications\n    browser.notifications.onClicked.addListener((notificationId: string) => {\n      this.log('Notification clicked:', notificationId);\n      const [ , id ] = notificationId.split('::');\n      const url = this.state.checkedChannels[id]?.url;\n      if (url?.length) {\n        createTab(url);\n      }\n    });\n  }\n\n  log(message: any, ...params: any) {\n    //console.log(message, ...params); // comment/uncomment this to manually enable/disable logs\n  }\n\n  autoCheckLoop(rate: number) {\n    setTimeout(async () => {\n      // Get storage data\n      const [channels, settings, cache] = await getFromStorage('channels', 'settings', 'cache');\n      this.log('Storage data:', { channels: channels, settings: settings, cache: cache });\n      // Check for recent videos\n      const [recentVideosCount, notifications] = await this.getRecentVideosCount(channels, settings, cache);\n      const badgeText: string = await getBadgeText();\n      let { totalRecentVideosCount } = this.state;\n      this.log('Recent videos count:', recentVideosCount);\n      this.log('Badge text:', badgeText);\n      if (badgeText.length) { // if badge text wasn't reseted yet (means that the user didn't yet notice it), we increment the total count\n        totalRecentVideosCount += recentVideosCount;\n      } else {\n        totalRecentVideosCount = recentVideosCount;\n      }\n      this.setState({ totalRecentVideosCount: totalRecentVideosCount });\n      this.log('Total count:', totalRecentVideosCount);\n      setBadgeText(totalRecentVideosCount);\n      // Notify\n      if (settings?.enableRecentVideosNotifications && recentVideosCount > 0) {\n        notifications.forEach((notification: Notification) => {\n          const id = notification.id?.length ? new Date().getTime() + '::' + notification.id : '';\n          sendNotification(notification.message, id);\n        });\n      }\n      // Re-loop\n      this.autoCheckLoop(settings?.autoVideosCheckRate || defaults.videosCheckRate);\n    }, rate * 60 * 1000); // convert minutes to milliseconds\n  }\n\n  getAutoCheckRate(): Promise<number> {\n    return new Promise(async (resolve, reject) => {\n      const [settings] = await getFromStorage('settings');\n      resolve(settings?.autoVideosCheckRate || defaults.videosCheckRate);\n    });\n  }\n\n  getRecentVideosCount(channels: Channel[], settings: Settings, cache: any): Promise<[number, Notification[]]> {\n\n    return new Promise((resolve, reject) => {\n  \n      let count: number = 0;\n      let notifications: Notification[] = [];\n      let promises: Promise<any>[] = [];\n      let { checkedChannels } = this.state;\n  \n      channels.filter((channel: Channel) => !channel.isHidden && !channel.notificationsDisabled).forEach((channel) => {\n  \n        promises.push(\n          getChannelActivities(channel.id, getDateBefore(defaults.videosAnteriority)).then((results) => {\n            this.log('activities of', channel.title, results);\n            if (results?.items) {\n              // get recent videos ids\n              const videosIds: string[] = results.items.map((item: any) => item.contentDetails.upload?.videoId).filter((id: string) => id?.length);\n              const cacheVideosIds: string[] = cache[channel.id]?.length ? cache[channel.id].map((video: Video) => video.id) : [];\n              const recentVideosIds: string[] = videosIds.filter((videoId: string, index: number) => videosIds.indexOf(videoId) === index) // remove duplicates\n                                                         .slice(0, settings?.videosPerChannel || defaults.videosPerChannel)\n                                                         .filter((videoId: string) => !checkedChannels[channel.id] || checkedChannels[channel.id].videosIds.indexOf(videoId) === -1) // remove videos already checked\n                                                         .filter((videoId: string) => cacheVideosIds.indexOf(videoId) === -1); // remove videos already in cache\n              // set recent videos count\n              if (recentVideosIds.length) {\n                this.log(recentVideosIds.length, 'recent videos');\n                // update checked videos ids\n                if (!checkedChannels[channel.id]) {\n                  checkedChannels[channel.id] = {\n                    videosIds: [],\n                    url: channel.url\n                  };\n                }\n                checkedChannels[channel.id].videosIds.push(...recentVideosIds);\n                // generate notification messages\n                const suffix = recentVideosIds.length > 1 ? 's' : '';\n                notifications.push({\n                  message: `${channel.title} posted ${recentVideosIds.length} recent video${suffix}`,\n                  id: channel.id\n                });\n                // update count\n                count += recentVideosIds.length;\n              } else {\n                this.log('no recent videos for this channel');\n              }\n            }\n          }).catch((error: Error) => {\n            console.error(error);\n          })\n        );\n  \n      });\n  \n      Promise.all(promises).finally(() => {\n        this.setState({ checkedChannels: checkedChannels });\n        resolve([count, notifications]);\n      });\n  \n    });\n  \n  }\n\n  render() {\n    return (\n      <span>Silence is golden!</span>\n    );\n  }\n}\n\nexport default Background;\n","\nexport interface Channel {\n  id: string,\n  thumbnail: string,\n  title: string,\n  url: string,\n  description: string,\n  isHidden: boolean,\n  notificationsDisabled: boolean\n}\n\nexport enum ChannelSelection {\n  All = -1,\n  None = -2,\n  RecentVideos = -3,\n  TodaysVideos = -4,\n  WatchLaterVideos = -5\n}\n","import React from 'react';\n\n// Stolen from: https://stackoverflow.com/a/45810395\nexport const RawHTML = ({children, className = ''}: any): any =>\n  <span className={className} dangerouslySetInnerHTML={{ __html: children.replace(/\\n/g, '<br />')}} />\n","import React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme, fade } from '@material-ui/core/styles';\nimport { searchChannel } from '../../helpers/youtube';\nimport Avatar from '@material-ui/core/Avatar';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Channel } from '../../models/Channel';\nimport { getRegex, debounce } from '../../helpers/utils';\nimport { RawHTML } from '../shared/RawHTML';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(6),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  clearButton: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    margin: theme.spacing(0.75),\n    color: theme.palette.common.white,\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 4, 1, 6),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 200,\n      '&:focus': {\n        width: 260,\n      },\n    },\n  },\n  poper: {\n    position: 'absolute',\n    width: '100%',\n    zIndex: 1,\n    margin: '4px 0',\n    overflow: 'hidden',\n    borderRadius: '4px',\n    boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n  },\n  listbox: {\n    position: 'relative',\n    margin: 0,\n    padding: '8px 0',\n    border: 'none',\n    listStyle: 'none',\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: '40vh',\n    '& li': {\n      padding: '6px 16px'\n    },\n    '& li[data-focus=\"true\"]': {\n      backgroundColor: 'rgba(0, 0, 0, 0.08)',\n      cursor: 'pointer',\n    },\n    '& li:active': {\n      backgroundColor: 'rgba(0, 0, 0, 0.14)'\n    },\n  },\n  avatar: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n}));\n\ninterface SearchProps {\n  onSelect: Function;\n  onError: Function;\n}\n\nexport default function SearchChannelInput(props: SearchProps) {\n  const { onSelect, onError } = props;\n  const classes = useStyles();\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState<Channel[]>([]);\n  const {\n    getRootProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n  } = useAutocomplete({\n    id: 'search-autocomplete',\n    options: options,\n    getOptionLabel: option => {\n      //console.log(option);\n      if (option?.title) {\n        setInputValue(option.title);\n        return option.title;\n      }\n      return option;\n    },\n    value: inputValue,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const fetch = React.useMemo(\n    () =>\n      debounce((input: any, callback: Function) => {\n        //console.log(input);\n        searchChannel(input.value, 5).then((results: Channel[]) => {\n          //console.log(results);\n          callback(results);\n        }).catch((error) => {\n          onError(error);\n        });\n      }, 200),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (inputValue === '') {\n      setOptions([]);\n      return undefined;\n    }\n\n    fetch({ value: inputValue }, (results?: Channel[]) => {\n      if (active) {\n        setOptions(results || []);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [inputValue, fetch]);\n\n  return (\n    <div className={classes.search}>\n      <div {...getRootProps()}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Search for a channel…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ ...getInputProps(), 'aria-label': 'search' }}\n          onChange={handleChange}\n        />\n        {inputValue?.length > 0 && (\n          <IconButton aria-label=\"clear\" size=\"small\" className={classes.clearButton} onClick={() => setInputValue('')}>\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        )}\n      </div>\n      {groupedOptions.length > 0 ? (\n        <div className={classes.poper}>\n          <ul className={classes.listbox} {...getListboxProps()}>\n            {groupedOptions.map((option, index) => (\n              <li {...getOptionProps({ option, index })}>\n                <Grid container alignItems=\"center\" onClick={() => onSelect(option)}>\n                  <Grid item>\n                    <Avatar className={classes.avatar} alt={option.title} src={option.thumbnail} />\n                  </Grid>\n                  <Grid item xs>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      <RawHTML>{option.title.replace(getRegex('(' + inputValue + ')', 'gi'), `<strong>$1</strong>`)}</RawHTML>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Video } from '../../models/Video';\nimport { TimeAgo } from '../../helpers/utils';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\nimport { ChannelSelection } from '../../models/Channel';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  anchor: {\n    textDecoration: 'none',\n    color: 'inherit',\n    display: 'inline-block',\n    '&:hover': {\n      textDecoration: 'none',\n    }\n  },\n  imageContainer: {\n    position: 'relative',\n    '&:hover .overlay': {\n      opacity: 1,\n    },\n    '&:hover .options': {\n      top: '50%',\n      left: '50%',\n      opacity: 1,\n    }\n  },\n  image: {\n    width: 210,\n    height: 118,\n    display: 'inherit'\n  },\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    position: 'absolute',\n    height: '99%',\n    width: '100%',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n    opacity: 0,\n    transition: 'all 0.4s ease-in-out 0s',\n  },\n  options: {\n    position: 'absolute',\n    textAlign: 'center',\n    paddingLeft: '1em',\n    paddingRight: '1em',\n    width: '100%',\n    top: '50%',\n    left: '50%',\n    opacity: 0,\n    transform: 'translate(-50%, -50%)',\n    transition: 'all 0.3s ease-in-out 0s',\n  },\n  optionsButton: {\n    color: '#fff',\n    margin: theme.spacing(0.5),\n  },\n  optionsIcon: {\n    fontSize: '1.6em',\n    //verticalAlign: 'middle',\n    '&.bigger': {\n      fontSize: '2.2em',\n    }\n  },\n  duration: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    margin: '4px',\n    color: '#fff',\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    padding: '2px 4px',\n    borderRadius: '2px'\n  }\n}));\n\ninterface MediaProps {\n  item: Video;\n  selectedChannelIndex: number;\n  onClick: Function;\n  onWatchLaterClick: Function;\n}\n\nexport default function Media(props: MediaProps) {\n  const { item, selectedChannelIndex, onClick, onWatchLaterClick } = props;\n  const classes = useStyles();\n\n  return (\n    <Link href={item.url} className={classes.anchor} target=\"_blank\" rel=\"noopener\" onClick={(event: any) => onClick(event, item)}>\n      <Box className={classes.imageContainer}>\n        <img className={classes.image} alt=\"\" src={item.thumbnail} />\n        <Box className={`${classes.overlay} overlay`}></Box>\n        <Box className={`${classes.options} options`}>\n          {selectedChannelIndex !== ChannelSelection.WatchLaterVideos && \n          <IconButton size=\"small\" className={classes.optionsButton} onClick={(event: any) => onWatchLaterClick(event, item)}>\n            <Tooltip title=\"Watch later\" aria-label=\"watch-later\">\n              <WatchLaterIcon className={classes.optionsIcon} />\n            </Tooltip>\n          </IconButton>}\n          <IconButton size=\"small\" className={classes.optionsButton}>\n            <Tooltip title=\"Watch now\" aria-label=\"watch-now\">\n              <PlayArrowIcon className={`${classes.optionsIcon} bigger`} />\n            </Tooltip>\n          </IconButton>\n        </Box>\n        <Typography variant=\"caption\" className={classes.duration}>\n          {item.duration}\n        </Typography>\n      </Box>\n      <Box pr={2} mt={1}>\n        <Typography gutterBottom variant=\"body2\">\n          {item.title}\n        </Typography>\n        <Typography display=\"block\" variant=\"caption\" color=\"textSecondary\">\n          {item.channelTitle}\n        </Typography>\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          {`${item.views.asString || item.views} • ${TimeAgo.inWords(item.publishedAt)}`}\n        </Typography>\n      </Box>\n    </Link>\n  );\n}\n","// no need to import process Object since it will be defined by create-react-app\n\nexport const isDevEnv: boolean = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\nexport function debug(message: any, ...params: any) {\n  isDevEnv && console.log(message, ...params);\n}\n\nexport function warn(message: any, ...params: any) {\n  isDevEnv && console.warn(message, ...params);\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Video } from '../../models/Video';\nimport Media from './Media';\nimport { debug } from '../../helpers/debug';\n\ninterface VideoGridProps {\n  loading?: boolean;\n  selectedChannelIndex: number;\n  videos: Video[];\n  maxPerChannel?: number;\n  maxSkeletons?: number;\n  onVideoClick: Function;\n  onVideoWatchLaterClick: Function;\n}\n\nexport default function VideoGrid(props: VideoGridProps) {\n  const { selectedChannelIndex, videos, loading = false, maxPerChannel = 9, maxSkeletons = 9, onVideoClick, onVideoWatchLaterClick } = props;\n  const [preventLongPress, setPreventLongPress] = React.useState(false);\n  const style = {\n    grid: {\n      minWidth: '428px'\n    }\n  };\n\n  const handleMouseEvent = (event: any) => {\n    debug(event.type, { preventLongPress: preventLongPress });\n    if (event.type === 'mousedown') {\n      setPreventLongPress(false); // always reset preventLongPress state on mousedown\n      setTimeout(() => {\n        // delay of 200 ms used here to wait for the click event\n        // if it fires immediately after the mousedown event then preventLongPress value will be false, otherwise it's probably a long press click\n        setPreventLongPress(true);\n      }, 200);\n    } else {\n      if (!preventLongPress) {\n        return true;\n      }\n      setPreventLongPress(false);\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    return false;\n  };\n\n  return (\n    <Grid container style={style.grid} onMouseDown={(event: any) => handleMouseEvent(event)} onClickCapture={(event: any) => handleMouseEvent(event)}>\n      {(loading ? Array.from(new Array(Math.min(maxPerChannel, maxSkeletons))) : videos.slice(0, maxPerChannel)).map((item, index) => (\n        <Box key={index} width={210} marginRight={0.5} marginBottom={3} draggable=\"false\">\n          {item ? (\n            <Media\n              item={item}\n              selectedChannelIndex={selectedChannelIndex}\n              onClick={onVideoClick}\n              onWatchLaterClick={onVideoWatchLaterClick}\n            ></Media>\n          ) : (\n            <React.Fragment>\n              <Skeleton variant=\"rect\" width={210} height={118} />\n              <Box pt={0.5}>\n                <Skeleton />\n                <Skeleton width=\"60%\" />\n              </Box>\n            </React.Fragment>\n          )}\n        </Box>\n      ))}\n    </Grid>\n  );\n}\n","import { ChannelSelection } from \"./Channel\";\n\nexport interface Settings {\n  defaultChannelSelection: ChannelSelection,\n  videosPerChannel: number,\n  videosAnteriority: number,\n  sortVideosBy: string,\n  apiKey?: string,\n  autoVideosCheckRate: number,\n  enableRecentVideosNotifications: boolean,\n  autoPlayVideos: boolean,\n  openVideosInInactiveTabs: boolean,\n  openChannelsOnNameClick: boolean,\n  hideEmptyChannels: boolean,\n  autoClearRecentVideos: boolean,\n  autoClearCache: boolean,\n}\n\nexport enum SettingsType {\n  String,\n  Number,\n  Boolean\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport Link from '@material-ui/core/Link';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Video } from '../../models/Video';\nimport { Channel } from '../../models/Channel';\nimport { Settings } from '../../models/Settings';\nimport VideoGrid from './VideoGrid';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  breadcrumb: {\n    marginBottom: theme.spacing(2.5),\n  },\n  divider: {\n    marginBottom: theme.spacing(2.5),\n  },\n  link: {\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    outline: 'none',\n    '&:hover': {\n      backgroundColor: 'transparent'\n    },\n  },\n  title: {\n    marginLeft: theme.spacing(1),\n  },\n  youtube: {\n    '&:hover': {\n      color: '#f44336',\n    },\n  },\n  box: {\n    '&:last-child': {\n      '& hr.divider': {\n        display: 'none'\n      }\n    }\n  }\n}));\n\ninterface MultiVideoGridProps {\n  loading?: boolean;\n  channels: Channel[];\n  selectedChannelIndex: number;\n  videos: Video[];\n  settings: Settings;\n  maxPerChannel?: number;\n  onSelect: Function;\n  onVideoClick: Function;\n  onVideoWatchLaterClick: Function;\n  onSave: Function;\n  onRefresh: Function;\n}\n\nexport default function MultiVideoGrid(props: MultiVideoGridProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { channels, selectedChannelIndex, videos, settings, loading = false, maxPerChannel = 9, onSelect, onVideoClick, onVideoWatchLaterClick, onSave, onRefresh } = props;\n  const [expandedChannelsIndexes, setExpandedChannelsIndexes] = React.useState<number[]>([]);\n\n  const hideChannel = (channel: Channel) => {\n    channels.forEach((c: Channel) => {\n      if (c.id === channel.id) {\n        c.isHidden = true;\n        onSave([...channels]);\n        onRefresh();\n        return;\n      }\n    });\n  };\n\n  const onChannelNameClick = (event: any, channel: Channel, index: number) => {\n    if (!settings?.openChannelsOnNameClick) {\n      event.preventDefault();\n      onSelect(channel, index);\n    }\n  };\n\n  return (\n    <Box overflow=\"hidden\" className={classes.box}>\n      {channels.map((channel: Channel, index: number) => {\n        if (channel.isHidden) {\n          // eslint-disable-next-line\n          return;\n        }\n        const channelVideos: Video[] = videos.filter((video: Video) => video.channelId === channel.id);\n        // hide empty channels\n        if (!loading && settings.hideEmptyChannels && channelVideos.length === 0) {\n          // eslint-disable-next-line\n          return;\n        }\n        return (\n          <Box key={index}>\n            <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumb}>\n              <Link color=\"inherit\" className={classes.link} href={channel.url} target=\"_blank\" rel=\"noopener\" onClick={(event: any) => onChannelNameClick(event, channel, index)}>\n                <Avatar alt={channel.title} src={channel.thumbnail} />\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" className={classes.title}>\n                  {channel.title}\n                </Typography>\n              </Link>\n              {!settings?.openChannelsOnNameClick && \n                <Link color=\"inherit\" className={`${classes.link} ${classes.youtube}`} href={channel.url} target=\"_blank\" rel=\"noopener\">\n                  <Tooltip title=\"Open channel\" aria-label=\"open-channel\">\n                    <YouTubeIcon />\n                  </Tooltip>\n                </Link>\n              }\n              <IconButton size=\"small\" className={classes.link} onClick={() => hideChannel(channel)}>\n                <Tooltip title=\"Hide channel\" aria-label=\"hide-channel\">\n                  <VisibilityOffIcon />\n                </Tooltip>\n              </IconButton>\n            </Breadcrumbs>\n            <VideoGrid\n              selectedChannelIndex={selectedChannelIndex}\n              videos={expandedChannelsIndexes.indexOf(index) > -1 ? channelVideos : channelVideos.slice(0, 3)}\n              loading={loading}\n              maxPerChannel={maxPerChannel}\n              maxSkeletons={3}\n              onVideoClick={onVideoClick}\n              onVideoWatchLaterClick={onVideoWatchLaterClick}\n            />\n            {channelVideos.length > 3 && expandedChannelsIndexes.indexOf(index) === -1 &&\n              <Tooltip title=\"Show more\" aria-label=\"show-more\">\n                <IconButton edge=\"end\" aria-label=\"show-more\" size=\"small\" style={{ marginBottom: theme.spacing(2.5) }} onClick={() => setExpandedChannelsIndexes([...expandedChannelsIndexes, index])}>\n                  <MoreHorizIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            }\n            <Divider className={`divider ${classes.divider}`} />\n          </Box>\n      )}\n    )}\n    </Box>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { RawHTML } from './RawHTML';\n\ninterface ConfirmationDialogProps {\n  open: boolean;\n  title: string;\n  description: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n}\n\nexport function ConfirmationDialog(props: ConfirmationDialogProps) {\n  const { open, title, description, confirmButtonText = 'Confirm', cancelButtonText = 'Cancel', onClose, onConfirm } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => onClose()}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n    <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <RawHTML>{description}</RawHTML>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose()} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={() => onConfirm()} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { RawHTML } from './RawHTML';\n\ninterface ImportDialogDialogProps {\n  open: boolean;\n  title: string;\n  description: string;\n  textFieldId: string;\n  textFieldLabel: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n  onValidate: Function;\n}\n\nexport function ImportDialog(props: ImportDialogDialogProps) {\n  const { open, title, description, textFieldId, textFieldLabel, confirmButtonText = 'Import', cancelButtonText = 'Cancel', onClose, onConfirm, onValidate } = props;\n  const [textFieldError, setTextFieldError] = React.useState(false);\n\n  const confirm = () => {\n    try {\n      const json = (document.getElementById(textFieldId) as any).value;\n      const data = JSON.parse(json);\n      const isValid = onValidate(data);\n      setTextFieldError(!isValid); // == false when isValid is true & vise versa\n      if (isValid) {\n        onConfirm(data);\n      }\n    } catch(error) {\n      setTextFieldError(true);\n    }\n  };\n\n  const close = () => {\n    setTextFieldError(false);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={close}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n    <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <RawHTML>{description}</RawHTML>\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id={textFieldId}\n          label={textFieldLabel}\n          error={textFieldError}\n          multiline\n          rows=\"10\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={close} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={confirm} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { isNumber } from '../../helpers/parser';\n\ninterface MoveToPositionDialogProps {\n  open: boolean;\n  title: string;\n  min?: number;\n  max?: number;\n  step?: number;\n  positionFieldId: string;\n  positionFieldLabel: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n}\n\nexport function MoveToPositionDialog(props: MoveToPositionDialogProps) {\n  const { open, title, min = 0, max = 100, step = 1, positionFieldId, positionFieldLabel, confirmButtonText = 'Move', cancelButtonText = 'Cancel', onClose, onConfirm } = props;\n  const [positionFieldError, setPositionFieldError] = React.useState(false);\n\n  const confirm = () => {\n    const position = (document.getElementById(positionFieldId) as any).value;\n    const isValid = isNumber(position);\n    setPositionFieldError(!isValid); // == false when isValid is true & vise versa\n    if (isValid) {\n      onConfirm(+position);\n    }\n  };\n\n  const close = () => {\n    setPositionFieldError(false);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={close}\n      aria-labelledby=\"alert-dialog-title\"\n    >\n    <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          id={positionFieldId}\n          label={positionFieldLabel}\n          error={positionFieldError}\n          inputProps={{ min: min, max: max, step: step }}\n          defaultValue={min}\n          type=\"number\"\n          size=\"small\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={close} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={confirm} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","\nexport function isNumber(value: string) {\n  return !isNaN(+value) && /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/.test(value);\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport RootRef from '@material-ui/core/RootRef';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Channel, ChannelSelection } from '../../models/Channel';\nimport { ConfirmationDialog } from '../shared/ConfirmationDialog';\nimport { ImportDialog } from '../shared/ImportDialog';\nimport { MoveToPositionDialog } from '../shared/MoveToPositionDialog';\nimport { download } from '../../helpers/download';\nimport { isWebExtension, createTab, isFirefox } from '../../helpers/browser';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport ControlCameraIcon from '@material-ui/icons/ControlCamera';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TodayIcon from '@material-ui/icons/Today';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOff';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    channelsOptionsIcon: {\n      top: '50%',\n      right: '16px',\n      position: 'absolute',\n      transform: 'translateY(-50%)',\n    },\n    menuIcon: {\n      fontSize: 20,\n      marginRight: theme.spacing(1),\n      verticalAlign: 'middle',\n    },\n    subheader: {\n      position: 'relative',\n    }\n  }),\n);\n\nconst getListStyle = (isDraggingOver: boolean) => ({\n  //background: isDraggingOver ? 'lightblue' : 'lightgrey',\n});\n\nconst getListItemStyle = (isDragging: boolean, isHidden: boolean, draggableStyle: any) => ({\n  // styles we need to apply on draggables\n  ...draggableStyle,\n  ...(isDragging && {\n    background: \"rgb(235,235,235)\"\n  }),\n  ...(isHidden && {\n    opacity: 0.5,\n    textDecoration: \"line-through\"\n  })\n});\n\n// a little function to help us with reordering the dnd result\nconst reorder = (list: any, startIndex: number, endIndex: number) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\ninterface ChannelListProps {\n  channels: Channel[];\n  selectedIndex: number;\n  cacheSize: string;\n  todaysVideosCount: number;\n  recentVideosCount: number;\n  watchLaterVideosCount: number;\n  onShowAll: Function;\n  onShowTodaysVideos: Function;\n  onShowRecentVideos: Function;\n  onShowWatchLaterVideos: Function;\n  onRefresh: Function;\n  onSelect: Function;\n  onDelete: Function;\n  onSave: Function;\n  onSelectedIndexChange: Function;\n  onClearCache: Function;\n  onClearRecentVideos: Function;\n  onAddVideosToWatchLater: Function;\n  onClearWatchLaterVideos: Function;\n  onImport: Function;\n}\n\nexport function ChannelList(props: ChannelListProps) {\n  const { channels, selectedIndex = ChannelSelection.All, cacheSize,\n          todaysVideosCount, recentVideosCount, watchLaterVideosCount,\n          onShowAll, onShowTodaysVideos, onShowRecentVideos, onShowWatchLaterVideos,\n          onRefresh, onSelect, onDelete, onSave, onSelectedIndexChange, onClearCache,\n          onClearRecentVideos, onAddVideosToWatchLater, onClearWatchLaterVideos, onImport } = props;\n  const classes = useStyles();\n  const [openDeleteChannelDialog, setOpenDeleteChannelDialog] = React.useState(false);\n  const [channelToDelete, setChannelToDelete] = React.useState<Channel>();\n  const [channelToDeleteIndex, setChannelToDeleteIndex] = React.useState(0);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openedMenuIndex, setOpenedMenuIndex] = React.useState<number|string>(-1);\n  const [openClearCacheDialog, setOpenClearCacheDialog] = React.useState(false);\n  const [openClearRecentVideosDialog, setOpenClearRecentVideosDialog] = React.useState(false);\n  const [openClearWatchLaterVideosDialog, setOpenClearWatchLaterVideosDialog] = React.useState(false);\n  const [openImportChannelsDialog, setOpenImportChannelsDialog] = React.useState(false);\n  const [moveToPositionChannelIndex, setMoveToPositionChannelIndex] = React.useState<number>(-1);\n\n  const onDragEnd = (result: any) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    moveChannel(result.source.index, result.destination.index);\n  };\n\n  const getSelectedChannel = (): Channel | undefined => channels.find((_, i) => i === selectedIndex);\n\n  const moveChannel = (indexFrom: number, indexTo: number) => {\n    closeMenu();\n    const selectedChannel = getSelectedChannel();\n    const items: Channel[] = reorder(\n      channels,\n      indexFrom,\n      indexTo\n    ) as Channel[];\n    //console.log(items);\n    onSave(items);\n    if (selectedChannel) {\n      onSelectedIndexChange(items.indexOf(selectedChannel));\n    }\n  };\n\n  const deleteChannel = (channel: Channel, index: number) => {\n    closeMenu();\n    setChannelToDelete(channel);\n    setChannelToDeleteIndex(index);\n    setOpenDeleteChannelDialog(true);\n  };\n\n  const confirmDeleteChannel = () => {\n    const selectedChannel = getSelectedChannel();\n    onDelete(channelToDeleteIndex);\n    if (selectedChannel && selectedIndex !== channelToDeleteIndex) {\n      onSelectedIndexChange(channels.filter((_, i) => i !== channelToDeleteIndex).indexOf(selectedChannel));\n    }\n    closeDeleteChannelDialog();\n  };\n\n  const closeDeleteChannelDialog = () => {\n    setOpenDeleteChannelDialog(false);\n  };\n\n  const openChannel = (channel: Channel) => {\n    closeMenu();\n    if (isWebExtension()) {\n      createTab(channel.url);\n    } else {\n      window.open(channel.url, '_blank');\n    }\n  };\n\n  const refreshChannel = (channel: Channel, index: number) => {\n    closeMenu();\n    onSelect(channel, index, true);\n  };\n\n  const setChannel = (channel: Channel, index: number) => {\n    closeMenu();\n    channels[index] = channel;\n    onSave([...channels]);\n    if (selectedIndex < 0 && selectedIndex !== ChannelSelection.None) {\n      onRefresh(selectedIndex);\n    }\n  };\n\n  const hideChannel = (channel: Channel, index: number) => {\n    channel.isHidden = true;\n    setChannel(channel, index);\n  };\n\n  const unhideChannel = (channel: Channel, index: number) => {\n    channel.isHidden = false;\n    setChannel(channel, index);\n  };\n\n  const disableChannelNotifications = (channel: Channel, index: number) => {\n    channel.notificationsDisabled = true;\n    setChannel(channel, index);\n  };\n\n  const enableChannelNotifications = (channel: Channel, index: number) => {\n    channel.notificationsDisabled = false;\n    setChannel(channel, index);\n  };\n\n  const openMenu = (event: any, index: number|string) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setOpenedMenuIndex(index);\n  };\n\n  const closeMenu = () => {\n    setAnchorEl(null);\n    setOpenedMenuIndex(-1);\n  };\n\n  const confirmClearCache = () => {\n    onClearCache();\n    closeClearCacheDialog();\n  };\n\n  const closeClearCacheDialog = () => {\n    setOpenClearCacheDialog(false);\n  };\n\n  const exportChannels = () => {\n    closeMenu();\n    const data = JSON.stringify(channels, null, 4);\n    const file = new Blob([data], {type: 'text/json'});\n    download(file, 'channels.json');\n  };\n\n  const importChannels = () => {\n    closeMenu();\n    setOpenImportChannelsDialog(true);\n  };\n\n  const closeImportChannelsDialog = () => {\n    setOpenImportChannelsDialog(false);\n  };\n\n  const confirmImportChannels = (channelsList: Channel[]) => {\n    onImport(channelsList);\n    closeImportChannelsDialog();\n  };\n\n  const openMoveChannelToPositionDialog = (channelIndex: number) => {\n    closeMenu();\n    setMoveToPositionChannelIndex(channelIndex);\n  };\n\n  const closeMoveChannelToPositionDialog = () => {\n    setMoveToPositionChannelIndex(-1);\n  };\n\n  const moveChannelToPosition = (position: number) => {\n    const indexTo = position - 1;\n    if (indexTo !== moveToPositionChannelIndex) {\n      moveChannel(moveToPositionChannelIndex, indexTo);\n    }\n    closeMoveChannelToPositionDialog();\n  };\n\n  const validateChannels = (channelsList: Channel[]): boolean => {\n    let isValid = true;\n    channelsList.forEach((channel: Channel) => {\n      if (!channel.id || !channel.title || !channel.thumbnail || !channel.description || !channel.url) {\n        //return false; // not working in foreach loop @see https://medium.com/front-end-weekly/3-things-you-didnt-know-about-the-foreach-loop-in-js-ff02cec465b1\n        isValid = false;\n      }\n    });\n    return isValid;\n  };\n\n  const clearCache = () => {\n    closeMenu();\n    setOpenClearCacheDialog(true);\n  };\n\n  const refreshRecentVideos = (event: any) => {\n    closeMenu();\n    onRefresh(ChannelSelection.RecentVideos, event);\n  };\n\n  const clearRecentVideos = () => {\n    closeMenu();\n    setOpenClearRecentVideosDialog(true);\n  };\n\n  const confirmClearRecentVideos = () => {\n    onClearRecentVideos();\n    closeClearRecentVideosDialog();\n  };\n\n  const closeClearRecentVideosDialog = () => {\n    setOpenClearRecentVideosDialog(false);\n  };\n\n  const addRecentVideosToWatchLater = () => {\n    closeMenu();\n    onAddVideosToWatchLater();\n  };\n\n  const refreshAll = (event?: any) => {\n    onRefresh(ChannelSelection.All, event);\n  };\n\n  const refreshTodaysVideos = (event: any) => {\n    //closeMenu(); // no need to\n    onRefresh(ChannelSelection.TodaysVideos, event);\n  };\n\n  const clearWatchLaterVideos = () => {\n    setOpenClearWatchLaterVideosDialog(true);\n  };\n\n  const confirmClearWatchLaterVideos = () => {\n    onClearWatchLaterVideos();\n    closeClearWatchLaterVideosDialog();\n  };\n\n  const closeClearWatchLaterVideosDialog = () => {\n    setOpenClearWatchLaterVideosDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n        {(provided: any, snapshot: any) => (\n          <RootRef rootRef={provided.innerRef}>\n            <List\n              dense\n              subheader={<ListSubheader className={classes.subheader}>Channels\n                <IconButton edge=\"end\" aria-label=\"channels-options\" size=\"small\" className={classes.channelsOptionsIcon} onClick={(event) => openMenu(event, 'channels-options')}>\n                  <MoreVertIcon fontSize=\"small\" />\n                </IconButton>\n                <Menu\n                  id=\"menu-channels-options\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={openedMenuIndex === 'channels-options'}\n                  onClose={closeMenu}\n                >\n                  <MenuItem onClick={() => exportChannels()}><GetAppIcon className={classes.menuIcon} />Export</MenuItem>\n                  <MenuItem onClick={() => importChannels()}><ImportExportIcon className={classes.menuIcon} />Import</MenuItem>\n                  <Tooltip title={\"Cache size: \" + cacheSize} aria-label=\"clear-cache\">\n                    <MenuItem onClick={() => clearCache()}><DeleteSweepIcon className={classes.menuIcon} />Clear cache</MenuItem>\n                  </Tooltip>\n                </Menu>\n              </ListSubheader>}\n              style={getListStyle(snapshot.isDraggingOver)}\n            >\n              <ListItem button key=\"all\" selected={selectedIndex === ChannelSelection.All} onClick={() => onShowAll()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={channels.length}>\n                    <Avatar>\n                      <SubscriptionsIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"All\" />\n                {channels?.length > 0 && <ListItemSecondaryAction>\n                  <Tooltip title=\"Refresh\" aria-label=\"refresh\">\n                    <IconButton edge=\"end\" aria-label=\"refresh\" size=\"small\" onClick={(event) => refreshAll(event)}>\n                      <RefreshIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </ListItemSecondaryAction>}\n              </ListItem>\n              <ListItem button key=\"today\" selected={selectedIndex === ChannelSelection.TodaysVideos} onClick={() => onShowTodaysVideos()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={todaysVideosCount}>\n                    <Avatar>\n                      <TodayIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"Today's videos\" />\n                {channels?.length > 0 && <ListItemSecondaryAction>\n                  <Tooltip title=\"Refresh\" aria-label=\"refresh\">\n                    <IconButton edge=\"end\" aria-label=\"refresh\" size=\"small\" onClick={(event) => refreshTodaysVideos(event)}>\n                      <RefreshIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </ListItemSecondaryAction>}\n              </ListItem>\n              <ListItem button key=\"recent\" selected={selectedIndex === ChannelSelection.RecentVideos} onClick={() => onShowRecentVideos()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={recentVideosCount}>\n                    <Avatar>\n                      <NotificationsNoneIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"Recent videos\" />\n                {channels?.length > 0 && <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" aria-label=\"more\" size=\"small\" onClick={(event) => openMenu(event, ChannelSelection.RecentVideos)}>\n                    <MoreVertIcon fontSize=\"small\" />\n                  </IconButton>\n                  <Menu\n                    id=\"menu-recent-videos\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={openedMenuIndex === ChannelSelection.RecentVideos}\n                    onClose={closeMenu}\n                  >\n                    <MenuItem onClick={(event) => refreshRecentVideos(event)}><RefreshIcon className={classes.menuIcon} /> Refresh</MenuItem>\n                    {recentVideosCount > 0 && selectedIndex === ChannelSelection.RecentVideos && <MenuItem onClick={() => addRecentVideosToWatchLater()}><AccessTimeIcon className={classes.menuIcon} /> Add all to watch later list</MenuItem>}\n                    {recentVideosCount > 0 && <MenuItem onClick={() => clearRecentVideos()}><DeleteIcon className={classes.menuIcon} /> Clear</MenuItem>}\n                  </Menu>\n                </ListItemSecondaryAction>}\n              </ListItem>\n              <ListItem button key=\"watchLater\" selected={selectedIndex === ChannelSelection.WatchLaterVideos} onClick={() => onShowWatchLaterVideos()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={watchLaterVideosCount}>\n                    <Avatar>\n                      <AccessTimeIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"Watch later\" />\n                {watchLaterVideosCount > 0 && <ListItemSecondaryAction>\n                  <Tooltip title=\"Clear\" aria-label=\"clear\">\n                    <IconButton edge=\"end\" aria-label=\"clear\" size=\"small\" onClick={() => clearWatchLaterVideos()}>\n                      <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </ListItemSecondaryAction>}\n              </ListItem>\n              {channels.map((channel: Channel, index: number) => (\n                <Draggable key={channel.id} draggableId={channel.id} index={index}>\n                {(provided: any, snapshot: any) => (\n                  <ListItem\n                    ContainerProps={{ ref: provided.innerRef }}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getListItemStyle(\n                      snapshot.isDragging,\n                      channel.isHidden,\n                      provided.draggableProps.style\n                    )}\n                    button\n                    selected={index === selectedIndex}\n                    onClick={() => onSelect(channel, index)}\n                  >\n                    <ListItemIcon><Avatar alt={channel.title} src={channel.thumbnail} /></ListItemIcon>\n                    <ListItemText primary={channel.title} />\n                    <ListItemSecondaryAction>\n                      <IconButton edge=\"end\" aria-label=\"more\" size=\"small\" onClick={(event) => openMenu(event, index)}>\n                        <MoreVertIcon fontSize=\"small\" />\n                      </IconButton>\n                      <Menu\n                        id={\"menu-\" + index}\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={openedMenuIndex === index}\n                        onClose={closeMenu}\n                      >\n                        <MenuItem onClick={() => openChannel(channel)}><OpenInNewIcon className={classes.menuIcon} /> Open channel</MenuItem>\n                        <MenuItem onClick={() => refreshChannel(channel, index)}><RefreshIcon className={classes.menuIcon} /> Refresh</MenuItem>\n                        {isWebExtension() && isFirefox() && index > 0 && <MenuItem onClick={() => moveChannel(index, index - 1)}><KeyboardArrowUpIcon className={classes.menuIcon} />Move up</MenuItem>}\n                        {isWebExtension() && isFirefox() && index < channels.length - 1 && <MenuItem onClick={() => moveChannel(index, index + 1)}><KeyboardArrowDownIcon className={classes.menuIcon} />Move down</MenuItem>}\n                        {isWebExtension() && isFirefox() && <MenuItem onClick={() => openMoveChannelToPositionDialog(index)}><ControlCameraIcon className={classes.menuIcon} />Move to position</MenuItem>}\n                        {channel.isHidden ? \n                          <MenuItem onClick={() => unhideChannel(channel, index)}><VisibilityIcon className={classes.menuIcon} /> Unhide</MenuItem> : \n                          <MenuItem onClick={() => hideChannel(channel, index)}><VisibilityOffIcon className={classes.menuIcon} /> Hide</MenuItem>\n                        }\n                        {isWebExtension() && (channel.notificationsDisabled ? \n                          <MenuItem onClick={() => enableChannelNotifications(channel, index)}><NotificationsActiveIcon className={classes.menuIcon} /> Enable notifications</MenuItem> : \n                          <MenuItem onClick={() => disableChannelNotifications(channel, index)}><NotificationsOffIcon className={classes.menuIcon} /> Disable notifications</MenuItem>\n                        )}\n                        <MenuItem onClick={() => deleteChannel(channel, index)}><DeleteIcon className={classes.menuIcon} /> Delete</MenuItem>\n                      </Menu>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          </RootRef>\n        )}\n        </Droppable>\n      </DragDropContext>\n      <ConfirmationDialog\n        open={openClearCacheDialog}\n        title=\"Clear cache\"\n        description=\"This action is irreversible, would you like to continue?\"\n        confirmButtonText=\"Clear\"\n        onClose={closeClearCacheDialog}\n        onConfirm={confirmClearCache}\n      />\n      <ConfirmationDialog\n        open={openClearRecentVideosDialog}\n        title=\"Clear recent videos\"\n        description=\"Would you like to reset/clear recent videos?\"\n        confirmButtonText=\"Clear\"\n        onClose={closeClearRecentVideosDialog}\n        onConfirm={confirmClearRecentVideos}\n      />\n      <ConfirmationDialog\n        open={openClearWatchLaterVideosDialog}\n        title=\"Clear watch later videos\"\n        description=\"Would you like to reset/clear watch later videos?\"\n        confirmButtonText=\"Clear\"\n        onClose={closeClearWatchLaterVideosDialog}\n        onConfirm={confirmClearWatchLaterVideos}\n      />\n      <ConfirmationDialog\n        open={openDeleteChannelDialog}\n        title=\"Delete Channel\"\n        description={\"Would you like to delete <strong>\" + channelToDelete?.title + \"</strong> channel?\"}\n        confirmButtonText=\"Delete\"\n        onClose={closeDeleteChannelDialog}\n        onConfirm={confirmDeleteChannel}\n      />\n      <ImportDialog\n        open={openImportChannelsDialog}\n        title=\"Import Channels\"\n        description=\"Copy & paste below the content of <strong>channels.json</strong> file. Notice that your current channels list will be overrided!\"\n        textFieldId=\"channels-to-import\"\n        textFieldLabel=\"Channels (json)\"\n        onClose={closeImportChannelsDialog}\n        onConfirm={confirmImportChannels}\n        onValidate={validateChannels}\n      />\n      <MoveToPositionDialog\n        open={moveToPositionChannelIndex > -1}\n        title=\"Move Channel To Position\"\n        min={1}\n        max={channels.length}\n        positionFieldId=\"channel-position\"\n        positionFieldLabel=\"Position\"\n        onClose={closeMoveChannelToPositionDialog}\n        onConfirm={moveChannelToPosition}\n      />\n    </React.Fragment>\n  )\n}\n","/**\n * Stolen from https://stackoverflow.com/a/44737041\n */\nexport function download(blob: Blob, filename: string) {\n  if (window.navigator.msSaveOrOpenBlob) { // IE10+\n    window.navigator.msSaveOrOpenBlob(blob, filename);\n  } else { // Others\n    let a = document.createElement('a'),\n        url = URL.createObjectURL(blob);\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);  \n    }, 0);\n  }\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport { RawHTML } from './RawHTML';\n\ninterface MessageSnackbarProps {\n  message: string|undefined;\n  open: boolean;\n  onClose: Function;\n  autoHideDuration?: number;\n  anchorOrigin?: any;\n}\n\nexport function MessageSnackbar(props: MessageSnackbarProps) {\n  const { message, open, onClose, autoHideDuration = 6000, anchorOrigin = { vertical: 'top', horizontal: 'center' } } = props;\n\n  return (\n    <Snackbar\n      anchorOrigin={anchorOrigin}\n      open={open}\n      autoHideDuration={autoHideDuration}\n      onClose={() => onClose()}\n      message={message && <RawHTML>{message}</RawHTML>}\n      action={\n        <Button color=\"secondary\" size=\"small\" onClick={() => onClose()}>\n          Close\n        </Button>\n      }\n    />\n  )\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport Slide from '@material-ui/core/Slide';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport Link from '@material-ui/core/Link';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport { Settings } from '../../models/Settings';\nimport { ChannelSelection } from '../../models/Channel';\nimport { isWebExtension } from '../../helpers/browser';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    settingsAppBar: {\n      position: 'relative',\n      backgroundColor: '#f44336',\n    },\n    settingsTitle: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    container: {\n      width: '223px',\n      height: '40px',\n    },\n    select: {\n      padding: '10px 26px 10px 12px',\n      '&:-moz-focusring': { // removes the ugly dotted outline around the selected option in Firefox\n        color: 'transparent',\n        textShadow: '0 0 0 #000',\n      },\n    },\n    optionLabel: {\n      maxWidth: '70%',\n    },\n  }),\n);\n\nconst settingsDialogTransition = React.forwardRef<unknown, TransitionProps>(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface SettingsDialogProps {\n  settings: Settings;\n  open: boolean;\n  onClose: Function;\n  onSave: Function;\n}\n\nexport function SettingsDialog(props: SettingsDialogProps) {\n  const { settings, open, onClose, onSave } = props;\n  const classes = useStyles();\n\n  const validateSettings = (event: any) => {\n    let input = event.target;\n    //console.log(input.type, input.min, input.max, input.value);\n    if (input.type === \"number\") {\n      if (!input.value.match(/^\\d+$/) || +input.value < +input.min) {\n        input.value = input.min;\n      } else if (+input.value > +input.max) {\n        input.value = input.max;\n      }\n    }\n  };\n\n  return (\n    <Dialog fullScreen open={open} onClose={() => onClose()} TransitionComponent={settingsDialogTransition}>\n      <AppBar color=\"secondary\" className={classes.settingsAppBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => onClose()} aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.settingsTitle}>\n            Settings\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => onSave()}>\n            save\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <List>\n        <ListItem>\n          <ListItemText primary=\"Default channel selection\" secondary=\"The channel menu that would be selected by default\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Select\n              native\n              inputProps={{ id: 'defaultChannelSelection', className: classes.select }}\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.container}\n              defaultValue={settings?.defaultChannelSelection}\n            >\n              <option value={ChannelSelection.All}>All</option>\n              <option value={ChannelSelection.TodaysVideos}>Today's videos</option>\n              <option value={ChannelSelection.RecentVideos}>Recent videos</option>\n              <option value={ChannelSelection.WatchLaterVideos}>Watch later</option>\n            </Select>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Max videos per channel\" secondary=\"The maximum number of videos to show per channel\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"videosPerChannel\"\n              type=\"number\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ min: 3, max: 50, step: 3 }}\n              className={classes.container}\n              defaultValue={settings?.videosPerChannel}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Anteriority of videos (in days)\" secondary=\"Number of days to subtract from the current date\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"videosAnteriority\"\n              type=\"number\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ min: 1, max: 365, step: 7 }}\n              className={classes.container}\n              defaultValue={settings?.videosAnteriority}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Sort videos by\" secondary=\"Videos sorting criteria (requires clearing cache)\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Select\n              native\n              inputProps={{ id: 'sortVideosBy', className: classes.select }}\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.container}\n              defaultValue={settings?.sortVideosBy}\n            >\n              <option value=\"date\">Date</option>\n              <option value=\"views\">Views</option>\n            </Select>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary={\n            <Typography variant=\"body1\" component=\"span\">Custom API key (<Link href=\"https://www.slickremix.com/docs/get-api-key-for-youtube/\" target=\"_blank\" rel=\"noopener\">How to get an API key?</Link>)</Typography>\n          } secondary={\n            <React.Fragment>\n              <Typography variant=\"body2\" component=\"span\">Replaces the default youtube API key used to fetch channels & videos data</Typography>\n              <br/>\n              <Typography variant=\"body2\" component=\"span\">(will apply the next time you {isWebExtension() ? 'open the extension popup' : 'reload the app'})</Typography>\n            </React.Fragment>\n          } className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"apiKey\"\n              type=\"text\"\n              placeholder=\"AIzaSyDOkg-u9jnhP-WnzX5WPJyV1sc5QQrtuyc\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ minLength: 39 }}\n              className={classes.container}\n              defaultValue={settings?.apiKey}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        {isWebExtension() &&\n          <React.Fragment>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Auto videos check rate (in minutes)\" secondary=\"Number of minutes to wait before auto-checking for recent videos\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <TextField\n                  id=\"autoVideosCheckRate\"\n                  type=\"number\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  inputProps={{ min: 5, max: 720, step: 5 }}\n                  className={classes.container}\n                  defaultValue={settings?.autoVideosCheckRate}\n                  onChange={(event) => validateSettings(event)}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Enable recent videos notifications\" secondary=\"Notifies you when recent videos get posted\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"enableRecentVideosNotifications\"\n                  defaultChecked={settings?.enableRecentVideosNotifications}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Auto play videos once opened\" secondary=\"Auto-play permission should be granted for youtube.com\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"autoPlayVideos\"\n                  defaultChecked={settings?.autoPlayVideos}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Open videos in inactive tabs\" secondary=\"Will open videos in new tabs without losing focus of the current tab\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"openVideosInInactiveTabs\"\n                  defaultChecked={settings?.openVideosInInactiveTabs}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </React.Fragment>\n        }\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Open channels on name click\" secondary='Will open channels directly by clicking on their name, replaces the icon button \"open channel\"' className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"openChannelsOnNameClick\"\n              defaultChecked={settings?.openChannelsOnNameClick}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Hide empty channels\" secondary=\"Hide all empty channels by default\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"hideEmptyChannels\"\n              defaultChecked={settings?.hideEmptyChannels}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Auto clear recent videos\" secondary=\"Auto-clear recent videos before each startup\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"autoClearRecentVideos\"\n              defaultChecked={settings?.autoClearRecentVideos}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Auto clear videos cache\" secondary=\"Cache may speed up loading time & reduce API quota consumption\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"autoClearCache\"\n              defaultChecked={settings?.autoClearCache}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\ninterface CustomSnackbarProps {\n  open: boolean;\n  message: string;\n  onClose: Function;\n  onRefresh: Function;\n  autoHideDuration?: number;\n  showRefreshButton?: boolean\n}\n\nexport function CustomSnackbar(props: CustomSnackbarProps) {\n  const { open, message, onClose, onRefresh, autoHideDuration = 6000, showRefreshButton = true } = props;\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={open}\n      autoHideDuration={autoHideDuration}\n      onClose={() => onClose()}\n      message={message}\n      action={\n        <React.Fragment>\n          {showRefreshButton && <Button color=\"secondary\" size=\"small\" onClick={(event) => onRefresh(null, event)}>\n            Refresh\n          </Button>}\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => onClose()}>\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        </React.Fragment>\n      }\n    />\n  )\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Fade from '@material-ui/core/Fade';\nimport SearchChannelInput from './channel/SearchChannelInput';\nimport { Channel, ChannelSelection } from '../models/Channel';\nimport { getChannelActivities, getVideoInfo } from '../helpers/youtube';\nimport { Video } from '../models/Video';\nimport { getDateBefore, memorySizeOf, isInToday, diffHours } from '../helpers/utils';\nimport MultiVideoGrid from './video/MultiVideoGrid';\nimport VideoGrid from './video/VideoGrid';\nimport { Settings, SettingsType } from '../models/Settings';\nimport { saveToStorage } from '../helpers/storage';\nimport { ChannelList } from './channel/ChannelList';\nimport { MessageSnackbar } from './shared/MessageSnackbar';\nimport { SettingsDialog } from './settings/SettingsDialog';\nimport { CustomSnackbar } from './shared/CustomSnackbar';\nimport { isWebExtension, isFirefox, createTab, executeScript } from '../helpers/browser';\nimport { debug, warn } from '../helpers/debug';\n// @ts-ignore\nimport ReactPullToRefresh from 'react-pull-to-refresh';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      minWidth: '700px',\n      minHeight: isWebExtension() ? '500px' : '100vh',\n      maxHeight: isWebExtension() ? '500px' : 'none',\n      maxWidth: isWebExtension() && isFirefox() ? '700px' : 'none',\n    },\n    appBar: {\n      backgroundColor: '#f44336',\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      //padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    container: {\n      display: 'flex',\n      width: '100%',\n      height: '80%',\n      justifyContent: 'center',\n      '&.expanded': {\n        height: '100%',\n      },\n    },\n    centered: {\n      alignSelf: 'center',\n      textAlign: 'center',\n    },\n    heartIcon: {\n      color: '#e25555',\n      fontSize: 16,\n      verticalAlign: 'middle',\n    },\n    madeWithLove: {\n      padding: theme.spacing(1, 0),\n    },\n  }),\n);\n\ninterface PopupProps {\n  channels: Channel[];\n  settings: Settings;\n  cache: any;\n  isReady: boolean;\n}\n\nexport default function Popup(props: PopupProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [channels, setChannels] = React.useState<Channel[]>(props.channels);\n  const [videos, setVideos] = React.useState<Video[]>([]);\n  const [openDrawer, setOpenDrawer] = React.useState(false);\n  const [isReady, setIsReady] = React.useState(props.isReady);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [selectedChannelIndex, setSelectedChannelIndex] = React.useState(ChannelSelection.All);\n  const [settings, setSettings] = React.useState<Settings>(props.settings);\n  const [openSettingsDialog, setOpenSettingsDialog] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState('');\n  const [snackbarAutoHideDuration, setSnackbarAutoHideDuration] = React.useState(5000);\n  const [showSnackbarRefreshButton, setShowSnackbarRefreshButton] = React.useState(true);\n  const [lastError, setLastError] = React.useState<Error|null>(null);\n  const [cache, setCache] = React.useState<any>({});\n  const [recentVideosCount, setRecentVideosCount] = React.useState(0);\n  const [todaysVideosCount, setTodaysVideosCount] = React.useState(0);\n  const [watchLaterVideosCount, setWatchLaterVideosCount] = React.useState(0);\n\n  React.useEffect(() => setChannels(props.channels), [props.channels]);\n  React.useEffect(() => setSettings(props.settings), [props.settings]);\n  React.useEffect(() => setCache(props.cache), [props.cache]);\n  React.useEffect(() => setIsReady(props.isReady), [props.isReady]);\n\n  React.useEffect(() => {\n    warn('isReady changed', isReady);\n    if (isReady) {\n      if (channels.length && !videos.length) {\n        showChannelSelection(settings.defaultChannelSelection, true);\n      } else if (selectedChannelIndex !== settings.defaultChannelSelection) {\n        setSelectedChannelIndex(settings.defaultChannelSelection);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isReady]);\n\n  React.useEffect(() => {\n    warn('channels changed', { isReady: isReady });\n    if (isReady) {\n      saveToStorage({ channels: channels });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channels]);\n\n  React.useEffect(() => {\n    warn('settings changed', { isReady: isReady });\n    if (isReady) {\n      saveToStorage({ settings: settings });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings]);\n\n  React.useEffect(() => {\n    warn('cache or channels changed', { isReady: isReady });\n    if (isReady) {\n      debug('----------------------');\n      debug('counting todays & recent videos');\n      let totalRecentVideosCount: number = 0,\n          totalTodaysVideosCount: number = 0,\n          totalWatchLaterVideosCount: number = 0;\n      Object.keys(cache).forEach((channelId: string) => {\n        const channel = channels.find((c: Channel) => c.id === channelId);\n        if (!channel || channel.isHidden) {\n          return;\n        }\n        const recentVideosCountPerChannel = (cache[channelId].filter((video: Video) => video.isRecent)).length;\n        const todaysVideosCountPerChannel = (cache[channelId].filter((video: Video) => isInToday(video.publishedAt))).length;\n        const watchLaterVideosCountPerChannel = (cache[channelId].filter((video: Video) => video.isToWatchLater)).length;\n        debug(channel.title, {\n          recent: recentVideosCountPerChannel,\n          todays: todaysVideosCountPerChannel,\n          watchLater: watchLaterVideosCountPerChannel,\n        });\n        totalRecentVideosCount += recentVideosCountPerChannel;\n        totalTodaysVideosCount += todaysVideosCountPerChannel;\n        totalWatchLaterVideosCount += watchLaterVideosCountPerChannel;\n      });\n      debug('total count', {\n        recent: totalRecentVideosCount,\n        todays: totalTodaysVideosCount,\n        watchLater: totalWatchLaterVideosCount,\n      });\n      setRecentVideosCount(totalRecentVideosCount);\n      setTodaysVideosCount(totalTodaysVideosCount);\n      setWatchLaterVideosCount(totalWatchLaterVideosCount);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cache, channels]);\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  const displayError = (error: Error) => {\n    console.error(error);\n    setLastError(error);\n  };\n\n  const getChannelVideos = (channel: Channel, ignoreCache: boolean = false): Promise<Video[]> => {\n    return new Promise((resolve, reject) => {\n      if (!ignoreCache && cache[channel.id]?.length) {\n        debug('----------------------');\n        debug('load videos from cache', channel.title, cache[channel.id]);\n        resolve(cache[channel.id].slice(0, settings.videosPerChannel));\n      } else {\n        getChannelActivities(channel.id, getDateBefore(settings.videosAnteriority)).then((results) => {\n          debug('----------------------');\n          debug('activities of', channel.title, results);\n          if (results?.items) {\n            // get recent videos ids\n            const videosIds: string[] = results.items.map((item: any) => item.contentDetails.upload?.videoId).filter((id: string) => id?.length);\n            const cacheVideosIds: string[] = cache[channel.id]?.length ? cache[channel.id].map((video: Video) => video.id) : [];\n            const recentVideosIds: string[] = videosIds.filter((videoId: string, index: number) => videosIds.indexOf(videoId) === index) // remove duplicates\n                                                       .slice(0, settings.videosPerChannel)\n                                                       .filter((videoId: string) => cacheVideosIds.indexOf(videoId) === -1); // remove videos already in cache\n            // get recent videos informations\n            if (!recentVideosIds.length) {\n              debug('no recent videos for this channel');\n              resolve(cache[channel.id]?.slice(0, settings.videosPerChannel) || []);\n            } else {\n              debug('getting recent videos of', channel.title, { recentVideosIds: recentVideosIds, cacheVideosIds: cacheVideosIds });\n              getVideoInfo(recentVideosIds).then((videosData: Video[]) => {\n                debug('recent videos data', videosData);\n                // mark new videos as recent\n                const now = new Date();\n                videosData = videosData.map((video: Video) => {\n                  const videoDate = new Date(video.publishedAt); // convert timestamp to Date object\n                  if (diffHours(now, videoDate) <= 24) { // avoid marking too old videos as recent when cache is empty\n                    video.isRecent = true;\n                  }\n                  return video;\n                });\n                // merge cached & new videos\n                cache[channel.id] = cache[channel.id]?.length ? [...videosData, ...cache[channel.id]] : videosData;\n                // sort videos\n                const videos = cache[channel.id].sort((a: Video, b: Video) => {\n                  if (settings.sortVideosBy === 'views' && a.views?.count && b.views?.count) {\n                    return b.views.count - a.views.count;\n                  } else {\n                    return b.publishedAt - a.publishedAt;\n                  }\n                }).slice(0, settings.videosPerChannel);\n                // save to cache\n                setCache({...cache});\n                saveToStorage({ cache: cache });\n                resolve(videos || []);\n              }).catch((error: Error) => {\n                displayError(error);\n                resolve([]);\n              });\n            }\n          } else {\n            resolve([]);\n          }\n        }).catch((error: Error) => {\n          displayError(error);\n          resolve([]);\n        });\n      }\n    });\n  };\n\n  const addChannel = (channel: Channel) => {\n    // Add channel\n    debug('added channel:', channel);\n    const found: Channel | undefined = channels.find((c: Channel) => c.id === channel.id);\n    if (!found) {\n      setChannels([...channels, channel]);\n      setSelectedChannelIndex(channels.length);\n    } else {\n      setSelectedChannelIndex(channels.indexOf(found));\n    }\n    // Get channel videos\n    setIsLoading(true);\n    getChannelVideos(channel).then((videos: Video[]) => {\n      setVideos(videos || []);\n      setIsLoading(false);\n    });\n  };\n\n  const selectChannel = (channel: Channel, index: number, ignoreCache: boolean = false) => {\n    // Select channel\n    debug('selected channel:', channel);\n    setSelectedChannelIndex(index);\n    // Get its videos\n    setIsLoading(true);\n    return getChannelVideos(channel, ignoreCache).then((videos: Video[]) => {\n      setVideos(videos || []);\n      setIsLoading(false);\n      window.scrollTo(0, 0); // scroll to top\n    });\n  };\n  \n  const deleteChannel = (index: number) => {\n    setChannels(channels.filter((_, i) => i !== index));\n    if (selectedChannelIndex === index) {\n      setVideos([]);\n      setSelectedChannelIndex(ChannelSelection.None);\n    }\n  };\n\n  const fetchChannelsVideos = (selection: ChannelSelection, filterFunction: Function|null = null, ignoreCache: boolean = false, customChannels?: Channel[]) => {\n    // Update channel selection\n    setSelectedChannelIndex(selection);\n    // Get channels videos\n    setIsLoading(true);\n    setVideos([]);\n    let promises: Promise<any>[] = [];\n    let videos: Video[] = [];\n    const channelsList = customChannels || channels;\n\n    channelsList.filter((channel: Channel) => !channel.isHidden).forEach((channel: Channel) => {\n\n      const promise = getChannelVideos(channel, ignoreCache).then((newVideos: Video[]) => {\n        debug('----------------------');\n        debug(channel.title, newVideos);\n        if (filterFunction) {\n          newVideos = newVideos.filter((video: Video) => filterFunction(video));\n        }\n        videos.push(...newVideos);\n      });\n      promises.push(promise);\n\n    });\n\n    return Promise.all(promises).finally(() => {\n      setVideos(videos);\n      setIsLoading(false);\n    });\n  };\n\n  const showAllChannels = (ignoreCache: boolean = false) => {\n    return fetchChannelsVideos(ChannelSelection.All, null, ignoreCache);\n  };\n\n  const showTodaysVideos = (ignoreCache: boolean = false) => {\n    return fetchChannelsVideos(ChannelSelection.TodaysVideos, (video: Video) => isInToday(video.publishedAt), ignoreCache);\n  };\n\n  const showRecentVideos = (ignoreCache: boolean = false) => {\n    return fetchChannelsVideos(ChannelSelection.RecentVideos, (video: Video) => video.isRecent, ignoreCache);\n  };\n\n  const showWatchLaterVideos = (ignoreCache: boolean = false) => {\n    return fetchChannelsVideos(ChannelSelection.WatchLaterVideos, (video: Video) => video.isToWatchLater, ignoreCache);\n  };\n\n  const showChannelSelection = (selection: ChannelSelection, ignoreCache: boolean = false) => {\n    switch(selection) {\n      case ChannelSelection.TodaysVideos:\n        return showTodaysVideos(ignoreCache);\n      case ChannelSelection.RecentVideos:\n        return showRecentVideos(ignoreCache);\n      case ChannelSelection.WatchLaterVideos:\n        return showWatchLaterVideos(ignoreCache);\n      case ChannelSelection.All:\n      default:\n        return showAllChannels(ignoreCache);\n    }\n  };\n\n  const clearRecentVideos = () => {\n    Object.keys(cache).forEach((channelId: string) => {\n      cache[channelId] = cache[channelId].map((video: Video) => {\n        video.isRecent = false;\n        return video;\n      });\n    });\n    setCache({...cache});\n    saveToStorage({ cache: cache });\n    if (selectedChannelIndex === ChannelSelection.RecentVideos) {\n      refreshChannels(ChannelSelection.RecentVideos);\n    }\n  };\n\n  const clearWatchLaterVideos = () => { // ToDo: merge boilerplate code (see above function)\n    Object.keys(cache).forEach((channelId: string) => {\n      cache[channelId] = cache[channelId].map((video: Video) => {\n        video.isToWatchLater = false;\n        return video;\n      });\n    });\n    setCache({...cache});\n    saveToStorage({ cache: cache });\n    if (selectedChannelIndex === ChannelSelection.WatchLaterVideos) {\n      refreshChannels(ChannelSelection.WatchLaterVideos);\n    }\n  };\n\n  const refreshChannels = (selection?: ChannelSelection, event?: any) => {\n    if (event) {\n      event.stopPropagation();\n    }\n    if (selection === undefined || selection === null) {\n      selection = selectedChannelIndex;\n    }\n    if (selection >= 0) {\n      return selectChannel(channels[selection], selection, true);\n    } else {\n      return showChannelSelection(selection, true);\n    }\n  };\n\n  const importChannels = (channelsList: Channel[]) => {\n    debug('importing channels', channelsList);\n    // Update channels\n    setChannels(channelsList);\n    fetchChannelsVideos(ChannelSelection.All, null, true, channelsList);\n    openSnackbar('Channels imported!');\n  };\n\n  const clearCache = () => {\n    setCache({});\n    saveToStorage({ cache: {} });\n    openSnackbar('Cache cleared!');\n  };\n\n  const getCacheSize = () => {\n    const size = memorySizeOf(cache);\n    //console.log(size);\n    return size;\n  };\n\n  const openSettings = (event: any) => {\n    event.stopPropagation();\n    setOpenSettingsDialog(true);\n  };\n\n  const closeSettings = () => {\n    setOpenSettingsDialog(false);\n  };\n\n  const getSettingsValue = (id: string, type: SettingsType) => {\n    const element = document.getElementById(id) as any;\n    if (element) {\n      switch(type) {\n        case SettingsType.Number:\n          return +element.value;\n        case SettingsType.Boolean:\n          return element.checked;\n        case SettingsType.String:\n        default:\n          return element.value;\n      }\n    } else {\n      return (settings as any)[id];\n    }\n  };\n\n  const saveSettings = () => {\n    // Update settings\n    setSettings({\n      defaultChannelSelection: getSettingsValue('defaultChannelSelection', SettingsType.Number),\n      videosPerChannel: getSettingsValue('videosPerChannel', SettingsType.Number),\n      videosAnteriority: getSettingsValue('videosAnteriority', SettingsType.Number),\n      sortVideosBy: getSettingsValue('sortVideosBy', SettingsType.String),\n      apiKey: getSettingsValue('apiKey', SettingsType.String),\n      autoVideosCheckRate: getSettingsValue('autoVideosCheckRate', SettingsType.Number),\n      enableRecentVideosNotifications: getSettingsValue('enableRecentVideosNotifications', SettingsType.Boolean),\n      autoPlayVideos: getSettingsValue('autoPlayVideos', SettingsType.Boolean),\n      openVideosInInactiveTabs: getSettingsValue('openVideosInInactiveTabs', SettingsType.Boolean),\n      openChannelsOnNameClick: getSettingsValue('openChannelsOnNameClick', SettingsType.Boolean),\n      hideEmptyChannels: getSettingsValue('hideEmptyChannels', SettingsType.Boolean),\n      autoClearRecentVideos: getSettingsValue('autoClearRecentVideos', SettingsType.Boolean),\n      autoClearCache: getSettingsValue('autoClearCache', SettingsType.Boolean),\n    });\n    closeSettings();\n    openSnackbar('Settings saved!');\n  };\n\n  const openSnackbar = (message: string, duration: number = 5000, showRefreshButton: boolean = true) => {\n    setSnackbarAutoHideDuration(duration);\n    setShowSnackbarRefreshButton(showRefreshButton);\n    setSnackbarMessage(message);\n  };\n\n  const closeSnackbar = () => {\n    setSnackbarMessage('');\n  };\n\n  const openVideo = (event: Event, video: Video) => {\n    event.stopPropagation();\n    if (isWebExtension() && video?.url) {\n      event.preventDefault();\n      createTab(video.url, !settings.openVideosInInactiveTabs).then((tab: any) => {\n        if (settings.autoPlayVideos) {\n          executeScript(tab.id, `document.querySelector('#player video').play();`);\n        }\n      });\n    }\n    if (selectedChannelIndex === ChannelSelection.WatchLaterVideos) {\n      removeVideoFromWatchLater(video);\n    }\n  };\n\n  const addVideoToWatchLater = (event: Event, video: Video) => {\n    event.stopPropagation();\n    event.preventDefault();\n    const videoIndex: number = cache[video?.channelId].findIndex((v: Video) => v.id === video?.id);\n    if (videoIndex > -1) {\n      if (!cache[video.channelId][videoIndex].isToWatchLater) {\n        cache[video.channelId][videoIndex].isToWatchLater = true;\n        setCache({...cache});\n        saveToStorage({ cache: cache });\n        openSnackbar('Video added to watch later list!', 1000, false);\n      } else {\n        openSnackbar('Video is already on watch later list!', 1000, false);\n      }\n    }\n  };\n\n  const removeVideoFromWatchLater = (video: Video) => {\n    const videoIndex: number = cache[video?.channelId].findIndex((v: Video) => v.id === video?.id);\n    if (videoIndex > -1 && cache[video.channelId][videoIndex].isToWatchLater) {\n      // exclude video from shown videos\n      setVideos(videos.filter((v: Video) => v.id !== video.id)); // To Fix: warning => Can't perform a React state update on an unmounted component.\n      //refreshChannels(ChannelSelection.WatchLaterVideos);\n      // update cache\n      cache[video.channelId][videoIndex].isToWatchLater = false;\n      setCache({...cache});\n      saveToStorage({ cache: cache });\n    }\n  };\n\n  const addAllVideosToWatchLater = () => {\n    let cacheUpdated: boolean = false;\n    videos.forEach((video: Video) => {\n      const videoIndex: number = cache[video?.channelId].findIndex((v: Video) => v.id === video?.id);\n      if (videoIndex > -1 && !cache[video.channelId][videoIndex].isToWatchLater) {\n        cache[video.channelId][videoIndex].isToWatchLater = true;\n        cacheUpdated = true;\n      }\n    });\n    if (cacheUpdated) {\n      setCache({...cache});\n      saveToStorage({ cache: cache });\n      openSnackbar('All videos added to watch later list!', 3000, false);\n    }\n  };\n\n  const handlePullToRefresh = (resolve: Function, reject: Function) => {\n    let promise: Promise<any>;\n    if (selectedChannelIndex >= 0) {\n      promise = selectChannel(channels[selectedChannelIndex], selectedChannelIndex, true);\n    } else {\n      promise = refreshChannels(selectedChannelIndex);\n    }\n    promise.then(() => {\n      resolve();\n    }).catch(() => {\n      reject();\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        color=\"secondary\"\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: openDrawer,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, openDrawer && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Youtube viewer\n          </Typography>\n          <SearchChannelInput onSelect={addChannel} onError={displayError} />\n          <div className={classes.grow} />\n          <IconButton edge=\"end\" aria-label=\"settings\" color=\"inherit\" onClick={(event) => openSettings(event)}>\n            <SettingsIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={openDrawer}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <ChannelList\n          channels={channels}\n          selectedIndex={selectedChannelIndex}\n          cacheSize={getCacheSize()}\n          todaysVideosCount={todaysVideosCount}\n          recentVideosCount={recentVideosCount}\n          watchLaterVideosCount={watchLaterVideosCount}\n          onShowAll={showAllChannels}\n          onShowTodaysVideos={showTodaysVideos}\n          onShowRecentVideos={showRecentVideos}\n          onShowWatchLaterVideos={showWatchLaterVideos}\n          onRefresh={refreshChannels}\n          onSelect={selectChannel}\n          onDelete={deleteChannel}\n          onSave={setChannels}\n          onSelectedIndexChange={setSelectedChannelIndex}\n          onClearCache={clearCache}\n          onClearRecentVideos={clearRecentVideos}\n          onAddVideosToWatchLater={addAllVideosToWatchLater}\n          onClearWatchLaterVideos={clearWatchLaterVideos}\n          onImport={importChannels}\n        />\n        <div className={classes.grow} />\n        <Divider />\n        <Typography variant=\"caption\" align=\"center\" className={classes.madeWithLove}>\n          Made with <FavoriteRoundedIcon className={classes.heartIcon} /> by AXeL\n          <Link href=\"https://github.com/AXeL-dev/youtube-viewer\" target=\"_blank\" rel=\"noopener\">\n            <IconButton edge=\"end\" size=\"small\" aria-label=\"github link\">\n              <GitHubIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Link>\n        </Typography>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: openDrawer,\n        })}\n        onClick={() => handleDrawerClose()}\n      >\n        <div className={classes.drawerHeader} />\n        {isReady && selectedChannelIndex !== ChannelSelection.None && (channels?.length ? (\n          <ReactPullToRefresh\n            onRefresh={handlePullToRefresh}\n            icon={<ArrowDownwardIcon className=\"arrowicon\" />}\n            distanceToRefresh={50}\n            resistance={5}\n            style={{ position: 'relative', height: isWebExtension() ? 'calc(100% - 64px)' : 'calc(100vh - 64px)', overflow: 'auto' }}\n          >\n            {videos?.length === 0 && !isLoading ? (\n              <Fade in={true} timeout={1000}>\n                <Box className={`${classes.container} expanded`}>\n                  <Typography component=\"div\" variant=\"h5\" color=\"textSecondary\" className={classes.centered} style={{ cursor: 'default' }}>\n                    <VideocamOffIcon style={{ fontSize: 38, verticalAlign: 'middle' }} /> No videos available\n                  </Typography>\n                </Box>\n              </Fade>\n            ) : selectedChannelIndex < 0 ? (\n              <MultiVideoGrid\n                channels={channels}\n                selectedChannelIndex={selectedChannelIndex}\n                videos={videos}\n                settings={settings}\n                loading={isLoading}\n                maxPerChannel={settings.videosPerChannel}\n                onSelect={selectChannel}\n                onVideoClick={openVideo}\n                onVideoWatchLaterClick={addVideoToWatchLater}\n                onSave={setChannels}\n                onRefresh={refreshChannels}\n              />\n            ) : (\n              <VideoGrid\n                selectedChannelIndex={selectedChannelIndex}\n                videos={videos}\n                loading={isLoading}\n                maxPerChannel={settings.videosPerChannel}\n                onVideoClick={openVideo}\n                onVideoWatchLaterClick={addVideoToWatchLater}\n              />\n            )}\n          </ReactPullToRefresh>\n        ) : (\n          <Fade in={true} timeout={3000}>\n            <Box className={classes.container}>\n              <Typography component=\"div\" variant=\"h5\" color=\"textSecondary\" className={classes.centered} style={{ cursor: 'default' }}>\n                <SearchIcon style={{ fontSize: 38, verticalAlign: 'middle' }} /> Start by typing a channel name in the search box\n              </Typography>\n            </Box>\n          </Fade>\n        ))}\n      </main>\n      <SettingsDialog\n        settings={settings}\n        open={openSettingsDialog}\n        onClose={closeSettings}\n        onSave={saveSettings}\n      />\n      <CustomSnackbar\n        open={!!snackbarMessage.length}\n        message={snackbarMessage}\n        autoHideDuration={snackbarAutoHideDuration}\n        showRefreshButton={showSnackbarRefreshButton}\n        onClose={closeSnackbar}\n        onRefresh={refreshChannels}\n      />\n      <MessageSnackbar\n        message={lastError?.message}\n        open={!!lastError}\n        onClose={() => setLastError(null)}\n      />\n    </div>\n  )\n}\n","import React from 'react';\nimport Popup from './Popup';\nimport { getFromStorage, saveToStorage } from '../helpers/storage';\nimport { Channel, ChannelSelection } from '../models/Channel';\nimport { Settings } from '../models/Settings';\nimport { isWebExtension, setBadgeText } from '../helpers/browser';\nimport { debug } from '../helpers/debug';\nimport { Video } from '../models/Video';\n\ninterface MainProps {}\n\ninterface MainState {\n  channels: Channel[];\n  settings: Settings;\n  cache: any;\n  isReady: boolean;\n}\n\nclass Main extends React.Component<MainProps, MainState> {\n  constructor(props: MainProps) {\n    super(props);\n    this.state = {\n      channels: [],\n      settings: {\n        defaultChannelSelection: ChannelSelection.All,\n        videosPerChannel: 9,\n        videosAnteriority: 30, // days\n        sortVideosBy: 'date',\n        autoVideosCheckRate: 30, // minutes\n        enableRecentVideosNotifications: true,\n        autoPlayVideos: false,\n        openVideosInInactiveTabs: false,\n        openChannelsOnNameClick: false,\n        hideEmptyChannels: true,\n        autoClearRecentVideos: true,\n        autoClearCache: false\n      },\n      cache: {},\n      isReady: false\n    };\n    this.updateState();\n    if (isWebExtension()) {\n      setBadgeText(''); // reset webextension badge\n    }\n  }\n\n  async updateState() {\n    // get data from storage\n    let [channels, settings, cache] = await getFromStorage('channels', 'settings', 'cache');\n    debug('Storage data:', {channels: channels, settings: settings, cache: cache});\n    // set/merge settings\n    settings = settings ? {...this.state.settings, ...settings} : this.state.settings;\n    // clear recent videos\n    if (settings?.autoClearRecentVideos && cache) {\n      let cacheHasChanged: boolean = false;\n      Object.keys(cache).forEach((channelId: string) => {\n        cache[channelId] = cache[channelId].map((video: Video) => {\n          if (video.isRecent) {\n            video.isRecent = false;\n            cacheHasChanged = true;\n          }\n          return video;\n        });\n      });\n      // update cache\n      if (cacheHasChanged) {\n        saveToStorage({ cache: cache });\n      }\n    }\n    // update state\n    this.setState({\n      channels: channels?.length ? channels : [],\n      settings: settings,\n      cache: !settings?.autoClearCache && cache ? cache : {},\n      isReady: true\n    });\n  }\n\n  render() {\n    return (\n      <Popup channels={this.state.channels} settings={this.state.settings} cache={this.state.cache} isReady={this.state.isReady} />\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Background from './components/Background';\nimport Main from './components/Main';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/background\" component={Background} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}