{"version":3,"sources":["types/Settings.ts","types/index.ts","ui/components/shared/Layout/index.tsx","ui/components/shared/Sidebar/ListItemLink/ListItem.ts","ui/components/shared/Sidebar/ListItemLink/ListItemText.ts","ui/components/shared/Sidebar/ListItemLink/Badge.ts","ui/components/shared/Sidebar/ListItemLink/index.tsx","ui/components/shared/Sidebar/Header.tsx","store/reducers/settings.ts","store/reducers/channels.ts","helpers/utils.ts","helpers/webext.ts","store/services/youtube/api.ts","store/services/youtube/endpoints.ts","store/selectors/channels.ts","store/selectors/videos.ts","hooks/useGrid.ts","hooks/useWidth.ts","helpers/logger.ts","ui/components/webext/Background/ChannelChecker.tsx","hooks/useInterval.ts","store/reducers/videos.ts","store/reducers/app.ts","helpers/storage.ts","store/persist.ts","store/index.ts","store/selectors/settings.ts","store/selectors/app.ts","ui/components/shared/Sidebar/index.tsx","ui/components/shared/Logo/index.tsx","ui/components/shared/Alert/index.tsx","ui/components/shared/RawHTML/index.tsx","ui/components/shared/SearchInput/Input.tsx","ui/components/shared/SearchInput/index.tsx","ui/components/shared/ProgressBar/LinearProgress.ts","ui/components/shared/ProgressBar/index.tsx","ui/components/shared/StyledMenu/index.tsx","ui/components/pages/Home/Tab/Badge.ts","ui/components/pages/Home/Tab/index.tsx","ui/components/pages/Home/VideoPlayerDialog/CloseButton.tsx","ui/components/pages/Home/VideoPlayerDialog/index.tsx","ui/components/pages/Home/ChannelRenderer/ChannelTitle/ChannelLink.tsx","ui/components/pages/Home/ChannelRenderer/ChannelTitle/index.tsx","ui/components/pages/Home/ChannelRenderer/ChannelVideos/VideoCard/TopActions/WatchLaterAction.tsx","ui/components/pages/Home/ChannelRenderer/ChannelVideos/VideoCard/TopActions/ViewedAction.tsx","ui/components/pages/Home/ChannelRenderer/ChannelVideos/VideoCard/TopActions/index.tsx","ui/components/pages/Home/ChannelRenderer/ChannelVideos/VideoCard/ViewedBadge.tsx","ui/components/pages/Home/ChannelRenderer/ChannelVideos/VideoCard/index.tsx","ui/components/pages/Home/ChannelRenderer/ChannelVideos/VideoSkeleton.tsx","ui/components/pages/Home/ChannelRenderer/ChannelVideos/GridItem.tsx","ui/components/pages/Home/ChannelRenderer/ChannelVideos/config.ts","ui/components/pages/Home/ChannelRenderer/ChannelVideos/LoadMore.tsx","ui/components/pages/Home/ChannelRenderer/ChannelVideos/index.tsx","ui/components/pages/Home/ChannelRenderer/ChannelRenderer.tsx","ui/components/pages/Home/ChannelRenderer/DefaultRenderer.tsx","ui/components/pages/Home/ChannelRenderer/RecentViewRenderer.tsx","ui/components/pages/Home/ChannelRenderer/WatchLaterViewRenderer.tsx","ui/components/pages/Home/ChannelsWrapper.tsx","ui/components/pages/Home/NoChannels.tsx","ui/components/pages/Home/TabPanel.tsx","ui/components/pages/Home/TabActions/ConfirmationDialog.tsx","helpers/file.ts","ui/components/pages/Home/TabActions/WatchLaterViewActions.tsx","ui/components/pages/Home/TabActions/RecentViewActions.tsx","ui/components/pages/Home/TabActions/index.tsx","ui/components/pages/Home/index.tsx","ui/components/pages/Channels/ChannelCard/ChannelPicture.tsx","ui/components/pages/Channels/ChannelCard/ChannelTitle.tsx","ui/components/pages/Channels/ChannelResults/PickChannelCard.tsx","ui/components/pages/Channels/ChannelResults/index.tsx","ui/components/pages/Channels/ChannelCard/ChannelDialogs/RemoveChannelDialog.tsx","ui/components/pages/Channels/ChannelCard/ChannelDialogs/index.tsx","ui/components/pages/Channels/ChannelCard/ChannelActions/index.tsx","ui/components/pages/Channels/ChannelCard/DragHandle.tsx","ui/components/pages/Channels/ChannelCard/index.tsx","ui/components/pages/Channels/ChannelCard/DraggableCard.tsx","ui/components/pages/Channels/ChannelList.tsx","ui/components/pages/Channels/NoChannels.tsx","ui/components/pages/Channels/index.tsx","ui/components/pages/Settings/Field/Input.ts","ui/components/pages/Settings/Field/Switch.ts","ui/components/pages/Settings/Field/Select.tsx","ui/components/pages/Settings/Field/MenuItem.tsx","ui/components/pages/Settings/Field/Secret.tsx","ui/components/pages/Settings/Field/index.tsx","ui/components/pages/Settings/Alerts.tsx","ui/components/pages/Settings/index.tsx","ui/components/pages/About/Credit.tsx","ui/components/pages/About/SocialLink.tsx","ui/components/pages/About/index.tsx","ui/components/webext/Background/index.tsx","ui/theme/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HomeView","VideosSeniority","SettingType","Layout","props","children","sx","Box","display","flexDirection","height","Sidebar","flexGrow","ListItemSelectedStyle","theme","backgroundColor","palette","primary","main","color","ListItem","styled","MuiListItemButton","borderRadius","marginBottom","spacing","ListItemText","MuiListItemText","alignItems","Badge","MuiBadge","position","transform","dark","common","white","minWidth","fontSize","marginLeft","ListItemLink","icon","text","badge","hasWarning","to","selected","useLocation","pathname","renderLink","React","useMemo","forwardRef","itemProps","ref","component","disableRipple","ListItemIcon","badgeContent","ml","process","REACT_APP_NAME","REACT_APP_VERSION","Header","showVersion","justifyContent","gap","cursor","userSelect","Logo","size","Typography","variant","bgcolor","mode","padding","border","borderColor","lineHeight","defaultSettings","defaultView","All","apiKey","darkMode","autoPlayVideos","recentVideosSeniority","OneDay","recentVideosDisplayOptions","hideViewedVideos","hideWatchLaterVideos","enableNotifications","initialState","settingsSlice","createSlice","name","reducers","setSettings","state","action","payload","resetSettings","setRecentVideosDisplayOptions","actions","channelsSlice","list","setChannels","addChannel","id","find","channel","push","removeChannel","filter","moveChannel","from","arrayMove","toggleChannel","found","isHidden","toggleChannelNotifications","notifications","isDisabled","niceDuration","ISO_8601_string","time","replace","toUpperCase","h","extract","m","s","join","stop","i","length","val","slice","shortenLargeNumber","num","decimal","digits","units","Math","pow","toFixed","TimeAgo","self","prefix","sufix","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","timeAgo","floor","Date","parseInt","separator","locales","words","interval","intervals","distance","key","trim","getDateBefore","before","date","setDate","getDate","setHours","elapsedDays","dt","dt1","dt2","tms1","getTime","diff","diffDays","debounce","callback","wait","immediate","timeout","args","context","this","clearTimeout","setTimeout","apply","noop","event","stopPropagation","preventDefault","humanInterval","unity","pluralize","isWebExtension","browser","error","isBrowserAPIAvailable","createTab","url","isActive","tabs","create","active","path","indexUrl","runtime","getURL","setBadgeText","browserAction","toString","setBadgeColors","textColor","navigator","userAgent","indexOf","setBadgeTextColor","setBadgeBackgroundColor","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","getState","settings","set","youtubeApi","createApi","reducerPath","endpoints","queries","findChannelByName","query","q","maxResults","params","part","fields","type","order","transformResponse","response","items","map","item","title","snippet","channelId","description","thumbnail","thumbnails","medium","total","pageInfo","totalResults","getChannelActivities","publishedAfter","publishedBefore","contentDetails","upload","videoId","getVideosById","ids","publishedAt","duration","views","statistics","viewCount","channelTitle","publishedSince","inWords","extendedApi","injectEndpoints","builder","queryFn","_arg","_queryApi","_extraOptions","fetchWithBQ","a","data","result","getChannelVideos","activities","onQueryStarted","arg","dispatch","queryFulfilled","persistVideos","persistVideosFlags","flags","saveVideos","videos","overrideExisting","useFindChannelByNameQuery","useGetVideosByIdQuery","useGetChannelActivitiesQuery","useGetChannelVideosQuery","selectChannels","channels","selectActiveChannels","createSelector","selectHiddenChannels","selectNotificationEnabledChannels","selectActiveChannelsCount","selectChannelsCount","activeChannels","selectVideos","selectChannelVideos","selectWatchLaterVideos","toWatchLater","sort","b","selectWatchLaterVideosCount","hiddenChannels","hiddenChannelsIds","includes","selectViewedWatchLaterVideosCount","viewed","selectVideoMeta","video","isViewed","isToWatchLater","useGrid","columns","width","defaultWidth","useTheme","breakpoints","keys","reverse","reduce","output","matches","useMediaQuery","up","useWidth","itemsPerRow","undefined","REACT_APP_DEBUG","now","getHours","getMinutes","getSeconds","log","message","console","defaults","ChannelChecker","onCheckEnd","useState","ready","setReady","cachedVideos","useAppSelector","toISOString","pollingInterval","skip","isFetching","refetch","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","newVideos","checkedVideosIds","notified","recent","addVideo","removeVideoFlag","flag","videosSlice","setVideos","addViewedVideo","removeViewedVideo","addWatchLaterVideo","removeWatchLaterVideo","caseReducers","removeOutdatedVideos","clearWatchLaterList","viewedOnly","channelCheckerDefaults","appSlice","loaded","setApp","storage","local","get","value","localStorage","getItem","parse","JSON","stringify","save","values","Object","setItem","storageKey","canPersistState","prevSerializedState","persist","store","preloadState","shouldPersist","legacy","isNotified","configureStore","reducer","settingsReducer","channelsReducer","videosReducer","app","appReducer","middleware","getDefaultMiddleware","concat","subscribe","onlyIfChanged","serializedState","persistState","useAppDispatch","useDispatch","useSelector","selectSettings","selectMode","selectApp","channelsCount","maxWidth","borderRight","py","pl","paddingLeft","List","aria-label","px","borderTop","mb","Link","textDecoration","href","target","rel","alt","src","Alert","open","openProp","severity","closable","syncOpen","onClose","setOpen","Collapse","in","IconButton","onClick","Input","InputBase","custom","lightGrey","lightBorder","SearchInput","placeholder","clearable","debounceTime","onChange","onClear","setValue","debounceChange","pointerEvents","zIndex","inputProps","onKeyUp","right","top","my","mx","LinearProgress","MuiLinearProgress","linearProgressClasses","colorPrimary","grey","bar","ProgressBar","StyledMenu","Menu","anchorOrigin","vertical","horizontal","transformOrigin","MenuListProps","dense","marginTop","boxShadow","marginRight","secondary","alpha","selectedOpacity","Tab","label","rest","fontWeight","textTransform","CloseButton","VideoPlayerDialog","opts","playerVars","autoplay","handleClose","reason","Dialog","overflow","DialogContent","p","propsAreEqual","prevProps","nextProps","memo","ChannelLink","outline","ChannelTitle","pb","Avatar","WatchLaterAction","view","WatchLater","Tooltip","ViewedAction","VideoTopActions","margin","ViewedBadge","bottom","left","VideoCard","thumbnailWidth","thumbnailHeight","onVideoPlay","opacity","backgroundImage","backgroundRepeat","backgroundSize","transition","className","textAlign","paddingRight","TopActions","pr","mt","enterDelay","enterNextDelay","WebkitLineClamp","WebkitBoxOrient","gutterBottom","VideoSkeleton","Skeleton","pt","GridItem","Grid","xxs","xs","sm","md","lg","xl","config","gridSpacing","gridColumns","LoadMore","isLoading","hasMore","disabled","ChannelVideos","onLoadMore","skeletonNumber","min","container","index","Array","_","ChannelRenderer","hasVideos","canLoadMore","DefaultRenderer","excludedVideosIds","onError","page","setPage","RecentViewRenderer","WatchLaterViewRenderer","max","ChannelsWrapper","Recent","NoChannels","history","useHistory","Button","mr","TabPanel","tab","onCountChange","setError","activeVideo","setActiveVideo","channelsData","err","count","acc","cur","displayed","ConfirmationDialog","DialogTitle","DialogContentText","DialogActions","autoFocus","downloadFile","blob","filename","window","msSaveOrOpenBlob","document","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","WatchLaterViewActions","watchLaterVideos","viewedCount","anchorEl","setAnchorEl","Boolean","confirmationDialogProps","setConfirmationDialogProps","aria-controls","aria-expanded","aria-haspopup","currentTarget","MenuItem","confirmed","Blob","RecentViewActions","hasEnabledOptions","TabActions","recentVideosCount","watchLaterVideosCount","Home","activeTab","setActiveTab","setRecentVideosCount","borderBottom","Tabs","ChannelPicture","Fade","PickChannelCard","changed","setChanged","exists","selectChannel","Card","elevation","CardHeader","alignSelf","avatar","placement","arrow","transitions","subheader","ChannelResults","search","results","Stack","divider","Divider","RemoveChannelDialog","ChannelDialogs","openedDialog","ChannelActions","setOpenedDialog","isMenuOpen","handleMenuClose","DragHandle","ChannelCard","isOverlay","showDragHandle","listeners","renderCard","Paper","orientation","DraggableCard","useSortable","attributes","setNodeRef","isDragging","style","isSorting","CSS","Transform","ChannelList","showDragHandles","draggedChannel","setDraggedChannel","collisionDetection","closestCenter","modifiers","restrictToVerticalAxis","restrictToFirstScrollableAncestor","onDragStart","onDragEnd","over","findIndex","c","strategy","verticalListSortingStrategy","fileInputRef","visibility","accept","file","files","Promise","resolve","reject","fileReader","FileReader","readAsText","onload","onerror","readFile","then","content","e","Channels","setSearch","setShowDragHandles","isSearchActive","showList","background","default","Switch","MuiSwitch","Select","MuiSelect","light","MenuItemSelectedStyle","MuiMenuItem","Secret","isSecretVisible","setSecretVisibility","endAdornment","InputAdornment","onMouseDown","edge","Field","options","handleChange","checked","String","option","renderField","temporaryApiKey","Alerts","Settings","lastCheckTime","setLastCheckTime","sendMessage","ThreeDays","SevenDays","Credit","author","repositoryUrl","SocialLink","tooltip","About","CardContent","CardActions","Background","responses","lastCheckDate","openHomePage","handleMessage","request","sender","sendResponse","onMessage","addListener","onClicked","notificationId","onButtonClicked","buttonIndex","split","onChanged","changes","areaName","newValue","updateBadge","getBadgeText","badgeText","handleCheckEnd","fulfilledResponses","channelTitles","iconUrl","sendNotification","createTheme","App","ThemeProvider","CssBaseline","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gKAUO,IAAKA,EAMAC,EAaAC,EAnBZ,sG,SAAYF,K,UAAAA,E,gBAAAA,E,0BAAAA,M,cAMAC,O,mBAAAA,I,yBAAAA,I,0BAAAA,M,cAaAC,O,mBAAAA,I,mBAAAA,I,mBAAAA,I,qBAAAA,I,gBAAAA,M,kGC7BZ,kqB,0JCUO,SAASC,EAAOC,GAAqB,IAClCC,EAAiBD,EAAjBC,SAAUC,EAAOF,EAAPE,GAElB,OACE,eAACC,EAAA,EAAD,CAAKD,GAAI,CAAEE,QAAS,OAAQC,cAAe,MAAOC,OAAQ,SAA1D,UACE,cAACC,GAAD,IACA,cAACJ,EAAA,EAAD,CACED,GAAE,aAAIM,SAAU,EAAGJ,QAAS,OAAQC,cAAe,UAAaH,GADlE,SAGGD,O,oKChBHQ,EAAwB,SAACC,GAAD,MAAmB,CAC/CC,gBAAiBD,EAAME,QAAQC,QAAQC,KACvCC,MAAO,OACP,0BAA2B,CACzBA,MAAO,UAWIC,EAPEC,YAAOC,IAAPD,EAA0B,gBAAGP,EAAH,EAAGA,MAAH,MAAgB,CACzDS,aAAc,cACdC,aAAcV,EAAMW,QAAQ,GAC5B,iBAAkBZ,EAAsBC,GACxC,uBAAwBD,EAAsBC,O,SCLjCY,EAPML,YAAOM,IAAPN,EAAwB,cAAGP,MAAH,MAAgB,CAC3D,wBAAyB,CACvBN,QAAS,OACToB,WAAY,c,SCWDC,EAdDR,YAAOS,IAAPT,EAAiB,gBAAGP,EAAH,EAAGA,MAAH,MAAgB,CAC7C,oBAAqB,CACnBiB,SAAU,WACVC,UAAW,OACXjB,gBAAiBD,EAAME,QAAQC,QAAQgB,KACvCd,MAAOL,EAAME,QAAQkB,OAAOC,MAC5BC,SAAU,GACV1B,OAAQ,GACR2B,SAAU,UACVC,WAAYxB,EAAMW,QAAQ,GAC1BF,aAAcT,EAAMW,QAAQ,UCGjB,SAASc,EAAanC,GAA2B,IACtDoC,EAAsCpC,EAAtCoC,KAAMC,EAAgCrC,EAAhCqC,KAAMC,EAA0BtC,EAA1BsC,MAAOC,EAAmBvC,EAAnBuC,WAAYC,EAAOxC,EAAPwC,GAEjCC,EADWC,cACSC,WAAaH,EAEjCI,EAAaC,IAAMC,SACvB,kBACED,IAAME,YACJ,SAACC,EAAWC,GAAZ,OAAoB,cAAC,IAAD,aAAMT,GAAIA,EAAIS,IAAKA,GAASD,SAEpD,CAACR,IAGH,OACE,eAAC,EAAD,CAAUU,UAAWN,EAAYH,SAAUA,EAAUU,eAAa,EAAlE,UACGf,EAAO,cAACgB,EAAA,EAAD,UAAehB,IAAuB,KAC9C,cAAC,EAAD,CACEvB,QACE,qCACGwB,EACAC,GAASG,EAAW,cAAC,EAAD,CAAOY,aAAcf,IAAY,KACrDC,IAAeE,EACd,cAAC,IAAD,CAAkBvC,GAAI,CAAEoD,GAAI,GAAKvC,MAAM,YACrC,a,MCnC8BwC,gRAAtCC,E,EAAAA,eAAgBC,E,EAAAA,kBAMT,SAASC,EAAO1D,GAAqB,IAC1C2D,EAAgB3D,EAAhB2D,YAER,OACE,eAACxD,EAAA,EAAD,CACE+C,UAAU,OACVhD,GAAI,CACFE,QAAS,OACToB,WAAY,SACZoC,eAAgB,SAChBC,IAAK,OACLC,OAAQ,UACRC,WAAY,QARhB,UAWE,cAACC,GAAD,CAAMC,KAAM,KACZ,eAAC9D,EAAA,EAAD,CACE+C,UAAU,OACVhD,GAAI,CACFE,QAAS,OACToB,WAAY,SACZT,MAAO,gBALX,UAQE,cAACmD,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiCX,IAChCG,EACC,eAACO,EAAA,EAAD,CACEC,QAAQ,UACRjE,GAAI,CACFgC,WAAY,EACZkC,QAAS,SAAC1D,GAAD,MACgB,UAAvBA,EAAME,QAAQyD,KAAmB,OAAS,eAC5CC,QAAS,UACTC,OAAQ,EACRC,YAAa,SAAC9D,GAAD,MACY,UAAvBA,EAAME,QAAQyD,KAAmB,cAAgB,WACnDlD,aAAc,MACdJ,MAAO,eACPkB,SAAU,UACVwC,WAAY,GAbhB,cAgBIhB,KAEF,W,4DC5CCiB,EAAkB,CAC7BC,YAAa/E,WAASgF,IACtBC,OAJoCtB,0CAKpCuB,UAAU,EACVC,gBAAgB,EAChBC,sBAAuBnF,kBAAgBoF,OACvCC,2BAA4B,CAC1BC,kBAAkB,EAClBC,sBAAsB,GAExBC,qBAAqB,GAKjBC,EAA2B,eAC5BZ,GAGQa,EAAgBC,YAAY,CACvCC,KAAM,WACNH,eACAI,SAAU,CACRC,YAAa,SAACC,EAAOC,GACnB,OAAO,2BACFD,GACAC,EAAOC,UAGdC,cAAe,SAACH,GACd,OAAO,2BACFA,GACAlB,IAGPsB,8BAA+B,SAC7BJ,EACAC,GAEA,OAAO,2BACFD,GADL,IAEEV,2BAA2B,2BACtBU,EAAMV,4BACNW,EAAOC,e,GAQlBP,EAAcU,QADDN,G,GAAAA,YAA4BK,I,GAAfD,c,GAAeC,+BAG5BT,KAAf,Q,SCnDaW,GAAgBV,YAAY,CACvCC,KAAM,WACNH,aANkC,CAClCa,KAAM,IAMNT,SAAU,CACRU,YAAa,SAACR,EAAOC,GACnB,OAAO,2BACFD,GACAC,EAAOC,UAGdO,WAAY,SAACT,EAAOC,GAAoC,IAC9CS,EAAOT,EAAOC,QAAdQ,GACMV,EAAMO,KAAKI,MAAK,SAACC,GAAD,OAAsBA,EAAQF,KAAOA,MAEjEV,EAAMO,KAAKM,KAAKZ,EAAOC,UAG3BY,cAAe,SAACd,EAAOC,GAAoC,IACjDS,EAAOT,EAAOC,QAAdQ,GACRV,EAAMO,KAAOP,EAAMO,KAAKQ,QAAO,SAACH,GAAD,OAAsBA,EAAQF,KAAOA,MAEtEM,YAAa,SACXhB,EACAC,GACI,IAAD,EACkBA,EAAOC,QAApBe,EADL,EACKA,KAAMrE,EADX,EACWA,GACdoD,EAAMO,KAAOW,aAAUlB,EAAMO,KAAMU,EAAMrE,IAE3CuE,cAAe,SAACnB,EAAOC,GAAoC,IACjDS,EAAOT,EAAOC,QAAdQ,GACFU,EAAQpB,EAAMO,KAAKI,MAAK,SAACC,GAAD,OAAsBA,EAAQF,KAAOA,KAC/DU,IACFA,EAAMC,UAAYD,EAAMC,WAG5BC,2BAA4B,SAACtB,EAAOC,GAAoC,IAC9DS,EAAOT,EAAOC,QAAdQ,GACFU,EAAQpB,EAAMO,KAAKI,MAAK,SAACC,GAAD,OAAsBA,EAAQF,KAAOA,KAC/DU,IACFA,EAAMG,cAAN,2BACKH,EAAMG,eADX,IAEEC,YAAYJ,EAAMG,gBACbH,EAAMG,cAAcC,kB,GAe/BlB,GAAcD,QANhBG,G,GAAAA,YACAC,G,GAAAA,WACAK,G,GAAAA,cACAE,G,GAAAA,YACAG,G,GAAAA,cACAG,G,GAAAA,2BAGahB,MAAf,Q,SClEO,SAASmB,GAAaC,GAC3B,IAAIC,EAAOD,EAAgBE,QAAQ,KAAM,IAAIC,cACzCC,EAAIC,EAAQ,KACZC,EAAID,EAAQ,KACZE,EAAIF,EAAQ,KAChB,MAAa,OAAND,EAAa,CAACA,EAAGE,EAAGC,GAAGC,KAAK,KAAO,CAACF,EAAGC,GAAGC,KAAK,KAEtD,SAASH,EAAQI,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAAKU,OAAQD,IAC/B,GAAIT,EAAKS,KAAOD,EAAM,CACpB,IAAIG,EAAMX,EAAKY,MAAM,EAAGH,GAKxB,OAJmB,IAAfE,EAAID,QAAyB,MAATF,IACtBG,EAAM,IAAMA,GAEdX,EAAOA,EAAKY,MAAMH,EAAI,GACfE,EAGX,MAAO,MAkCJ,SAASE,GAAmBC,GAIjC,IAJmE,IAEjEC,EAF4CC,EAAoB,uDAAH,EAC3DC,EAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAGvCR,EAAIQ,EAAMP,OAAS,EAAGD,GAAK,EAAGA,IAGrC,GAAIK,KAFJC,EAAUG,KAAKC,IAAI,IAAMV,EAAI,KAENK,GAAOC,EAC5B,QAASD,EAAMC,GAASK,QAAQJ,GAAUC,EAAMR,GAIpD,OAAOK,EASF,IAAMO,GAAW,WACtB,IAAIC,EAAY,CAGhBA,QAAe,CACbC,OAAQ,GACRC,MAAO,MAEPC,QAAS,qBACTC,OAAQ,iBACRC,QAAS,aACTC,KAAM,gBACNC,MAAO,iBACPC,IAAK,QACLC,KAAM,UACNC,MAAO,gBACPC,OAAQ,YACRC,KAAM,eACNC,MAAO,YAGTb,QAAe,SAACc,GACd,IAAIX,EAAUP,KAAKmB,OAAQ,IAAIC,KAAiBC,SAASH,IAAY,KACnEI,EAAYlB,EAAKmB,QAAQD,WAAa,IACtCE,EAAQpB,EAAKmB,QAAQlB,OAASiB,EAC9BG,EAAW,EACXC,EAAiB,CACfV,KAAMT,EAAU,QAChBO,MAAOP,EAAU,OACjBK,IAAKL,EAAU,MACfG,KAAMH,EAAU,KAChBC,OAAQD,EAAU,IAGlBoB,EAAWvB,EAAKmB,QAAQhB,QAE5B,IAAK,IAAIqB,KAAOF,EAAW,CAGzB,IAFAD,EAAWzB,KAAKmB,MAAMO,EAAUE,KAEjB,EAAG,CAChBD,EAAWvB,EAAKmB,QAAQK,EAAM,KAC9B,MACK,GAAiB,IAAbH,EAAgB,CACzBE,EAAWvB,EAAKmB,QAAQK,GACxB,OAOJ,OAFAJ,IADAG,EAAWA,EAAS5C,QAAQ,MAAO0C,IACfH,EAAYlB,EAAKmB,QAAQjB,OAEhCuB,SAGf,OAAOzB,EAtDe,GAgEjB,SAAS0B,KAAyC,IAA3BC,EAA0B,uDAAT,EACzCC,EAAO,IAAIZ,KAGf,OAFAY,EAAKC,QAAQD,EAAKE,UAAYH,GAC9BC,EAAKG,SAAS,EAAG,EAAG,EAAG,GAChBH,EAwEF,SAASI,GAAYC,GAE1B,OA5BK,SAAkBC,EAAoBC,GAC3C,IAAMC,EAAOF,aAAelB,KAAOkB,EAAIG,UAAYH,EAE7CI,IADOH,aAAenB,KAAOmB,EAAIE,UAAYF,GAC9BC,GAAR,MACb,OAAOxC,KAAKmB,MAAMuB,GAwBXC,CAASN,EADJ,IAAIjB,MA6FX,SAASwB,GACdC,EACAC,EACAC,GAEA,IAAIC,EAAe,KACnB,OAAO,WAAoC,IAAD,uBAAXC,EAAW,yBAAXA,EAAW,gBACxC,IAAMC,EAAUC,KAChBC,aAAaJ,GACbA,EAAUK,YAAW,WACnBL,EAAU,KACLD,GAAWF,EAASS,MAAMJ,EAASD,KACvCH,GACCC,IAAcC,GAASH,EAASS,MAAMJ,EAASD,IA8ChD,SAASM,GAAQC,GACtBA,EAAMC,kBACND,EAAME,iBAYD,SAASC,GACdlC,EACAmC,GAEC,IADDC,IACA,yDACA,MAAM,GAAN,OAAUpC,EAAV,YAAsBmC,GAAtB,OAA8BC,GAAapC,EAAW,EAAI,IAAM,I,aCzX3D,IAAMqC,GARb,WACE,IACE,QAASC,QACT,MAAOC,GACP,OAAO,GAI4BC,GAehC,SAASC,GAAUC,GAAsD,IAAzCC,IAAwC,yDAC7E,OAAOL,QAAQM,KAAKC,OAAO,CACzBH,MACAI,OAAQH,IAQL,IAJgBI,GAIVC,GAAWX,IAJDU,GAIyB,aAHvCT,QAAQW,QAAQC,OAAOH,KAGgC,GAkCzD,SAASI,GAAahL,GAC3BmK,QAAQc,cAAcD,aAAa,CACjChL,KAAe,IAATA,EAAa,GAAKA,EAAKkL,aAI1B,SAASC,GACd7M,EACA8M,IA5DmD,IAA5CC,UAAUC,UAAUC,QAAQ,YA+DjCpB,QAAQc,cAAcO,kBAAkB,CAAE9M,MAAO0M,IAEnDjB,QAAQc,cAAcQ,wBAAwB,CAAE/M,MAAOJ,I,uBCnFnDoN,GAAYC,aAAe,CAC/BC,QAAS,yCACTC,eAAgB,SAACC,EAAD,GAA4B,IACpCtJ,GAAUuJ,EADyB,EAAfA,YACeC,SAASxJ,OAIlD,OAHIA,GACFsJ,EAAQG,IAAI,iBAAkBzJ,GAEzBsJ,KAIEI,GAAaC,aAAU,CAClCC,YAAa,aACbV,aACAW,UAAW,iBAAO,MC4BdC,GAAU,CAEdC,kBAAmB,CACjBC,MAAO,gBAASC,EAAT,EAAGrJ,KAAH,IAAYsJ,WAAZ,MAA0D,CAC/DnC,IAAK,SACLoC,OAAQ,CACNC,KAAM,UACNC,OAAQ,0BACRC,KAAM,UACNC,MAAO,YACPL,gBAPG,MAAyB,GAAzB,EAQHD,OAGJO,kBAAmB,SAACC,GAAD,MAAoD,CACrEC,MAAOD,EAASC,MAAMC,KAAI,SAACC,GAAD,MAAW,CACnCC,MAAOD,EAAKE,QAAQD,MACpB9C,IAAI,mCAAD,OAAqC6C,EAAKE,QAAQC,UAAlD,WACHC,YAAaJ,EAAKE,QAAQE,YAC1BC,UAAWL,EAAKE,QAAQI,WAAWC,OAAOpD,IAC1CtG,GAAImJ,EAAKE,QAAQC,cAEnBK,MAAOX,EAASY,SAASC,gBAI7BC,qBAAsB,CACpBvB,MAAO,gBACLrI,EADK,EACLA,QACA6J,EAFK,EAELA,eACAC,EAHK,EAGLA,gBAHK,IAILvB,kBAJK,MAIQ,GAJR,QAK0B,CAC/BnC,IAAK,aACLoC,OAAO,qCACLC,KAAM,iBACNC,OAAQ,iCACRU,UAAWpJ,EAAQF,IACf+J,EAAiB,CAAEA,kBAAmB,IACtCC,EAAkB,CAAEA,mBAAoB,IALxC,IAMJvB,iBAGJM,kBAAmB,SAACC,GAAD,MAAuD,CACxEC,MAAOD,EAASC,MACb5I,QAAO,SAAC8I,GAAD,uBAAUA,EAAKc,eAAeC,cAA9B,aAAU,EAA4BC,WAC7CjB,KAAI,SAACC,GAAD,MAAW,CACdgB,QAAShB,EAAKc,eAAeC,OAAOC,YAExCR,MAAOX,EAASY,SAASC,gBAI7BO,cAAe,CACb7B,MAAO,gBAAG8B,EAAH,EAAGA,IAAH,IAAQ5B,kBAAR,MAAqB,GAArB,QAAkD,CACvDnC,IAAK,SACLoC,OAAQ,CACNC,KAAM,uCACNC,OACE,sIACF5I,GAAIqK,EAAIxI,MAAM,EAAG4G,GAAYjH,KAAK,QAGtCuH,kBAAmB,SAACC,GAAD,MAAgD,CACjEC,MAAOD,EAASC,MAAMC,KAAI,SAACC,GACzB,IAAMmB,EAAc,IAAI/G,KAAK4F,EAAKE,QAAQiB,aAAa1F,UACvD,MAAO,CACL5E,GAAImJ,EAAKnJ,GACToJ,MAAOD,EAAKE,QAAQD,MACpB9C,IAAI,mCAAD,OAAqC6C,EAAKnJ,IAC7CuK,SAAUxJ,GAAaoI,EAAKc,eAAeM,UAC3CC,MAAO1I,GAAmBqH,EAAKsB,WAAWC,WAC1ClB,UAAWL,EAAKE,QAAQI,WAAWC,OAAOpD,IAC1CgD,UAAWH,EAAKE,QAAQC,UACxBqB,aAAcxB,EAAKE,QAAQsB,aAC3BL,cACAM,eAAgBtI,GAAQuI,QAAQP,OAGpCX,MAAOX,EAASY,SAASC,iBAKzBiB,GAAc7C,GAAW8C,gBAAgB,CAC7C3C,UAAW,SAAC4C,GAAD,MAAc,CACvB1C,kBAAmB0C,EAAQzC,MAGzBF,GAAQC,mBACVwB,qBAAsBkB,EAAQzC,MAG5BF,GAAQyB,sBACVM,cAAeY,EAAQzC,MAAgD,CACrE0C,QAAQ,WAAD,4BAAE,WAAOC,EAAMC,EAAWC,EAAeC,GAAvC,mBAAAC,EAAA,yDACCjB,EAAoBa,EAApBb,IAAK5B,EAAeyC,EAAfzC,WACM,IAAf4B,EAAI1I,OAFD,yCAGE,CACL4J,KAAM,CACJtC,MAAO,GACPU,MAAO,KANN,uBAUc0B,EACnBhD,GAAQ+B,cAAc7B,MAAM,CAC1B8B,MACA5B,gBAbG,cAUD+C,EAVC,yBAgBAA,EAAOD,KACV,CACEA,KAAMlD,GAAQ+B,cAAcrB,kBAC1ByC,EAAOD,OAGX,CAAEpF,MAAOqF,EAAOrF,QAtBb,2CAAF,yDAAC,KAyBVsF,iBAAkBT,EAAQzC,MAGxB,CACA0C,QAAQ,WAAD,4BAAE,WAAOC,EAAMC,EAAWC,EAAeC,GAAvC,+BAAAC,EAAA,6DACCpL,EAAwCgL,EAAxChL,QAAS6J,EAA+BmB,EAA/BnB,eAAgBtB,EAAeyC,EAAfzC,WAD1B,SAGkB4C,EACvBhD,GAAQyB,qBAAqBvB,MAAM,CACjCrI,UACA6J,iBACAtB,gBAPG,YAGDiD,EAHC,QAUQvF,MAVR,yCAWE,CAAEA,MAAOuF,EAAWvF,QAXtB,YAakBkC,GAAQyB,qBAAqBf,kBACpD2C,EAAWH,MADLtC,EAbD,EAaCA,MAAOU,EAbR,EAaQA,MAKI,KADbU,EAAMpB,EAAMC,KAAI,qBAAGiB,YACjBxI,OAlBD,0CAmBE,CACL4J,KAAM,CACJtC,MAAO,GACPU,MAAO,KAtBN,yBA0Bc0B,EACnBhD,GAAQ+B,cAAc7B,MAAM,CAC1B8B,MACA5B,gBA7BG,eA0BD+C,EA1BC,yBAgCAA,EAAOD,KACV,CACEA,KAAK,2BACAlD,GAAQ+B,cAAcrB,kBACvByC,EAAOD,OAFP,IAIF5B,WAGJ,CAAExD,MAAOqF,EAAOrF,QAzCb,4CAAF,yDAAC,GA2CRwF,eAAe,WAAD,4BAAE,WAAOC,EAAP,8BAAAN,EAAA,yDAAcO,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,eAC9BC,EAAkDH,EAAlDG,cADM,EAC4CH,EAAnCI,mBAAoBC,OAD7B,MACqC,GADrC,YAGRF,EAHQ,gCAIaD,EAJb,gBAIFP,EAJE,EAIFA,KACRM,EACEK,GAAW,CACTC,OAAQZ,EAAKtC,MACbgD,WARM,mHAAF,qDAAC,OAkBnBG,kBAAkB,IAIlBC,GAIEvB,GAJFuB,0BAEAC,IAEExB,GAHFyB,6BAGEzB,GAFFwB,uBACAE,GACE1B,GADF0B,yB,SCzOWC,GAAiB,SAACnN,GAAD,OAAsBA,EAAMoN,SAAS7M,MAEtD8M,GAAuBC,aAAeH,IAAgB,SAACC,GAAD,OACjEA,EAASrM,QAAO,qBAAGM,eAGRkM,GAAuBD,aAAeH,IAAgB,SAACC,GAAD,OACjEA,EAASrM,QAAO,qBAAGM,eAGRmM,GAAoCF,aAC/CH,IACA,SAACC,GAAD,OACEA,EAASrM,QACP,gBAAGM,EAAH,EAAGA,SAAUE,EAAb,EAAaA,cAAb,OAAkCF,KAAY,OAACE,QAAD,IAACA,OAAD,EAACA,EAAeC,kBAIvDiM,GAA4BH,aACvCD,IACA,SAACD,GAAD,OAAcA,EAAS/K,UAGZqL,GAAsBJ,aACjCH,GACAE,IACA,SAACD,EAAUO,GAAX,OACEP,EAAS/K,SAAWsL,EAAetL,OAC/B+K,EAAS/K,OADb,UAEOsL,EAAetL,OAFtB,YAEgC+K,EAAS/K,WC5BhCuL,GAAe,SAAC5N,GAAD,OAAsBA,EAAM6M,OAAOtM,MAElDsN,GAAsB,SAACjN,GAAD,OACjC0M,aAAeM,IAAc,SAACf,GAAD,OAC3BA,EAAO9L,QAAO,gBAAGiJ,EAAH,EAAGA,UAAH,OAAmBpJ,EAAQF,KAAOsJ,SAmBvC8D,GAAyB,SAAClN,GAAD,OACpC0M,aAAeM,IAAc,SAACf,GAAD,OAC3BA,EACG9L,QACC,gBAAG4L,EAAH,EAAGA,MAAO3C,EAAV,EAAUA,UAAV,OACE2C,EAAMoB,gBAAkBnN,GAAWA,EAAQF,KAAOsJ,MAErDgE,MAAK,SAAChC,EAAGiC,GAAJ,OAAUA,EAAEjD,YAAcgB,EAAEhB,mBAG3BkD,GAA8BZ,aACzCM,GACAL,IACA,SAACV,EAAQsB,GACP,IAAMC,EAAoBD,EAAevE,KAAI,qBAAGlJ,MAChD,OAAOmM,EAAO9L,QACZ,gBAAG4L,EAAH,EAAGA,MAAO3C,EAAV,EAAUA,UAAV,OACE2C,EAAMoB,eAAiBK,EAAkBC,SAASrE,MACpD3H,UAIOiM,GAAoChB,aAC/CM,GACAL,IACA,SAACV,EAAQsB,GACP,IAAMC,EAAoBD,EAAevE,KAAI,qBAAGlJ,MAChD,OAAOmM,EAAO9L,QACZ,gBAAG4L,EAAH,EAAGA,MAAO3C,EAAV,EAAUA,UAAV,OACE2C,EAAMoB,cACNpB,EAAM4B,SACLH,EAAkBC,SAASrE,MAC9B3H,UAIOmM,GAAkB,SAACC,GAAD,OAC7BnB,aAAeM,IAAc,SAACf,GAAY,IAChCF,GAAUE,EAAOlM,MAAK,qBAAGD,KAAgB+N,EAAM/N,OAAO,IAAtDiM,MACR,MAAO,CACL+B,UAAe,OAAL/B,QAAK,IAALA,OAAA,EAAAA,EAAO4B,UAAU,EAC3BI,gBAAqB,OAALhC,QAAK,IAALA,OAAA,EAAAA,EAAOoB,gBAAgB,O,gCC/DtC,SAASa,GAAQC,GACtB,IAAMC,ECED,WAA8D,IAA5CC,EAA2C,uDAAN,KACtDjU,EAAQkU,eAGd,OAFa,aAAIlU,EAAMmU,YAAYC,MAAMC,UAGlCC,QAAO,SAACC,EAA0B5K,GAErC,IAAM6K,EAAUC,aAAczU,EAAMmU,YAAYO,GAAG/K,IACnD,OAAQ4K,GAAUC,EAAU7K,EAAM4K,IACjC,OAASN,EDXAU,CAAS,MAEvB,MAAO,CACLC,YAAaZ,EAAQD,EAAQC,QAASa,G,IEVlCC,GAAoBjS,gRAApBiS,gBAER,SAASjO,KACP,IAAMkO,EAAM,IAAI5L,KAChB,MAAM,IAAN,OAAW4L,EAAIC,WAAf,YAA6BD,EAAIE,aAAjC,YAAiDF,EAAIG,aAArD,KAGK,SAASC,GAAIC,GAClB,GAAIN,GAAiB,KAAC,IAAD,qBADcxG,EACd,iCADcA,EACd,mBACnB,EAAA+G,SAAQF,IAAR,SAAYtO,KAAQuO,GAApB,OAAgC9G,KCU7B,IAAMgH,GACI,GADJA,GAEM,EAGJ,SAASC,GAAejW,GAA6B,IAC1DwG,EAAwBxG,EAAxBwG,QAAS0P,EAAelW,EAAfkW,WADgD,EAEvCC,oBAAS,GAF8B,mBAE1DC,EAF0D,KAEnDC,EAFmD,KAG3DC,EAAeC,GAAe9C,GAAoBjN,IAClD6J,EAAiB9F,GAAcyL,IAA0BQ,cACzDC,EAA2C,IAAzBT,GALyC,EAM3BlD,GACpC,CACEtM,UACA6J,kBAEF,CACEqG,MAAON,IANHvE,EANyD,EAMzDA,KAAM8E,EANmD,EAMnDA,WAAYC,EANuC,EAMvCA,QAkD1B,OC7EK,SAAqBtL,EAAsBuL,GAChD,IAAMC,EAAgBC,iBAAOzL,GAE7B0L,qBAAU,WACRF,EAAcG,QAAU3L,IACvB,CAACA,IAEJ0L,qBAAU,WACR,GAAc,OAAVH,EAAJ,CAGA,IAAMvQ,EAAK4Q,aAAY,kBAAMJ,EAAcG,YAAWJ,GACtD,OAAO,kBAAMM,cAAc7Q,OAC1B,CAACuQ,IDyBJO,EAAY,WACLhB,EAGHQ,IAFAP,GAAS,KAIVI,GAEHO,qBAAU,WACR,IAAKL,GAAc9E,EAAM,CACvB,IAAIwF,EAAqB,GACnB5E,GAAa,OAAJZ,QAAI,IAAJA,OAAA,EAAAA,EAAMtC,QAAS,GACxBU,GAAY,OAAJ4B,QAAI,IAAJA,OAAA,EAAAA,EAAM5B,QAAS,EAE7B,GADA4F,GAAI,eAAgB5F,EAAO4B,GACvB5B,EAAQ,EAAG,CACb,IAAMqH,EAAmBhB,EACtB3P,QACC,gBAAG4L,EAAH,EAAGA,MAAH,OACEA,EAAM4B,QACN5B,EAAMoB,cACNpB,EAAMgF,UACNhF,EAAMiF,UAEThI,KAAI,qBAAGlJ,OACV+Q,EAAY5E,EAAO9L,QACjB,SAAC0N,GAAD,OAAYiD,EAAiBrD,SAASI,EAAM/N,QAEhC2B,OAAS,GACrB4N,GAAI,0BAAD,OAA2BrP,EAAQkJ,MAAnC,KAA6C2H,GAGpDnB,EAAW,CACT1P,UACA6Q,iBAIH,CAACV,IAEG,KElET,SAASc,GAAS7R,EAAoByO,EAAc9B,GAClD,IAAMvL,EAAQpB,EAAMO,KAAKI,MAAK,qBAAGD,KAAgB+N,EAAM/N,MACnDU,EACFA,EAAMuL,MAAN,2BACKvL,EAAMuL,OACNA,GAGL3M,EAAMO,KAAKM,KAAK,CACdH,GAAI+N,EAAM/N,GACVsJ,UAAWyE,EAAMzE,UACjBgB,YAAayD,EAAMzD,YACnB2B,UAKN,SAASmF,GAAgB9R,EAAoByO,EAAcsD,GACzD,IAAM3Q,EAAQpB,EAAMO,KAAKI,MAAK,qBAAGD,KAAgB+N,EAAM/N,MACnDU,IACFA,EAAMuL,MAAMoF,IAAQ,GAIjB,IAAMC,GAAcpS,YAAY,CACrCC,KAAM,SACNH,aA9BgC,CAChCa,KAAM,IA8BNT,SAAU,CACRmS,UAAW,SAACjS,EAAOC,GACjB,OAAO,2BACFD,GACAC,EAAOC,UAGdgS,eAAgB,SAAClS,EAAOC,GAEtB4R,GAAS7R,EADKC,EAAOC,QACE,CAAEqO,QAAQ,KAEnC4D,kBAAmB,SAACnS,EAAOC,GAEzB6R,GAAgB9R,EADFC,EAAOC,QACS,WAEhCkS,mBAAoB,SAACpS,EAAOC,GAE1B4R,GAAS7R,EADKC,EAAOC,QACE,CAAE6N,cAAc,KAEzCsE,sBAAuB,SAACrS,EAAOC,GAE7B6R,GAAgB9R,EADFC,EAAOC,QACS,gBACzByG,IAEHqL,GAAYM,aAAaC,qBAAqBvS,IAGlDwS,oBAAqB,SACnBxS,EACAC,GACI,IACIwS,GAAexS,EAAOC,SAAW,IAAjCuS,WACRzS,EAAMO,KAAOP,EAAMO,KAAKqJ,KAAI,SAAC6E,GAAD,OAC1BA,EAAM9B,MAAMoB,aAAZ,2BAESU,GAFT,IAGM9B,MAAM,2BACD8B,EAAM9B,OADN,IAEHoB,eAAc0E,IAAchE,EAAM9B,MAAM4B,WAG5CE,MAGR7B,WAAY,SACV5M,EACAC,GACI,IAAD,IACuBA,EAAOC,QAAzB2M,EADL,EACKA,OAAQF,EADb,EACaA,MADb,eAEiBE,GAFjB,IAEH,2BAA4B,CAC1BgF,GAAS7R,EADiB,QACH2M,IAHtB,gCAML4F,qBAAsB,SAACvS,GACrBA,EAAMO,KAAOP,EAAMO,KAAKQ,QACtB,gBAAG4L,EAAH,EAAGA,MAAO3B,EAAV,EAAUA,YAAV,OACE2B,EAAM4B,QACN5B,EAAMoB,eACJpB,EAAMgF,UAAYhF,EAAMiF,SACxB3M,GAAY+F,IAAgB0H,U,GAepCV,GAAY3R,QARd4R,G,GAAAA,UACAC,G,GAAAA,eACAC,G,GAAAA,kBACAC,G,GAAAA,mBACAC,G,GAAAA,sBACAG,G,GAAAA,oBACA5F,G,GAAAA,WACA2F,G,GAAAA,qBAGaP,MAAf,QC3GaW,GAAW/S,YAAY,CAClCC,KAAM,MACNH,aAN6B,CAC7BkT,QAAQ,GAMR9S,SAAU,CACR+S,OAAQ,SAAC7S,EAAOC,GACd,OAAO,2BACFD,GACAC,EAAOC,aAMH2S,GAAWF,GAAStS,QAApBwS,OAEAF,MAAf,Q,8CCbA,wDAAA3G,EAAA,qEAAsBkD,EAAtB,yBAAsBA,EAAtB,iCAEyBtI,QAAQkM,QAAQC,MAAMC,IAAI9D,GAFnD,cAEUhD,EAFV,yBAGWgD,EAAK7M,OAAS,EAAI6J,EAASA,EAAOgD,EAAK,KAHlD,gCAKUhD,EAAoC,GAL9C,eAMsBgD,GANtB,IAMI,2BAAWzK,EAAa,QAChBwO,EAAQC,aAAaC,QAAQ1O,GACnCyH,EAAOzH,GAAO2O,GAAMH,GAR1B,uDAUW/D,EAAK7M,OAAS,EAAI6J,EAASA,EAAOgD,EAAK,KAVlD,0D,sBAcA,SAASkE,GAAMH,GACb,IAAKA,EACH,OAAOA,EAET,IACE,OAAOI,KAAKD,MAAMH,GAClB,MAAOpM,GACP,OAAOoM,GAuBX,SAASK,GAAUL,GACjB,IACE,OAAOI,KAAKC,UAAUL,GACtB,MAAOpM,GACP,OAAOoM,GAIX,IAKeH,GALC,CACdE,I,4CACAO,KAtBF,SAAcC,GACZ,IACE5M,QAAQkM,QAAQC,MAAMrK,IAAI8K,GAC1B,MAAO3M,GAEP,IADA,IACA,MADa4M,OAAOvE,KAAKsE,GACzB,eAAwB,CAAnB,IAAM/O,EAAG,KACNwO,EAAQK,GAAUE,EAAO/O,IAC/ByO,aAAaQ,QAAQjP,EAAKwO,OCzCnBU,GAAa,qBAEtBC,IAAkB,EAClBC,GAAsB,GAEbtH,GAAW,SAACtM,GAAiD,IAA9B6T,EAA6B,wDACvEF,GAAkBE,EAClBC,GAAMxH,SAAStM,IAGJ+T,GAAY,uCAAG,0CAAAhI,EAAA,sEACN8G,GAAQE,IAAIW,IADN,UACpB3T,EADoB,OAEtBiU,GAAiBjU,EAChBA,EAHqB,iCAKF8S,GAAQE,IAAI,WAAY,YALtB,iDAKsC,GALtC,SAKlBkB,EALkB,MAMbzL,WACDxJ,EAAWiV,EAAOzL,SAAlBxJ,SAENsN,GAASxM,GAAY,CAAEd,YAGvBiV,EAAO9G,UACTb,GAAS/L,GAAY,CAAED,KAAM2T,EAAO9G,YAbd,wBAiBhB3E,GAjBgB,EAiBezI,GAAS,IAAxCyI,SAAU2E,EAjBM,EAiBNA,SAAUP,EAjBJ,EAiBIA,OACxBpE,GACF8D,GAASxM,GAAY0I,IAEnB2E,GACFb,GAAS/L,GAAY4M,IAEnBP,IAEmBA,EAAOtM,KAAKQ,QAC/B,SAAC0N,GAAD,QACIgF,OAAOvE,KAAKT,GAAO9N,MAAK,SAAC8D,GAAD,MACxB,CAAC,WAAY,iBAAkB,cAAc4J,SAAS5J,SAG3CpC,OAAS,GACxB4R,GAAgB,EAChB1H,GACE0F,GAAU,CACR1R,KAAMsM,EAAOtM,KAAKqJ,KAChB,gBACE8E,EADF,EACEA,SACAC,EAFF,EAEEA,eACAwF,EAHF,EAGEA,WACG1F,EAJL,8EAAC,eAMIA,GANL,IAOE9B,MAAO,CACL4B,OAAQG,IAAY,EACpBX,aAAcY,IAAkB,EAChCgD,SAAUwC,IAAc,YAOlC5H,GAAS0F,GAAUpF,KAtDC,QA0D1BN,GAASsG,GAAO,CAAED,QAAQ,IAASqB,GA1DT,4CAAH,qDCVnBF,GAAQK,YAAe,CAC3BC,QAAQ,aACN5L,SAAU6L,GACVlH,SAAUmH,GACV1H,OAAQ2H,GACRC,IAAKC,IACJ/L,GAAWE,YAAcF,GAAW0L,SAEvCM,WAAY,SAACC,GAAD,OACVA,IAAuBC,OAAOlM,GAAWgM,eAG7CZ,GAAMe,UACJrP,IAAS,YD0DiB,SAACzF,EAAkB+U,GAK7C,GAJA9E,GAAI,iBAAkB,CACpB2D,mBACA5T,UAEG4T,GAAL,CALyE,IASjEnL,EAA+BzI,EAA/ByI,SAAU2E,EAAqBpN,EAArBoN,SAAUP,EAAW7M,EAAX6M,OAC5B,GAAIkI,EAAe,CACjB,IAAMC,EAAkB3B,KAAKC,UAAU,CAAE7K,WAAU2E,WAAUP,WAC7D,GAAIgH,KAAwBmB,EAE1B,YADA/E,GAAI,yBAGN4D,GAAsBmB,EAExBlC,GAAQS,KAAR,eACGI,GAAa,CACZlL,WACA2E,WACAP,iBAhBF+G,IAAkB,EC/DlBqB,CAAalB,GAAMvL,cAClB,MAGL,sBAAC,sBAAAwD,EAAA,sEAAkBgI,KAAlB,kFAAD,GAIO,IAAMkB,GAAiB,kBAAMC,eACvBxE,GAAkDyE,IAGhDrB,MCjCFsB,GAAiB,SAACrV,GAAD,OAAsBA,EAAMyI,UAE7C6M,GAAahI,aAAe+H,IAAgB,SAAC5M,GAAD,OACvDA,EAASvJ,SAAW,OAAS,WCJlBqW,GAAY,SAACvV,GAAD,OAAsBA,EAAMyU,KCc9C,SAAS9Z,GAAQP,GACtB,IAAMqa,EAAM9D,GAAe4E,IACrBC,EAAgB7E,GAAejD,IAC/BjF,EAAWkI,GAAe0E,IAEhC,OACE,eAAC9a,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACTC,cAAe,SACf2B,SAAU,IACVqZ,SAAU,IACVjX,QAAS,mBACTkX,YAAa,EACb9W,YAAa,WARjB,UAWE,eAACrE,EAAA,EAAD,CACED,GAAI,CACFM,SAAU,EACVJ,QAAS,OACTC,cAAe,SACfkb,GAAI,IACJC,GAAI,GANR,UASE,cAACrb,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACTC,cAAe,MACfmB,WAAY,SACZJ,aAAc,GALlB,SAQE,cAACsC,EAAD,CAAQC,aAAW,MAErB,cAACxD,EAAA,EAAD,CAAKD,GAAI,CAAEM,SAAU,EAAGib,YAAa,EAAG/G,MAAO,QAA/C,SACE,eAACgH,EAAA,EAAD,CAAMxY,UAAU,MAAMyY,aAAW,OAAjC,UACE,cAACxZ,EAAD,CAAcC,KAAM,cAAC,IAAD,IAAiBC,KAAK,OAAOG,GAAG,MACpD,cAACL,EAAD,CACEC,KAAM,cAAC,IAAD,IACNC,KAAK,WACLG,GAAG,YACHF,MAAO8Y,IAET,cAACjZ,EAAD,CACEC,KAAM,cAAC,IAAD,IACNC,KAAK,WACLG,GAAG,YACHD,WAAY8X,EAAI7B,SAAWnK,EAASxJ,SAEtC,cAAC1C,EAAD,CACEC,KAAM,cAAC,IAAD,IACNC,KAAK,QACLG,GAAG,mBAKX,eAACrC,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACTC,cAAe,SACfkb,GAAI,EACJK,GAAI,EACJC,UAAW,EACXrX,YAAa,WAPjB,UAUE,cAACN,EAAA,EAAD,CACEhE,GAAI,CAAE+B,SAAU,SAAU6Z,GAAI,GAC9B3X,QAAQ,UACRpD,MAAM,iBAHR,kDAOA,eAACgb,EAAA,EAAD,CACE7b,GAAI,CACFE,QAAS,OACToB,WAAY,SACZqC,IAAK,GACL5B,SAAU,SACV+Z,eAAgB,OAChB,UAAW,CACTA,eAAgB,cAGpBC,KAAK,oDACLC,OAAO,SACPnb,MAAM,YACNob,IAAI,WAdN,UAgBE,cAAC,IAAD,CAAoBjc,GAAI,CAAE+B,SAAU,MAhBtC,mCClFD,SAAS+B,GAAKhE,GAAmB,IAAD,EACNA,EAAvBiE,YAD6B,MACtB,GADsB,IACNjE,EAAZE,UADkB,MACb,GADa,EAGrC,OACE,cAACC,EAAA,EAAD,CACED,GAAE,aACAE,QAAS,OACT,QAAS,CACPsU,MAAOzQ,EACP3D,OAAQ2D,EACR0C,OAAQ,oCAEPzG,GARP,SAWE,qBAAKkc,IAAI,OAAOC,IAAI,oB,sDCVnB,SAASC,GAAMtc,GAAoB,IAAD,IAQnCA,EANFuc,KAAMC,OAF+B,SAGrC/P,EAKEzM,EALFyM,MAHqC,EAQnCzM,EAJFyc,gBAJqC,MAI1B,QAJ0B,EAKrCC,EAGE1c,EAHF0c,SACAC,EAEE3c,EAFF2c,SACAC,EACE5c,EADF4c,QAEI3c,EAAWD,EAAMC,WAAN,OAAkBwM,QAAlB,IAAkBA,GAAlB,UAAkBA,EAAOoF,YAAzB,aAAkB,EAAapF,MAAMqJ,WAArC,OAAgDrJ,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAOA,OATjC,EAUf0J,mBAASqG,GAVM,mBAUhCD,EAVgC,KAU1BM,EAV0B,KAYvC7F,qBAAU,WACJ2F,GAAYH,IAAaD,GAC3BM,EAAQL,KAGT,CAACA,EAAUG,IASd,OACE,cAACG,GAAA,EAAD,CAAUC,GAAIR,EAAd,SACE,cAAC,KAAD,CACErc,GAAI,CAAEiB,aAAc,SACpBsb,SAAUA,EACV5W,OACE6W,EACE,cAACM,GAAA,EAAD,CACErB,aAAW,QACX5a,MAAM,UACNkD,KAAK,QACLgZ,QAlBQ,WAClBJ,GAAQ,GACJD,GACFA,KAWM,SAME,cAAC,KAAD,CAAW3a,SAAS,cAEpB,KAbR,SAgBGhC,MCnDF,I,8BCOQid,GAZDjc,YAAOkc,KAAPlc,EAAkB,gBAAGP,EAAH,EAAGA,MAAH,MAAgB,CAC9CF,SAAU,EACVO,MAAOL,EAAME,QAAQyB,KAAKxB,QAC1BF,gBAAiBD,EAAME,QAAQwc,OAAOC,UACtC9Y,OAAO,aAAD,OAAe7D,EAAME,QAAQwc,OAAOE,aAC1Cnc,aAAc,GACd,wBAAyB,CACvBmD,QAAS5D,EAAMW,QAAQ,EAAG,EAAG,EAAG,GAChCqT,MAAO,YCKJ,SAAS6I,GAAYvd,GAA0B,IAAD,EAQ/CA,EANFwd,mBAFiD,MAEnC,eAFmC,EAG1CnC,EAKLrb,EALF0U,MACA+I,EAIEzd,EAJFyd,UAJiD,EAQ/Czd,EAHF0d,oBALiD,MAKlC,IALkC,EAMjDC,EAEE3d,EAFF2d,SACAC,EACE5d,EADF4d,QAPiD,EASzB/a,IAAMsT,SAAS,IATU,mBAS5C0C,EAT4C,KASrCgF,EATqC,KA4B7CC,EAAiBjb,IAAMC,SAC3B,kBACEuI,IAAS,SAACwN,GACR8E,EAAS9E,KACR6E,KAEL,IAWF,OARA7a,IAAMmU,WAAU,WACA,KAAV6B,GAIJiF,EAAejF,KACd,CAACA,EAAOiF,IAGT,eAAC3d,EAAA,EAAD,CAAKD,GAAI,CAAEyB,SAAU,WAAYvB,QAAS,OAAQI,SAAU,EAAG6a,YAA/D,UACE,cAAClb,EAAA,EAAD,CACED,GAAI,CACFwU,MAAO,GACPpU,OAAQ,OACRqB,SAAU,WACVoc,cAAe,OACf3d,QAAS,OACToB,WAAY,SACZoC,eAAgB,SAChB7C,MAAO,gBACPid,OAAQ,GAVZ,SAaE,cAAC,KAAD,MAEF,cAAC,GAAD,CACER,YAAaA,EACbS,WAAY,CAAEpF,QAAO,aAAc,UACnC8E,SAtDe,SAAC1R,GACpB4R,EAAS5R,EAAMiQ,OAAOrD,QAsDlBqF,QA5Cc,SAACjS,GACD,UAAdA,EAAM5B,KACRsT,EAAS9E,MA4CR4E,IAAkB,OAAL5E,QAAK,IAALA,OAAA,EAAAA,EAAO5Q,QAAS,EAC5B,cAAC+U,GAAA,EAAD,CACE9c,GAAI,CACFyB,SAAU,WACVwc,MAAO,EACPC,IAAK,EACLC,GAAI,IACJC,GAAI,EACJvd,MAAO,iBAET4a,aAAW,QACX1X,KAAK,QACLgZ,QAjEY,WAClBY,EAAS,IACLD,GACFA,KAmDE,SAaE,cAAC,KAAD,CAAW3b,SAAS,cAEpB,Q,wBCnFKsc,GAZQtd,YAAOud,KAAPvd,EAA0B,kBAAGP,EAAH,EAAGA,MAAH,UAC/CJ,OAAQ,GADuC,0BAEzCme,KAAsBC,cAAiB,CAC3C/d,gBACED,EAAME,QAAQ+d,KAA4B,UAAvBje,EAAME,QAAQyD,KAAmB,IAAM,OAJf,2BAMxCoa,KAAsBG,KAAQ,CACnCzd,aAAc,EACdR,gBAAwC,UAAvBD,EAAME,QAAQyD,KAAmB,UAAY,YARjB,KCD1C,SAASwa,GAAY7e,GAA6B,IAAD,EACPA,EAAvCmE,eAD8C,MACpC,cADoC,IACPnE,EAAd6Y,aADqB,MACb,EADa,EAEtD,OACE,cAAC1Y,EAAA,EAAD,CAAKD,GAAI,CAAEM,SAAU,GAArB,SACE,cAAC,GAAD,CAAgB2D,QAASA,EAAS0U,MAAOA,M,sCCLlCiG,GAAa7d,aAAO,SAACjB,GAAD,OAC/B,cAAC+e,GAAA,EAAD,aACEC,aAAc,CACZC,SAAU,SACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAEdE,cAAe,CACbC,OAAO,IAELrf,MAbkBiB,EAevB,gBAAGP,EAAH,EAAGA,MAAH,MAAgB,CACjB,mBAAoB,CAClBS,aAAc,EACdme,UAAW5e,EAAMW,QAAQ,GACzBW,SAAU,IACVjB,MACyB,UAAvBL,EAAME,QAAQyD,KACV,kBACA3D,EAAME,QAAQ+d,KAAK,KACzBY,UACE,uJACF,sBAAuB,CACrB,qBAAsB,CACpBtd,SAAU,GACVud,YAAa9e,EAAMW,QAAQ,KAC3B,wBAAyB,CACvBN,MAAOL,EAAME,QAAQyB,KAAKod,YAG9B,WAAY,CACV9e,gBAAiB+e,aACfhf,EAAME,QAAQiF,OAAOpD,SACrB/B,EAAME,QAAQiF,OAAO8Z,wB,UCvBhBle,GAdDR,YAAOS,IAAPT,EAAiB,gBAAGP,EAAH,EAAGA,MAAH,MAAgB,CAC7C,oBAAqB,CACnBiB,SAAU,WACVC,UAAW,OACXjB,gBAAiBD,EAAME,QAAQC,QAAQC,KACvCC,MAAOL,EAAME,QAAQkB,OAAOC,MAC5BC,SAAU,GACV1B,OAAQ,GACR2B,SAAU,UACVC,WAAYxB,EAAMW,QAAQ,KAC1BF,aAAcT,EAAMW,QAAQ,UCHjB,SAASue,GAAI5f,GAAkB,IACpC6f,EAAoC7f,EAApC6f,MAAOvd,EAA6BtC,EAA7BsC,MAAOG,EAAsBzC,EAAtByC,SAAaqd,EADQ,aACC9f,EADD,8BAG3C,OACE,cAAC,KAAD,aACEE,GAAI,CACF+B,SAAU,WACV8d,WAAY,IACZ/d,SAAU,IACVge,cAAe,cAEjBH,MACE,eAAC1f,EAAA,EAAD,CAAKD,GAAI,CAAEE,QAAS,OAAQoB,WAAY,UAAxC,UACGqe,EACAvd,GAASG,EAAW,cAAC,GAAD,CAAOY,aAAcf,IAAY,QAG1Da,eAAa,GACT2c,I,kCCpBK,SAASG,GAAYjgB,GAA0B,IACpDid,EAAYjd,EAAZid,QAER,OACE,cAACD,GAAA,EAAD,CACE9c,GAAI,CACFyB,SAAU,WACVyc,IAAK,SAAC1d,GAAD,OAAWA,EAAMW,SAAS,OAC/B8c,MAAO,SAACzd,GAAD,OAAWA,EAAMW,SAAS,OACjC+C,QAAS,eACTrD,MAAO,eACPkB,SAAU,WACV,UAAW,CACTmC,QAAS,eACTrD,MAAO,iBAGXkD,KAAK,QACLgZ,QAASA,EAdX,SAgBE,cAAC,KAAD,CAAWhb,SAAS,cCb1B,SAASie,GAAkBlgB,GAAgC,IACjDuc,EAAyBvc,EAAzBuc,KAAMlI,EAAmBrU,EAAnBqU,MAAOuI,EAAY5c,EAAZ4c,QAEfuD,EAAO,CACX7f,OAAQ,OACRoU,MAAO,OACP0L,WAAY,CAEVC,SANa9J,GAAe0E,IAMTlW,eAAiB,EAAI,IAItCub,EAAc,SAACrU,EAAmBsU,GACtC,GAAe,kBAAXA,EACF,OAAOvU,GAAKC,GAEd2Q,KAGF,OACE,eAAC4D,GAAA,EAAD,CACEtgB,GAAI,CACF,mBAAoB,CAClBugB,SAAU,UACV/L,MAAO,MACP2G,SAAU,KACV/a,OAAQ,QAGZic,KAAMA,EACNK,QAAS0D,EAVX,UAYE,cAACL,GAAD,CAAahD,QAASqD,IACtB,cAACI,GAAA,EAAD,CACExgB,GAAI,CACFE,QAAS,OACTugB,EAAG,IACH,QAAS,CACPngB,SAAU,IALhB,SASG6T,EAAQ,cAAC,KAAD,CAAS5D,QAAS4D,EAAM/N,GAAI6Z,KAAMA,IAAW,UAM9D,SAASS,GACPC,EACAC,GACC,IAAD,IACA,OACED,EAAUtE,OAASuE,EAAUvE,OAC7B,UAAAsE,EAAUxM,aAAV,eAAiB/N,OAAjB,UAAwBwa,EAAUzM,aAAlC,aAAwB,EAAiB/N,IAI9BzD,WAAMke,KAAKb,GAAmBU,I,UCjD9BI,OAff,SAAqBhhB,GAA0B,IACrCwG,EAAsBxG,EAAtBwG,QAASvG,EAAaD,EAAbC,SAEjB,OACE,cAAC8b,EAAA,EAAD,CACE7b,GAAI,CAAE+gB,QAAS,OAAQjF,eAAgB,QACvCC,KAAMzV,EAAQoG,IACdsP,OAAO,SACPC,IAAI,WAJN,SAMGlc,KCVP,SAASihB,GAAalhB,GAA2B,IACvCwG,EAAYxG,EAAZwG,QAER,OACE,eAACrG,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACToB,WAAY,SACZ2f,GAAI,GAJR,UAOE,cAAC,GAAD,CAAa3a,QAASA,EAAtB,SACE,cAAC4a,GAAA,EAAD,CAAQhF,IAAK5V,EAAQkJ,MAAO2M,IAAK7V,EAAQsJ,cAE3C,cAAC,GAAD,CAAatJ,QAASA,EAAtB,SACE,cAACtC,EAAA,EAAD,CAAYhE,GAAI,CAAEoD,GAAI,KAAOa,QAAQ,YAAYpD,MAAM,eAAvD,SACGyF,EAAQkJ,aAOnB,SAASkR,GACPC,EACAC,GAEA,OAAOD,EAAUra,QAAQF,KAAOwa,EAAUta,QAAQF,GAGrCzD,WAAMke,KAAKG,GAAcN,I,mFC0BzBS,OAhDf,SAA0BrhB,GAA+B,IAC/CqU,EAAgBrU,EAAhBqU,MAAOiN,EAASthB,EAATshB,KACP/M,EAAmBgC,GAAenC,GAAgBC,IAAlDE,eACFpC,EAAW2I,KAEjB,OAAQvG,EAoBJ+M,IAAS1hB,WAAS2hB,WACpB,cAACC,GAAA,EAAD,CAAS9R,MAAM,SAASiM,aAAW,0BAAnC,SACE,cAACqB,GAAA,EAAD,CACE9c,GAAI,CACFa,MAAO,OACPJ,gBAAiB,qBACjB2D,QAAS,MACTnD,aAAc,MACd,UAAW,CACTJ,MAAO,SAGXkD,KAAK,QACLgZ,QAAS,WACP9K,EAAS8F,GAAsB5D,KAZnC,SAeE,cAAC,KAAD,CAAWnU,GAAI,CAAE+B,SAAU,kBAG7B,KAvCF,cAACuf,GAAA,EAAD,CAAS9R,MAAM,cAAciM,aAAW,cAAxC,SACE,cAACqB,GAAA,EAAD,CACE9c,GAAI,CACFa,MAAO,OACPJ,gBAAiB,qBACjB2D,QAAS,MACTnD,aAAc,MACd,UAAW,CACTJ,MAAO,SAGXkD,KAAK,QACLgZ,QAAS,WACP9K,EAAS6F,GAAmB3D,KAZhC,SAeE,cAAC,KAAD,CAAwBnU,GAAI,CAAE+B,SAAU,kB,wCCsBjCwf,OAhDf,SAAsBzhB,GAA2B,IACvCqU,EAAUrU,EAAVqU,MACAC,EAAaiC,GAAenC,GAAgBC,IAA5CC,SACFnC,EAAW2I,KAEjB,OAAQxG,EAqBN,cAACkN,GAAA,EAAD,CAAS9R,MAAM,mBAAmBiM,aAAW,mBAA7C,SACE,cAACqB,GAAA,EAAD,CACE9c,GAAI,CACFa,MAAO,OACPJ,gBAAiB,qBACjB2D,QAAS,MACTnD,aAAc,MACd,UAAW,CACTJ,MAAO,SAGXkD,KAAK,QACLgZ,QAAS,WACP9K,EAAS4F,GAAkB1D,KAZ/B,SAeE,cAAC,KAAD,CAAmBnU,GAAI,CAAE+B,SAAU,kBApCvC,cAACuf,GAAA,EAAD,CAAS9R,MAAM,iBAAiBiM,aAAW,iBAA3C,SACE,cAACqB,GAAA,EAAD,CACE9c,GAAI,CACFa,MAAO,OACPJ,gBAAiB,qBACjB2D,QAAS,MACTnD,aAAc,MACd,UAAW,CACTJ,MAAO,SAGXkD,KAAK,QACLgZ,QAAS,WACP9K,EAAS2F,GAAezD,KAZ5B,SAeE,cAAC,KAAD,CAAgBnU,GAAI,CAAE+B,SAAU,mBCxBxC,SAASyf,GAAgB1hB,GAA8B,IAC7CqU,EAAgBrU,EAAhBqU,MAAOiN,EAASthB,EAATshB,KAEf,OACE,eAACnhB,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACTuB,SAAU,WACVyc,IAAK,EACLD,MAAO,EACPwD,OAAQ,MACR9d,IAAK,OAPT,UAUE,cAAC,GAAD,CAAcwQ,MAAOA,IACrB,cAAC,GAAD,CAAkBA,MAAOA,EAAOiN,KAAMA,OAK5C,SAASV,GACPC,EACAC,GAEA,OACED,EAAUS,OAASR,EAAUQ,MAC7BT,EAAUxM,MAAM/N,KAAOwa,EAAUzM,MAAM/N,GAI5BzD,WAAMke,KAAKW,GAAiBd,IC9B3C,SAASgB,GAAY5hB,GAA0B,IACrCqU,EAAUrU,EAAVqU,MAGR,OAFqBkC,GAAenC,GAAgBC,IAA5CC,SAGN,cAACkN,GAAA,EAAD,CAAS9R,MAAM,SAASiM,aAAW,SAAnC,SACE,cAACxb,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACTuB,SAAU,WACVkgB,OAAQ,EACRC,KAAM,EACNH,OAAQ,MACR5gB,MAAO,OACPJ,gBAAiB,qBACjB2D,QAAS,UACTnD,aAAc,MACd,UAAW,CACTJ,MAAO,SAZb,SAgBE,cAAC,KAAD,CAAgBb,GAAI,CAAE+B,SAAU,cAGlC,KAGN,SAAS2e,GACPC,EACAC,GAEA,OAAOD,EAAUxM,MAAM/N,KAAOwa,EAAUzM,MAAM/N,GAGjCzD,WAAMke,KAAKa,GAAahB,IC3BvC,SAASmB,GAAU/hB,GAAwB,IAEvCqU,EAKErU,EALFqU,MACAiN,EAIEthB,EAJFshB,KAHsC,EAOpCthB,EAHFgiB,sBAJsC,MAIrB,OAJqB,IAOpChiB,EAFFiiB,uBALsC,MAKpB,IALoB,EAMtCC,EACEliB,EADFkiB,YAEI/P,EAAW2I,KAEjB,OACE,qCACE,eAAC3a,EAAA,EAAD,CACED,GAAI,CACFyB,SAAU,WACV,mBAAoB,CAClBwgB,QAAS,GAEX,mBAAoB,CAClBA,QAAS,IAPf,UAWE,cAAChiB,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACTsU,MAAOsN,EACP1hB,OAAQ2hB,EACRG,gBAAgB,QAAD,OAAU/N,EAAMvE,UAAhB,MAEfuS,iBAAkB,YAClBC,eAAgB,WAGpB,cAACniB,EAAA,EAAD,CACED,GAAI,CACFS,gBAAiB,qBACjBgB,SAAU,WACVrB,OAAQ,OACRoU,MAAO,OACPoN,KAAM,EACN1D,IAAK,EACLyD,OAAQ,EACR1D,MAAO,EACPgE,QAAS,EACTI,WAAY,+BAEdC,UAAU,YAEZ,eAACriB,EAAA,EAAD,CACED,GAAI,CACFyB,SAAU,WACVyc,IAAK,EACL0D,KAAM,EACNK,QAAS,EACTzN,MAAO,OACPpU,OAAQ,OACRiiB,WAAY,+BAEdC,UAAU,UAVZ,UAYE,eAACriB,EAAA,EAAD,CACED,GAAI,CACFyB,SAAU,WACVyc,IAAK,MACL0D,KAAM,MACNlgB,UAAW,wBACX8S,MAAO,OACP+N,UAAW,SACXhH,YAAa,OACbiH,aAAc,QATlB,UAYE,cAAC3G,EAAA,EAAD,CACE7b,GAAI,CAAE8b,eAAgB,OAAQiF,QAAS,QACvChF,KAAM5H,EAAMzH,IACZsP,OAAO,SACPC,IAAI,WACJc,QAAS,SAAChR,GACJM,KACFN,EAAME,iBACNQ,GAAU0H,EAAMzH,KAAK,IAEvBuF,EAAS2F,GAAezD,KAV5B,SAaE,cAAC2I,GAAA,EAAD,CAAY9c,GAAI,CAAEa,MAAO,OAAQ4gB,OAAQ,IAAO1d,KAAK,QAArD,SACE,cAACud,GAAA,EAAD,CAAS9R,MAAM,kBAAkBiM,aAAW,cAA5C,SACE,cAAC,KAAD,CAAezb,GAAI,CAAE+B,SAAU,kBAIrC,cAAC+a,GAAA,EAAD,CACE9c,GAAI,CAAEa,MAAO,OAAQ4gB,OAAQ,IAC7B1d,KAAK,QACLgZ,QAAS,WACPiF,EAAY7N,GACZlC,EAAS2F,GAAezD,KAL5B,SAQE,cAACmN,GAAA,EAAD,CAAS9R,MAAM,QAAQiM,aAAW,QAAlC,SACE,cAAC,KAAD,CAAezb,GAAI,CAAE+B,SAAU,mBAIrC,cAAC0gB,GAAD,CAAYtO,MAAOA,EAAOiN,KAAMA,OAElC,cAAC,GAAD,CAAajN,MAAOA,IACpB,cAACnQ,EAAA,EAAD,CACEhE,GAAI,CACFyB,SAAU,WACVkgB,OAAQ,EACR1D,MAAO,EACPwD,OAAQ,MACR5gB,MAAO,OACPJ,gBAAiB,qBACjB2D,QAAS,UACTnD,aAAc,OAEhBgD,QAAQ,UAXV,SAaGkQ,EAAMxD,cAGX,eAAC1Q,EAAA,EAAD,CAAKyiB,GAAI,EAAGC,GAAI,EAAhB,UACE,cAACrB,GAAA,EAAD,CACE9R,MAAO2E,EAAM3E,MACboT,WAAY,IACZC,eAAgB,IAChBpH,aAAW,cAJb,SAME,cAACzX,EAAA,EAAD,CACEhE,GAAI,CACFE,QAAS,cACT4iB,gBAAiB,EACjBC,gBAAiB,WACjBxC,SAAU,UAEZyC,cAAY,EACZ/e,QAAQ,QARV,SAUGkQ,EAAM3E,UAGX,cAACxL,EAAA,EAAD,CAAY9D,QAAQ,QAAQ+D,QAAQ,UAAUpD,MAAM,gBAApD,SACGsT,EAAMpD,eAET,cAAC/M,EAAA,EAAD,CAAYC,QAAQ,UAAUpD,MAAM,gBAApC,mBACMsT,EAAMvD,MADZ,mBACuBuD,EAAMnD,wBAOrC,SAAS0P,GAAcC,EAA2BC,GAChD,OACED,EAAUS,OAASR,EAAUQ,MAC7BT,EAAUoB,kBAAoBnB,EAAUmB,iBACxCpB,EAAUmB,iBAAmBlB,EAAUkB,gBACvCnB,EAAUxM,MAAM/N,KAAOwa,EAAUzM,MAAM/N,GAI5BzD,WAAMke,KAAKgB,GAAWnB,I,UC/KtB,SAASuC,GAAcnjB,GAA4B,IAAD,EACtBA,EAAjC0U,aADuD,MAC/C,OAD+C,IACtB1U,EAAjBM,cADuC,MAC9B,IAD8B,EAG/D,OACE,qCACE,cAAC8iB,GAAA,EAAD,CAAUjf,QAAQ,cAAcuQ,MAAOA,EAAOpU,OAAQA,IACtD,eAACH,EAAA,EAAD,CAAKkjB,GAAI,GAAT,UACE,cAACD,GAAA,EAAD,IACA,cAACA,GAAA,EAAD,CAAU1O,MAAM,cCXT,SAAS4O,GAAStjB,GAAuB,IAC9CC,EAAsBD,EAAtBC,SAAa6f,EADgC,aACvB9f,EADuB,cAWrD,OACE,cAACujB,GAAA,EAAD,qCAAM9T,MAAI,GAVE,CACZ+T,IAAK,EACLC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAIsB/D,GAA1B,aACG7f,KClBP,IAKe6jB,GALA,CACbC,YAAa,CAAEP,IAAK,EAAGE,GAAI,GAC3BM,YAAa,CAAER,IAAK,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,I,qBCQ1C,SAASI,GAASjkB,GAAuB,IAC9CkkB,EAAgClkB,EAAhCkkB,UAAWC,EAAqBnkB,EAArBmkB,QAASlH,EAAYjd,EAAZid,QAE5B,OACE,cAAC9c,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACTC,cAAe,SACfuD,eAAgB,WAChB5B,SAAU,SAACtB,GAAD,OAAWA,EAAMW,QAAQ,MACnCiC,GAAI,EACJO,IAAK,GAPT,SAUGsgB,EACC,cAACnH,GAAA,EAAD,CACE9c,GAAI,CAAEI,OAAQ,IAAKa,aAAc,GACjCijB,SAAUF,EACVjgB,KAAK,QACLgZ,QAASA,EAJX,SAME,cAAC,KAAD,CAAqBhb,SAAS,cAE9B,OCqBKoiB,OAlCf,SAAuBrkB,GAA4B,IAE/CyS,EAQEzS,EARFyS,OACA6O,EAOEthB,EAPFshB,KACA4C,EAMElkB,EANFkkB,UACA5O,EAKEtV,EALFsV,YACAvG,EAIE/O,EAJF+O,WACAoV,EAGEnkB,EAHFmkB,QACAjC,EAEEliB,EAFFkiB,YACAoC,EACEtkB,EADFskB,WAEIC,EAAiB9b,KAAK+b,IAAIzV,EAAa0D,EAAOxK,OAAQqN,GAE5D,OACE,eAACnV,EAAA,EAAD,CAAKD,GAAI,CAAEE,QAAS,OAAQob,GAAI,GAAhC,UACE,eAAC+H,GAAA,EAAD,CAAMkB,WAAS,EAACpjB,QAASyiB,GAAOC,YAAatP,QAASqP,GAAOE,YAA7D,UACGvR,EAAOjD,KAAI,SAAC6E,EAAcqQ,GAAf,OACV,cAACpB,GAAD,UACE,cAAC,GAAD,CAAWjP,MAAOA,EAAOiN,KAAMA,EAAMY,YAAaA,KADrCwC,MAIhBR,GAAaK,EAAiB,EAC3BI,MAAM9d,KAAK,IAAI8d,MAAMJ,IAAiB/U,KAAI,SAACoV,EAAGF,GAAJ,OACxC,cAACpB,GAAD,UACE,cAACH,GAAD,KADauB,MAIjB,QAEN,cAACT,GAAD,CAAUC,UAAWA,EAAWC,QAASA,EAASlH,QAASqH,QC/BjE,SAASO,GAAgB7kB,GAA8B,IAC7CwG,EAA2DxG,EAA3DwG,QAASiM,EAAkDzS,EAAlDyS,OAAQxC,EAA0CjQ,EAA1CiQ,MAAOiU,EAAmClkB,EAAnCkkB,UAAWnV,EAAwB/O,EAAxB+O,WAAe+Q,EADN,aACe9f,EADf,uDAE9C8kB,EAAYZ,GAAazR,EAAOxK,OAAS,EACzC8c,EAAc9U,EAAQlB,EACtBoV,EACJ1R,EAAOxK,OAAS,IAAOic,GAAaa,GAAgBA,GAEtD,OAAOD,EACL,eAAC3kB,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACTC,cAAe,SACf8gB,GAAI,GAJR,UAOE,cAAC,GAAD,CAAc3a,QAASA,IACvB,cAAC,GAAD,aACEiM,OAAQA,EACRyR,UAAWA,EACXnV,WAAYA,EACZoV,QAASA,GACLrE,OAGN,KAGN,SAASc,GACPC,EACAC,GAEA,OACED,EAAUS,OAASR,EAAUQ,MAC7BT,EAAUra,QAAQF,KAAOwa,EAAUta,QAAQF,IAC3Cua,EAAU5Q,QAAU6Q,EAAU7Q,OAC9B4Q,EAAUqD,YAAcpD,EAAUoD,WAClCrD,EAAUvL,cAAgBwL,EAAUxL,aACpCuL,EAAU9R,aAAe+R,EAAU/R,YACnCkK,KAAKC,UAAU2H,EAAUpO,OAAOjD,KAAI,qBAAGlJ,SACrC2S,KAAKC,UAAU4H,EAAUrO,OAAOjD,KAAI,qBAAGlJ,OAI9BzD,WAAMke,KAAK8D,GAAiBjE,ICmB5BoE,OA7Df,SAAyBhlB,GAA8B,IAEnDwG,EAQExG,EARFwG,QACA6J,EAOErQ,EAPFqQ,eAHkD,EAUhDrQ,EANFilB,yBAJkD,MAI9B,GAJ8B,IAUhDjlB,EALFqS,qBALkD,SAMlDC,EAIEtS,EAJFsS,mBACA4S,EAGEllB,EAHFklB,QACAvH,EAEE3d,EAFF2d,SACGmC,EAT+C,aAUhD9f,EAVgD,8GAW5BmW,mBAAS,GAXmB,mBAW7CgP,EAX6C,KAWvCC,EAXuC,OAYxB5Q,GAAQsP,GAAOE,aAAnC1O,mBAZ4C,MAY9B,EAZ8B,EAa9CvG,EAAauG,EAAc6P,EAbmB,EAcLrS,GAC7C,CACEtM,UACA6J,iBACAtB,aACAsD,gBACAC,sBAEF,CACEoE,KAAsB,IAAhBpB,IATFzD,EAd4C,EAc5CA,KAAMpF,EAdsC,EActCA,MAAOyX,EAd+B,EAc/BA,UAAWvN,EAdoB,EAcpBA,WAY1BlE,GACA,OAAJZ,QAAI,IAAJA,OAAA,EAAAA,EAAMtC,MAAM5I,QAAO,SAAC0N,GAAD,OAAY4Q,EAAkBhR,SAASI,EAAM/N,SAAQ,GACpE2J,GAAY,OAAJ4B,QAAI,IAAJA,OAAA,EAAAA,EAAM5B,QAAS,EAmB7B,OAbA+G,qBAAU,WACJvK,GAASyY,GACXA,EAAQzY,KAET,CAACA,EAAOyY,IAEXlO,qBAAU,YACHL,GAAc9E,GAAQ8L,GACzBA,EAAS,CAAEnX,UAAS+I,MAAOkD,EAAQxC,YAGpC,CAAC0G,EAAYgH,EAAUlL,IAGxB,cAAC,GAAD,aACEjM,QAASA,EACTiM,OAAQA,EACRxC,MAAOA,EACPiU,UAAWA,GAAavN,EACxBrB,YAAaA,EACbvG,WAAYA,EACZuV,WAzBmB,WACrBc,EAAQD,EAAO,KAyBTrF,KChCKuF,OAhCf,SAA4BrlB,GAAiC,IACnDwG,EAAYxG,EAAZwG,QACF6H,EAAWkI,GAAe0E,IAC1BxI,EAAS8D,GAAe9C,GAAoBjN,IAHQ,EAKxD6H,EAASnJ,2BADHC,EAJkD,EAIlDA,iBAAkBC,EAJgC,EAIhCA,qBAEpB6f,EAAoBniB,mBACxB,wCACMqC,EACAsN,EAAO9L,QAAO,qBAAG4L,MAAkB4B,UAAQ3E,KAAI,qBAAGlJ,MAClD,IAHN,aAIMlB,EACAqN,EAAO9L,QAAO,qBAAG4L,MAAkBoB,gBAAcnE,KAAI,qBAAGlJ,MACxD,OAEN,CAACmM,EAAQtN,EAAkBC,IAEvBiL,EAAiB9F,GACrB8D,EAASrJ,uBACTwR,cAEF,OACE,cAAC,GAAD,aACEnG,eAAgBA,EAChB4U,kBAAmBA,EACnB5S,cAAe9F,GACf+F,mBAAoB,CAAEkF,QAAQ,IAC1BxX,KCqBKslB,OA5Cf,SAAgCtlB,GAAqC,IAC3DwG,EAAkCxG,EAAlCwG,QAAS0e,EAAyBllB,EAAzBklB,QAAShD,EAAgBliB,EAAhBkiB,YADwC,EAE1C/L,mBAAS,GAFiC,mBAE3DgP,EAF2D,KAErDC,EAFqD,OAGtC5Q,GAAQsP,GAAOE,aAAnC1O,mBAH0D,MAG5C,EAH4C,EAK5D3E,EADmB4F,GAAe7C,GAAuBlN,IAClCgJ,KAAI,qBAAGlJ,MAC9B2J,EAAQU,EAAI1I,OACZ8G,EAAatG,KAAK+b,IAAIvU,EAAOqF,EAAc6P,GAPiB,EAQnBvS,GAC7C,CACEjC,MACA5B,WAAYtG,KAAK8c,IAAIxW,EAAYuG,IAEnC,CACEoB,KAAsB,IAAhBpB,IANFzD,EAR0D,EAQ1DA,KAAMpF,EARoD,EAQpDA,MAAOyX,EAR6C,EAQ7CA,UAAWvN,EARkC,EAQlCA,WAS1BlE,IAAc,OAAJZ,QAAI,IAAJA,OAAA,EAAAA,EAAMtC,QAAS,IAAI5I,QAAO,SAAC0N,GAAD,OAAW1D,EAAIsD,SAASI,EAAM/N,OAYxE,OANA0Q,qBAAU,WACJvK,GAASyY,GACXA,EAAQzY,KAET,CAACA,EAAOyY,IAGT,cAAC,GAAD,CACE5D,KAAM1hB,WAAS2hB,WACf/a,QAASA,EACTiM,OAAQA,EACRxC,MAAOA,EACPiU,UAAWA,GAAavN,EACxBrB,YAAaA,EACbvG,WAAYA,EACZuV,WAnBmB,WACrBc,EAAQD,EAAO,IAmBbjD,YAAaA,KCrCnB,SAASsD,GAAgBxlB,GAA8B,IAC7CshB,EAAmDthB,EAAnDshB,KAAMtO,EAA6ChT,EAA7CgT,SAAUkS,EAAmCllB,EAAnCklB,QAASvH,EAA0B3d,EAA1B2d,SAAUuE,EAAgBliB,EAAhBkiB,YACrC2C,EAAkB/hB,mBAAQ,WAC9B,OAAQwe,GACN,KAAK1hB,WAAS2hB,WACZ,OAAO+D,GACT,KAAK1lB,WAAS6lB,OACZ,OAAOJ,GACT,QACE,OAAOL,MAEV,CAAC1D,IAEJ,OACE,cAACnhB,EAAA,EAAD,CACED,GAAI,CACFM,SAAU,EACVJ,QAAS,OACTC,cAAe,SACfogB,SAAU,OACV7E,GAAI,EACJyH,GAAI,GAPR,SAUGrQ,EAASxD,KAAI,SAAChJ,EAAkBke,GAAnB,OACZ,cAACG,EAAD,CAEEvD,KAAMA,EACN9a,QAASA,EACT0e,QAASA,EACTvH,SAAUA,EACVuE,YAAaA,GALRwC,QAYf,SAAS9D,GACPC,EACAC,GAEA,OACED,EAAUS,OAASR,EAAUQ,MAC7BrI,KAAKC,UAAU2H,EAAU7N,SAASxD,KAAI,qBAAGlJ,SACvC2S,KAAKC,UAAU4H,EAAU9N,SAASxD,KAAI,qBAAGlJ,OAIhCzD,WAAMke,KAAKyE,GAAiB5E,I,+BCzD5B,SAAS8E,GAAW1lB,GACjC,IAAMqa,EAAM9D,GAAe4E,IACrBwK,EAAUC,cAEhB,OAAOvL,EAAI7B,OACT,eAACrY,EAAA,EAAD,CACED,GAAI,CACFM,SAAU,EACVJ,QAAS,OACTC,cAAe,SACfmB,WAAY,SACZoC,eAAgB,UANpB,UASE,cAACM,EAAA,EAAD,CACEhE,GAAI,CAAEuiB,UAAW,SAAUxgB,SAAU,WAAY6Z,GAAI,GACrD3X,QAAQ,QACRpD,MAAM,iBAHR,6EAOA,eAAC8kB,GAAA,EAAD,CACE3lB,GAAI,CAAE8f,cAAe,cACrB7b,QAAQ,YACRpD,MAAM,YACNkc,QAAS,WACP0I,EAAQlf,KAAK,cALjB,UAQE,cAAC,KAAD,CAAsBvG,GAAI,CAAE+B,SAAU,UAAW6jB,GAAI,MARvD,qBAYA,KClBN,SAASC,GAAS/lB,GAAuB,IAC/BgmB,EAAuBhmB,EAAvBgmB,IAAKC,EAAkBjmB,EAAlBimB,cADyB,EAEZ9P,mBAAS,MAFG,mBAE/B1J,EAF+B,KAExByZ,EAFwB,OAGA/P,mBAA0B,MAH1B,mBAG/BgQ,EAH+B,KAGlBC,EAHkB,KAIhCpT,EAAWuD,GAAetD,IAC1BoT,EAAetP,iBAAsB,IA+B3C,OAAOtK,EACL,cAAC,GAAD,CAAOA,MAAOA,EAAOiQ,UAAQ,IAE7B,qCACG1J,EAAS/K,OAAS,EACjB,cAAC,GAAD,CACEqZ,KAAM0E,EACNhT,SAAUA,EACVkS,QA7BY,SAACoB,GACnBJ,EAASI,IA6BH3I,SA1Ba,SAAC9L,GACpB,GAAIoU,IACFI,EAAapP,QAAQxQ,KAAKoL,GACtBwU,EAAapP,QAAQhP,SAAW+K,EAAS/K,QAAQ,CACnD,IAAMse,EAAQF,EAAapP,QAAQjC,QACjC,SAACwR,EAAKC,GAAN,YAAe,CACbC,UAAWF,EAAIE,YAAa,UAAAD,EAAIlX,aAAJ,eAAWtH,SAAU,GACjDgI,MAAOuW,EAAIvW,OAASwW,EAAIxW,OAAS,MAEnC,CAAEyW,UAAW,EAAGzW,MAAO,IAEzBgW,EAAcD,EAAKO,GACnBF,EAAapP,QAAU,KAerBiL,YAvCgB,SAAC7N,GACvB+R,EAAe/R,MAyCX,cAACqR,GAAD,IAEF,cAAC,GAAD,CACEnJ,OAAQ4J,EACR9R,MAAO8R,EACPvJ,QA3CyB,WAC7BwJ,EAAe,YAgDJvjB,WAAMke,KAAKgF,I,sGCnE1B,SAASY,GAAmB3mB,GAAiC,IACnDuc,EAA+Bvc,EAA/Buc,KAAM7M,EAAyB1P,EAAzB0P,MAAOrN,EAAkBrC,EAAlBqC,KAAMua,EAAY5c,EAAZ4c,QAMrB0D,EAAc,WAClB1D,GAAQ,IAGV,OACE,eAAC4D,GAAA,EAAD,CAAQjE,KAAMA,EAAMK,QAAS0D,EAA7B,UACE,eAACI,GAAA,EAAD,WACE,cAACkG,GAAA,EAAD,CAAa1mB,GAAI,CAAE0b,GAAI,EAAGyH,GAAI,GAA9B,SAAoC3T,IACpC,cAACmX,GAAA,EAAD,UAAoBxkB,OAEtB,eAACykB,GAAA,EAAD,CAAe5mB,GAAI,CAAE0b,GAAI,EAAGuF,GAAI,GAAhC,UACE,cAAC0E,GAAA,EAAD,CAAQ9kB,MAAM,UAAUkc,QAASqD,EAAayG,WAAS,EAAvD,oBAGA,cAAClB,GAAA,EAAD,CAAQ9kB,MAAM,UAAUoD,QAAQ,YAAY8Y,QAlB5B,WACpBL,GAAQ,IAiBJ,2BAQR,SAASgE,GACPC,EACAC,GAEA,OAAOD,EAAUtE,OAASuE,EAAUvE,KAGvB1Z,WAAMke,KAAK4F,GAAoB/F,ICrDvC,SAASoG,GAAaC,EAAYC,GACvC,GAAKC,OAAOzZ,UAAkB0Z,iBAE3BD,OAAOzZ,UAAkB0Z,iBAAiBH,EAAMC,OAC5C,CAEL,IAAMtV,EAAIyV,SAASC,cAAc,KAC/B1a,EAAM2a,IAAIC,gBAAgBP,GAC5BrV,EAAEqK,KAAOrP,EACTgF,EAAE6V,SAAWP,EACbG,SAASK,KAAKC,YAAY/V,GAC1BA,EAAEgW,QACF9b,YAAW,WACTub,SAASK,KAAKG,YAAYjW,GAC1BuV,OAAOI,IAAIO,gBAAgBlb,KAC1B,ICkIQmb,OAvHf,SAA+B/nB,GAC7B,IAAMgoB,EAAmBzR,GAAe7C,MAClCuU,EAAc1R,GAAerC,IAC7B/B,EAAW2I,KAH+C,EAIhC3E,mBAAgC,MAJA,mBAIzD+R,EAJyD,KAI/CC,EAJ+C,KAK1D5L,EAAO6L,QAAQF,GAL2C,EAO9D/R,mBAAkC,CAChCoG,MAAM,EACN7M,MAAO,GACPrN,KAAM,GACNua,QAAS,eAXmD,mBAMzDyL,EANyD,KAMhCC,EANgC,KAkB1DhI,EAAc,WAClB6H,EAAY,OAkDd,OACE,qCACE,cAACnL,GAAA,EAAD,CACE1W,GAAG,cACHqV,aAAW,OACX4M,gBAAehM,EAAO,iBAAchH,EACpCiT,gBAAejM,EAAO,YAAShH,EAC/BkT,gBAAc,OACdxL,QA/Dc,SAAChR,GACnBkc,EAAYlc,EAAMyc,gBAwDhB,SAQE,cAAC,KAAD,MAEF,eAAC5J,GAAD,CACExY,GAAG,YACH8Y,cAAe,CACb,kBAAmB,cACnBC,OAAO,GAET6I,SAAUA,EACV3L,KAAMA,EACNK,QAAS0D,EACTnB,gBAAiB,CAAED,WAAY,QAASD,SAAU,OAClDD,aAAc,CAAEE,WAAY,QAASD,SAAU,UAVjD,UAYE,eAAC0J,GAAA,EAAD,CAAU1L,QAvEQ,WACtBqL,EAA2B,CACzB/L,MAAM,EACN7M,MAAO,oBACPrN,KAAM,iFACNua,QAAS,SAACgM,GACJA,GACFzW,EAASiG,MAEXkQ,GAA2B,SAAC1iB,GAAD,mBAAC,eACvBA,GADsB,IAEzB2W,MAAM,UAIZ+D,KAwDI,UACE,cAACld,EAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAAC9B,EAAA,EAAD,mCAED2mB,EAAc,EACb,eAACU,GAAA,EAAD,CAAU1L,QA5DS,WACzBqL,EAA2B,CACzB/L,MAAM,EACN7M,MAAO,uBACPrN,KAAM,oFACNua,QAAS,SAACgM,GACJA,GACFzW,EAASiG,GAAoB,CAAEC,YAAY,KAE7CiQ,GAA2B,SAAC1iB,GAAD,mBAAC,eACvBA,GADsB,IAEzB2W,MAAM,UAIZ+D,KA6CM,UACE,cAACld,EAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAAC9B,EAAA,EAAD,sCAEA,KACJ,eAACqnB,GAAA,EAAD,CAAU1L,QAjDK,WACnB,IAAMxK,EAASuV,EAAiBxY,KAAI,SAAC6E,GAAD,mBAAC,eAChCA,GAD+B,IAElCzH,IAAI,mCAAD,OAAqCyH,EAAM/N,SAE1CuL,EAAOoH,KAAKC,UAAUzG,EAAQ,KAAM,GAE1CuU,GADa,IAAI6B,KAAK,CAAChX,GAAO,CAAE1C,KAAM,cACnB,2BACnBmR,KAyCI,UACE,cAACld,EAAA,EAAD,UACE,cAAC,KAAD,MAEF,cAAC9B,EAAA,EAAD,2BAGJ,cAAC,GAAD,eAAwB+mB,Q,yCC/BfS,OA1Ff,SAA2B9oB,GACzB,IAAMqO,EAAWkI,GAAe0E,IAC1B9I,EAAW2I,KAFuC,EAGxB3E,mBAAgC,MAHR,mBAGjD+R,EAHiD,KAGvCC,EAHuC,KAIlD5L,EAAO6L,QAAQF,GAJmC,EAMtD7Z,EAASnJ,2BADHC,EALgD,EAKhDA,iBAAkBC,EAL8B,EAK9BA,qBAEpB2jB,EAAoBjmB,mBAAQ,WAIhC,OAHgBuW,OAAOvE,KACrBzG,EAASnJ,4BAEI8P,QACb,SAACwR,EAAKC,GAAN,OAAcpY,EAASnJ,2BAA2BuhB,IAAQD,KAC1D,KAED,CAACnY,EAASnJ,6BA0Bb,OACE,qCACE,cAAC8X,GAAA,EAAD,CACE1W,GAAG,cACHqV,aAAW,OACX4M,gBAAehM,EAAO,iBAAchH,EACpCiT,gBAAejM,EAAO,YAAShH,EAC/BkT,gBAAc,OACdxL,QAhCc,SAAChR,GACnBkc,EAAYlc,EAAMyc,gBAyBhB,SAQE,cAAC,KAAD,MAEF,eAAC5J,GAAD,CACExY,GAAG,YACH8Y,cAAe,CACb,kBAAmB,cACnBC,OAAO,GAET6I,SAAUA,EACV3L,KAAMA,EACNK,QAxCc,WAClBuL,EAAY,OAwCRhJ,gBAAiB,CAAED,WAAY,QAASD,SAAU,OAClDD,aAAc,CAAEE,WAAY,QAASD,SAAU,UAVjD,UAYE,eAAC0J,GAAA,EAAD,CAAU1L,QAxCiB,WAC/B9K,EACEnM,GAA8B,CAC5Bb,kBAAmBA,MAqCnB,UACE,cAAC/B,EAAA,EAAD,UACG+B,EACC,cAAC,KAAD,KAEC4jB,GAAqB,cAAC,KAAD,MAG1B,cAACznB,EAAA,EAAD,sCAEF,eAACqnB,GAAA,EAAD,CAAU1L,QA1CqB,WACnC9K,EACEnM,GAA8B,CAC5BZ,sBAAuBA,MAuCvB,UACE,cAAChC,EAAA,EAAD,UACGgC,EACC,cAAC,KAAD,KAEC2jB,GAAqB,cAAC,KAAD,MAG1B,cAACznB,EAAA,EAAD,kDCzFV,SAAS0nB,GAAWhpB,GAAyB,IACnCgmB,EAAkDhmB,EAAlDgmB,IAAKiD,EAA6CjpB,EAA7CipB,kBAAmBC,EAA0BlpB,EAA1BkpB,sBAC1B9N,EAAgB7E,GAAelD,IAErC,OAAQ2S,GACN,KAAKpmB,WAAS6lB,OACZ,OAAOrK,EAAgB,GAAK6N,EAAoB,EAC9C,cAAC,GAAD,IACE,KACN,KAAKrpB,WAAS2hB,WACZ,OAAOnG,EAAgB,GAAK8N,EAAwB,EAClD,cAAC,GAAD,IACE,KACN,QACE,OAAO,MAIErmB,WAAMke,KAAKiI,IClBnB,SAASG,GAAKnpB,GACnB,IAAMqO,EAAWkI,GAAe0E,IADK,EAEH9E,mBAAS9H,EAAS1J,aAFf,mBAE9BykB,EAF8B,KAEnBC,EAFmB,OAGalT,mBAChD,CACEuQ,UAAW,EACXzW,MAAO,IAN0B,mBAG9BgZ,EAH8B,KAGXK,EAHW,KAS/BJ,EAAwB3S,GAAezC,IAE7CkD,qBAAU,WACJoS,IAAc/a,EAAS1J,aACzB0kB,EAAahb,EAAS1J,eAGvB,CAAC0J,EAAS1J,cAYb,OACE,eAAC5E,EAAD,WACE,eAACI,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACToB,WAAY,SACZ+nB,aAAc,EACd/kB,YAAa,UACbX,IAAK,EACL+X,GAAI,GAPR,UAUE,eAAC4N,EAAA,EAAD,CACEtpB,GAAI,CAAEM,SAAU,EAAG6iB,GAAI,GACvBxK,MAAOuQ,EACPzL,SAzBgB,SAAC1R,EAAwB4M,GAC/CwQ,EAAaxQ,IAyBP8C,aAAW,OAJb,UAME,cAAC,GAAD,CAAKkE,MAAM,MAAMhH,MAAOjZ,WAASgF,MACjC,cAAC,GAAD,CACEib,MAAM,SACNhH,MAAOjZ,WAAS6lB,OAChBnjB,MAAO2mB,EAAkBvC,YAE3B,cAAC,GAAD,CACE7G,MAAM,cACNhH,MAAOjZ,WAAS2hB,WAChBjf,MAAO4mB,OAGX,cAAC,GAAD,CACElD,IAAKoD,EACLH,kBAAmBA,EAAkBhZ,MACrCiZ,sBAAuBA,OAG3B,cAAC,GAAD,CAAUlD,IAAKoD,EAAWnD,cA1CJ,SAACD,EAAeO,GACpCP,IAAQpmB,WAAS6lB,QACnB6D,EAAqB/C,S,qHC7B3B,SAASkD,GAAezpB,GAA6B,IAC3CwG,EAAYxG,EAAZwG,QAER,OACE,cAACkjB,GAAA,EAAD,CAAM3M,IAAI,EAAV,SACE,cAAChB,EAAA,EAAD,CACE7b,GAAI,CAAE8b,eAAgB,QACtBC,KAAMzV,EAAQoG,IACdsP,OAAO,SACPC,IAAI,WAJN,SAME,cAACiF,GAAA,EAAD,CACElhB,GAAI,CACFwU,MAAO,GACPpU,OAAQ,IAEV8b,IAAK5V,EAAQkJ,MACb2M,IAAK7V,EAAQsJ,UACb6L,aAAW,gBAOrB,SAASiF,GACPC,EACAC,GAEA,OACED,EAAUra,QAAQkJ,QAAUoR,EAAUta,QAAQkJ,OAC9CmR,EAAUra,QAAQsJ,YAAcgR,EAAUta,QAAQsJ,WAClD+Q,EAAUra,QAAQoG,MAAQkU,EAAUta,QAAQoG,IAIjC/J,WAAMke,KAAK0I,GAAgB7I,ICpC1C,SAASM,GAAalhB,GAA2B,IACvCwG,EAAYxG,EAAZwG,QAER,OACE,cAACuV,EAAA,EAAD,CACE7b,GAAI,CACFa,MAAO,eACPib,eAAgB,QAElBC,KAAMzV,EAAQoG,IACdsP,OAAO,SACPC,IAAI,WAPN,SASG3V,EAAQkJ,QAKf,SAASkR,GACPC,EACAC,GAEA,OACED,EAAUra,QAAQkJ,QAAUoR,EAAUta,QAAQkJ,OAC9CmR,EAAUra,QAAQoG,MAAQkU,EAAUta,QAAQoG,IAIjC/J,WAAMke,KAAKG,GAAcN,ICrBzB,SAAS+I,GAAgB3pB,GAA8B,IAC5DwG,EAAYxG,EAAZwG,QAD2D,EAErC2P,oBAAS,GAF4B,mBAE5DyT,EAF4D,KAEnDC,EAFmD,KAG7DC,EAASvT,GtDkBY,SAAC/P,GAAD,OAC3B0M,aAAeH,IAAgB,SAACC,GAAD,OAC7BA,EAASzM,MAAK,qBAAGD,KAAgBE,EAAQF,SsDpBbyjB,CAAcvjB,IACtC2L,EAAW2I,KAEjB,OACE,cAAC3a,EAAA,EAAD,CAAKD,GAAI,CAAEE,QAAS,QAApB,SACE,cAAC4pB,GAAA,EAAD,CACEC,UAAW,EACX/pB,GAAI,CACFM,SAAU,EACV4D,QAAS,eAJb,SAOE,cAAC8lB,GAAA,EAAD,CACEhqB,GAAI,CACFmjB,GAAI,IACJ7H,GAAI,EACJoH,GAAI,EACJ,yBAA0B,CACxB3gB,SAAU,WACV6Z,GAAI,KAEN,0BAA2B,CACzBqO,UAAW,SACX7mB,GAAI,IAGR8mB,OAAQ,cAAC,GAAD,CAAgB5jB,QAASA,IACjCX,OACE,cAAC2b,GAAA,EAAD,CACE9R,MAAOoa,EAAUF,EAAU,iBAAmB,GAAM,cACpDS,UAAU,OACVC,OAAK,EAHP,SAKE,cAACtN,GAAA,EAAD,CACE9c,GAAE,aACAqE,OAAQ,EACRge,WAAY,SAAC7hB,GAAD,OACVA,EAAM6pB,YAAYxd,OAAO,CACvB,QACA,mBACA,mBAEA+c,EACA,CACE1lB,QAAS,iBACTrD,MAAO,eACPyD,YAAa,iBACb,SAAU,CACRJ,QAAS,iBACTrD,MAAO,eACPyD,YAAa,kBAEf,iBAAkB,CAChBJ,QAAS,kBACTrD,MAAO,eACPohB,QAAS,KAGb,CACE3d,YAAa,qBACb,SAAU,CACRJ,QAAS,cACTrD,MAAO,iBACPyD,YAAa,oBAIvBP,KAAK,QACL0X,aAAW,MACXyI,SAAU0F,IAAWF,EACrB3M,QAAS,WAEP9K,GADe2X,EAASpjB,GAAgBL,IACxBG,IAChBqjB,GAAW,IAEb1mB,eAAa,EA1Cf,SA4CE,cAAC,KAAD,QAINuM,MAAO,cAAC,GAAD,CAAclJ,QAASA,IAC9BgkB,UAAWhkB,EAAQqJ,kBCzFd,SAAS4a,GAAezqB,GAA6B,IAC1D0qB,EAAW1qB,EAAX0qB,OADyD,EAE9B/X,GACjC,CAAElN,KAAMilB,GACR,CAAEhU,KAAiB,KAAXgU,IAFF7Y,EAFyD,EAEzDA,KAAMpF,EAFmD,EAEnDA,MAAOyX,EAF4C,EAE5CA,UAIfyG,GAAc,OAAJ9Y,QAAI,IAAJA,OAAA,EAAAA,EAAMtC,QAAS,GAE/B,OAAO9C,EACL,cAAC,GAAD,CAAOA,MAAOA,EAAOiQ,UAAQ,IAC3BwH,EACF,cAACrF,GAAD,CAAa1a,QAAQ,kBAErB,cAACymB,GAAA,EAAD,CAAO1qB,GAAI,CAAE0b,GAAI,EAAG6E,SAAU,QAAUoK,QAAS,cAACC,GAAA,EAAD,IAAjD,SACGH,EAAQnb,KAAI,SAAChJ,EAAkBke,GAAnB,OACX,cAACiF,GAAD,CAA6BnjB,QAASA,GAAhBke,Q,uHCPf,SAASqG,GAAoB/qB,GAAkC,IACpEuc,EAA2Bvc,EAA3Buc,KAAM/V,EAAqBxG,EAArBwG,QAASoW,EAAY5c,EAAZ4c,QAMjB0D,EAAc,WAClB1D,GAAQ,IAGV,OACE,eAAC4D,GAAA,EAAD,CAAQjE,KAAMA,EAAMK,QAAS0D,EAA7B,UACE,cAACI,GAAA,EAAD,UACE,eAACvgB,EAAA,EAAD,CAAKD,GAAI,CAAEE,QAAS,QAApB,UACE,cAAC,GAAD,CAAgBoG,QAASA,IACzB,eAACrG,EAAA,EAAD,CACED,GAAI,CACFM,SAAU,EACVJ,QAAS,OACTC,cAAe,SACfub,GAAI,GALR,UAQE,eAACgL,GAAA,EAAD,CAAa1mB,GAAI,CAAE0b,GAAI,EAAGyH,GAAI,GAA9B,oBACU7c,EAAQkJ,MADlB,kBAGA,cAACmX,GAAA,EAAD,yEAMN,eAACC,GAAA,EAAD,CAAe5mB,GAAI,CAAE0b,GAAI,EAAGuF,GAAI,GAAhC,UACE,cAAC0E,GAAA,EAAD,CAAQ9kB,MAAM,UAAUkc,QAASqD,EAAayG,WAAS,EAAvD,oBAGA,cAAClB,GAAA,EAAD,CAAQ9kB,MAAM,UAAUoD,QAAQ,YAAY8Y,QAlC5B,WACpBL,GAAQ,IAiCJ,2BC5CR,SAASoO,GAAehrB,GAA6B,IAC3CwG,EAAmCxG,EAAnCwG,QAASykB,EAA0BjrB,EAA1BirB,aAAcrO,EAAY5c,EAAZ4c,QACzBzK,EAAW2I,KAEjB,OACE,cAACiQ,GAAD,CACExO,KAAuB,mBAAjB0O,EACNzkB,QAASA,EACToW,QAAS,SAACgM,GACJA,GACFzW,EAASzL,GAAcF,IAEzBoW,OAMR,SAASgE,GACPC,EACAC,GAEA,OACED,EAAUoK,eAAiBnK,EAAUmK,cACrCpK,EAAUra,QAAQF,KAAOwa,EAAUta,QAAQF,GAIhCzD,WAAMke,KAAKiK,GAAgBpK,ICnB1C,SAASsK,GAAelrB,GAA6B,IAAD,EAC1CwG,EAAYxG,EAAZwG,QAD0C,EAElB2P,mBAAgC,MAFd,mBAE3C+R,EAF2C,KAEjCC,EAFiC,OAGVhS,mBAA2B,MAHjB,mBAG3C8U,EAH2C,KAG7BE,EAH6B,KAI5ChZ,EAAW2I,KACXsQ,EAAahD,QAAQF,GAMrBmD,EAAkB,WACtBlD,EAAY,OAYd,OACE,qCACE,cAACnL,GAAA,EAAD,CAAYrB,aAAW,WAAWsB,QAnBd,SAAChR,GACvBkc,EAAYlc,EAAMyc,gBAkBhB,SACE,cAAC,KAAD,MAEF,eAAC5J,GAAD,CACEoJ,SAAUA,EACV3L,KAAM6O,EACNxO,QAASyO,EAHX,UAKE,cAAC1C,GAAA,EAAD,CACE1L,QAAS,WACP9K,EAASjL,GAA2BV,IACpC6kB,KAEFloB,eAAa,EALf,UAOG,UAAAqD,EAAQW,qBAAR,eAAuBC,YACtB,qCACE,cAAC,KAAD,IADF,0BAKA,qCACE,cAAC,KAAD,IADF,6BAMJ,cAAC0jB,GAAA,EAAD,CAAS5qB,GAAI,CAAEme,GAAI,MACnB,cAACsK,GAAA,EAAD,CACE1L,QAAS,WACP9K,EAASpL,GAAcP,IACvB6kB,KAEFloB,eAAa,EALf,SAOGqD,EAAQS,SACP,qCACE,cAAC,KAAD,IADF,YAKA,qCACE,cAAC,KAAD,IADF,YAMJ,eAAC0hB,GAAA,EAAD,CACEzoB,GAAI,CAAEa,MAAO,gBACbkc,QA5DkB,WACxBkO,EAAgB,kBAChBE,KA2DMloB,eAAa,EAHf,UAKE,cAAC,KAAD,CAA2Bqf,UAAU,kBALvC,eASF,cAAC,GAAD,CACEhc,QAASA,EACTykB,aAAcA,EACdrO,QAjEqB,WACzBuO,EAAgB,YAsEpB,SAASvK,GACPC,EACAC,GAEA,OACE7H,KAAKC,UAAU2H,EAAUra,WAAayS,KAAKC,UAAU4H,EAAUta,SAIpD3D,WAAMke,KAAKmK,GAAgBtK,I,qBCnH3B,SAAS0K,GAAWtrB,GACjC,OACE,cAACgd,GAAA,EAAD,yBACE9c,GAAI,CAAE4D,OAAQ,OAAQgiB,GAAI,KAC1BnK,aAAW,eACP3b,GAHN,aAKE,cAAC,KAAD,OCIN,IAkEeurB,GAlEK1oB,IAAME,YACxB,SAAC/C,EAAyBiD,GAA0C,IAC1DuD,EAA2DxG,EAA3DwG,QAASglB,EAAkDxrB,EAAlDwrB,UAAWC,EAAuCzrB,EAAvCyrB,eAAgBC,EAAuB1rB,EAAvB0rB,UAAc5L,EADO,aACE9f,EADF,sDAG3D2rB,EAAa9oB,IAAMC,SACvB,kBACE,cAACknB,GAAA,EAAD,CAAMC,UAAW,EAAG/pB,GAAI,CAAEM,SAAU,EAAG4D,QAAS,eAAhD,SACE,cAAC8lB,GAAA,EAAD,CACEhqB,GAAE,aACAmjB,GAAI,IACJ7H,GAAI,EACJoH,GAAI,EACJ,yBAA0B,CACxB3gB,SAAU,WACV6Z,GAAI,KAEN,0BAA2B,CACzBxY,GAAI,IAEFkD,EAAQS,SACR,CACE,0BAA2B,CACzBkb,QAAS,IAEX,2BAA4B,CAC1BnG,eAAgB,eAChBmG,QAAS,KAGb,IAENiI,OAAQ,cAAC,GAAD,CAAgB5jB,QAASA,IACjCX,OAAQ,cAAC,GAAD,CAAgBW,QAASA,IACjCkJ,MAAO,cAAC,GAAD,CAAclJ,QAASA,IAC9BgkB,UAAWhkB,EAAQqJ,kBAIzB,CAACrJ,IAGH,OACE,6CAAKvD,IAAKA,GAAS6c,GAAnB,aACE,cAAC8L,GAAA,EAAD,CAAO3B,UAAWuB,EAAY,EAAI,EAAlC,SACE,eAACrrB,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACToB,WAAY,SACZ4C,QAAS,sBAJb,UAOGonB,EACC,cAACF,GAAD,IAEA,cAACxO,GAAA,EAAD,CAAUC,GAAI0O,EAAgBI,YAAY,aAA1C,SACE,cAACP,GAAD,eAAgBI,MAGnBC,a,SCtEE,SAASG,GAAc9rB,GAA0B,IACtDwG,EAAqBxG,EAArBwG,QAAYsZ,EADyC,aAChC9f,EADgC,eAUzD+rB,aAAY,CACdzlB,GAAIE,EAAQF,GACZuL,KAAM,CAAErL,aATRwlB,EAH2D,EAG3DA,WACAN,EAJ2D,EAI3DA,UACAO,EAL2D,EAK3DA,WACArqB,EAN2D,EAM3DA,UACA2gB,EAP2D,EAO3DA,WACA2J,EAR2D,EAQ3DA,WAOIC,EAAQ,CACZ5J,WAhB2D,EAS3D6J,UAOwB7J,EAAa,OACrCJ,QAAS+J,EAAa,GAAM,EAC5BtqB,UAAWyqB,KAAIC,UAAU/e,SAAS3L,IAGpC,OACE,cAAC,GAAD,yBACEqB,IAAKgpB,EACLzlB,QAASA,EACT2lB,MAAOA,EACPT,UAAWA,GACPM,GACAlM,I,uBCLV,SAASyM,GAAYvsB,GAA0B,IACrCgT,EAA8BhT,EAA9BgT,SAAUwZ,EAAoBxsB,EAApBwsB,gBAD0B,EAEArW,mBAA4B,MAF5B,mBAErCsW,EAFqC,KAErBC,EAFqB,KAGtCva,EAAW2I,KAiBjB,OACE,mCACE,eAAC,KAAD,CACE6R,mBAAoBC,KACpBC,UAAW,CAACC,KAAwBC,MACpCC,YApBkB,SAAC/gB,GAA2B,IAAD,EACzCe,EAAWf,EAAXe,OACR0f,EAAiB,UAAC1f,EAAO6E,KAAKoF,eAAb,aAAC,EAAqBzQ,UAmBnCymB,UAhBgB,SAAChhB,GAAyB,IACtCe,EAAiBf,EAAjBe,OAAQkgB,EAASjhB,EAATihB,KAChB,GAAIlgB,EAAO1G,MAAP,OAAc4mB,QAAd,IAAcA,OAAd,EAAcA,EAAM5mB,IAAI,CAC1B,IAAMO,EAAOmM,EAASma,WAAU,SAACC,GAAD,OAAgBA,EAAE9mB,KAAO0G,EAAO1G,MAC1D9D,EAAKwQ,EAASma,WAAU,SAACC,GAAD,OAAgBA,EAAE9mB,MAAF,OAAS4mB,QAAT,IAASA,OAAT,EAASA,EAAM5mB,OAC7D6L,EAASvL,GAAY,CAAEC,OAAMrE,QAE/BkqB,EAAkB,OAKhB,UAME,cAAC,KAAD,CACEnd,MAAOyD,EACPqa,SAAUC,KAFZ,SAIE,cAAC1C,GAAA,EAAD,CAAO1qB,GAAI,CAAE0b,GAAI,EAAG6E,SAAU,QAAUoK,QAAS,cAACC,GAAA,EAAD,IAAjD,SACG9X,EAASxD,KAAI,SAAChJ,EAAkBke,GAAnB,OACZ,cAAC,GAAD,CAEEle,QAASA,EACTilB,eAAgBe,GAFX9H,UAOb,cAAC,KAAD,UACG+H,EACC,cAAC,GAAD,CAAajmB,QAASimB,EAAgBjB,WAAS,IAC7C,YAOd,SAAS5K,GACPC,EACAC,GAEA,OACED,EAAU2L,kBAAoB1L,EAAU0L,iBACxCvT,KAAKC,UAAU2H,EAAU7N,YAAciG,KAAKC,UAAU4H,EAAU9N,UAIrDnQ,WAAMke,KAAKwL,GAAa3L,I,qBChFxB,SAAS8E,GAAW1lB,GACjC,IAAMutB,EAAexW,iBAAmC,MAClD5E,EAAW2I,KAiBjB,OACE,eAAC3a,EAAA,EAAD,CACED,GAAI,CACFM,SAAU,EACVJ,QAAS,OACTC,cAAe,SACfmB,WAAY,SACZoC,eAAgB,UANpB,UASE,cAACM,EAAA,EAAD,CAAYC,QAAQ,KAAK+e,cAAY,EAArC,gCAGA,eAAChf,EAAA,EAAD,CACEhE,GAAI,CAAEuiB,UAAW,SAAUxgB,SAAU,YACrCkC,QAAQ,QACRpD,MAAM,iBACNmiB,cAAY,EAJd,mEAOE,uBAPF,QAUA,eAAC2C,GAAA,EAAD,CACE3lB,GAAI,CAAE8f,cAAe,cACrB7b,QAAQ,YACRpD,MAAM,YACNkc,QAAS,WAAO,IAAD,EACb,UAAAsQ,EAAatW,eAAb,SAAsB2Q,SAL1B,4BASE,cAAC,KAAD,CAAY1nB,GAAI,CAAE+B,SAAU,UAAWqB,GAAI,SAE7C,uBACE6L,KAAK,OACLlM,IAAKsqB,EACLpB,MAAO,CACL/rB,QAAS,OACTotB,WAAY,SACZ/M,SAAU,SACV/L,MAAO,EACPpU,OAAQ,GAEVmtB,OAAO,QACPxQ,QAAS,SAAChR,GACRA,EAAMyc,cAAc7P,MAAQ,IAE9B8E,SA/DiB,SAAC1R,GAA0C,IAAD,EACzDyhB,EAAI,UAAGzhB,EAAMiQ,OAAOyR,aAAhB,aAAG,EAAqB,GAClC,GAAKD,EAGL,KhBAG,SAAkBA,GACvB,OAAO,IAAIE,SAAQ,SAAUC,EAASC,GACpC,IAAMC,EAAa,IAAIC,WACvBD,EAAWE,WAAWP,EAAM,SAC5BK,EAAWG,OAAS,WAClBL,EAAQE,EAAWjc,SAErBic,EAAWI,QAAU,SAAU1hB,GAC7BqhB,EAAOrhB,QgBPP2hB,CAASV,GAAMW,MAAK,SAACC,GACnB,IAAMtb,EAAWiG,KAAKD,MAAMsV,GAC5Bnc,EAAS/L,GAAY,CAAED,KAAM6M,QAE/B,MAAOub,GACPxY,QAAQtJ,MAAM8hB,UCVb,SAASC,GAASxuB,GAAuB,IAAD,EACjBmW,mBAAS,IADQ,mBACtCuU,EADsC,KAC9B+D,EAD8B,OAECtY,oBAAS,GAFV,mBAEtCqW,EAFsC,KAErBkC,EAFqB,KAGvC1b,EAAWuD,GAAexD,IAC1B4b,EAAiBvG,QAAQsC,GAEzBkE,EAAW,WACfH,EAAU,KAaZ,OACE,eAAC1uB,EAAD,WACE,eAACI,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACToB,WAAY,SACZ+nB,aAAc,EACd/kB,YAAa,UACbX,IAAK,EACL0X,GAAI,IACJqH,GAAI,EACJpH,GAAI,GATR,UAYE,eAACrb,EAAA,EAAD,CAAKD,GAAI,CAAEM,SAAU,EAAGJ,QAAS,QAAjC,UACE,cAAC0c,GAAA,EAAD,CAAUC,GAAI4R,EAAgB9C,YAAY,aAA1C,SACE,cAACrK,GAAA,EAAD,CAAS9R,MAAM,2BAA2B2a,UAAU,SAASC,OAAK,EAAlE,SACE,cAACtN,GAAA,EAAD,CACE9c,GAAI,CAAE4lB,GAAI,EAAG1hB,QAAS,oBACtBuX,aAAW,YACXsB,QAAS2R,EAHX,SAKE,cAAC,KAAD,UAIN,cAACrR,GAAD,CACE7I,MAAO,IACP8I,YAAY,6BACZE,aAAc,IACdC,SAAU,SAAC9E,GACT4V,EAAU5V,IAEZ+E,QAASgR,EACTnR,WAAS,OAGb,cAACiM,GAAA,EAAD,CAAM3M,IAAK4R,GAAkB3b,EAAS/K,OAAS,EAA/C,SACE,cAACuZ,GAAA,EAAD,CAAS9R,MAAM,sBAAsB2a,UAAU,OAAOC,OAAK,EAA3D,SACE,cAACtN,GAAA,EAAD,CACE9c,GAAIssB,EAAkB,CAAEpoB,QAAS,mBAAsB,GACvDuX,aAAW,sBACXsB,QApDc,WACxByR,GAAoBlC,IAgDZ,SAKE,cAAC,KAAD,UAIN,cAAC9C,GAAA,EAAD,CAAM3M,IAAK4R,GAAkB3b,EAAS/K,OAAS,EAA/C,SACE,cAACuZ,GAAA,EAAD,CAAS9R,MAAM,SAAS2a,UAAU,OAAOC,OAAK,EAA9C,SACE,cAACtN,GAAA,EAAD,CAAYrB,aAAW,SAASsB,QAxDnB,WACrB,IAAMpL,EAAOoH,KAAKC,UAAUlG,EAAU,KAAM,GAE5CgU,GADa,IAAI6B,KAAK,CAAChX,GAAO,CAAE1C,KAAM,cACnB,kBAqDX,SACE,cAAC,KAAD,aAKPub,EACC,cAACD,GAAD,CAAgBC,OAAQA,IACtB1X,EAAS/K,OAAS,EACpB,cAAC,GAAD,CAAa+K,SAAUA,EAAUwZ,gBAAiBA,IAElD,cAAC,GAAD,OC7FR,IAgCetP,GAhCDjc,YAAOkc,KAAPlc,EAAkB,gBAAGP,EAAH,EAAGA,MAAH,MAAgB,CAC9CS,aAAc,EACdQ,SAAU,WACVhB,gBAAiBD,EAAME,QAAQiuB,WAAWC,QAC1CvqB,OAAO,aAAD,OACmB,UAAvB7D,EAAME,QAAQyD,KACV,sBACA,6BAENpC,SAAU,SACVyS,MAAO,OACP1S,SAAU,IACVsC,QAAS5D,EAAMW,QAAQ,EAAG,KAC1BkhB,WAAY7hB,EAAM6pB,YAAYxd,OAAO,CAAC,eAAgB,eACtD,iBAAkB,CAChBwS,UAAU,GAAD,OAAKG,aAAMhf,EAAME,QAAQ6e,UAAU3e,KAAM,KAAzC,iBACT0D,YAAa9D,EAAME,QAAQ6e,UAAU3e,MAEvC,wBAAyB,CACvBwD,QAAS,GAEX,4BAA6B,CAC3BpC,WAAYxB,EAAMW,QAAQ,KAC1B,wBAAyB,CACvBiD,QAAS5D,EAAMW,QAAQ,IAAM,GAC7B,UAAW,CACTqT,MAAO,gB,UCQAqa,GAlCA9tB,YAAO+tB,KAAP/tB,EAAkB,gBAAGP,EAAH,EAAGA,MAAH,MAAgB,CAC/CgU,MAAO,GACPpU,OAAQ,GACRgE,QAAS,EACTlE,QAAS,OACT,0BAA2B,CACzBkE,QAAS,EACTvD,MAAOL,EAAME,QAAQ+d,KAAK,KAC1B,gBAAiB,CACf/c,UAAW,mBACXb,MAAOL,EAAME,QAAQkB,OAAOC,MAC5B,uBAAwB,CACtBogB,QAAS,EACTxhB,gBAAiBD,EAAME,QAAQ6e,UAAU3e,KACzC0D,YAAa9D,EAAME,QAAQ6e,UAAU3e,QAI3C,qBAAsB,CACpB4T,MAAO,GACPpU,OAAQ,GACRif,UAAW,QAEb,qBAAsB,CACpBhb,OAAO,aAAD,OAAe7D,EAAME,QAAQ+d,KAAK,MACxCxd,aAAc,GACdghB,QAAS,EACTxhB,gBACyB,UAAvBD,EAAME,QAAQyD,KACV3D,EAAME,QAAQkB,OAAOC,MACrB,mB,UCrBKktB,GATAhuB,YAAOiuB,KAAPjuB,EAAkB,kBAAgB,CAC/CgB,SAAU,SACV,gBAAiB,CACf,qCAAsC,CACpCuC,YAJ2B,EAAG9D,MAIXE,QAAQ6e,UAAU0P,YCJrCC,GAAwB,SAAC1uB,GAAD,MAAmB,CAC/CC,gBAAiBD,EAAME,QAAQ6e,UAAU3e,KACzCC,MAAOL,EAAME,QAAQkB,OAAOC,QAYf4mB,GATE1nB,YAAOouB,KAAPpuB,EAAoB,gBAAGP,EAAH,EAAGA,MAAH,MAAgB,CACnDuB,SAAU,SACV,iBAAiB,2BACZmtB,GAAsB1uB,IAD3B,IAEE,qBAAsB0uB,GAAsB1uB,KAE9C,uBAAwB0uB,GAAsB1uB,O,8BCFjC,SAAS4uB,GAAOtvB,GAAsB,IAAD,EACHmW,oBAAS,GADN,mBAC3CoZ,EAD2C,KAC1BC,EAD0B,KAOlD,OACE,cAAC,GAAD,2BACMxvB,GADN,IAEEmP,KAAMogB,EAAkB,OAAS,WACjCE,aACE,cAACC,GAAA,EAAD,CAAgB/tB,SAAS,MAAzB,SACE,cAACqb,GAAA,EAAD,CACErB,aAAW,oBACXsB,QAZqB,WAC7BuS,GAAqBD,IAYbI,YAAa3jB,GACb4jB,KAAK,MAJP,SAMGL,EAAkB,cAAC,KAAD,IAAoB,cAAC,KAAD,WCLpC,SAASM,GAAM7vB,GAAoB,IAE9C6f,EAOE7f,EAPF6f,MACAhQ,EAME7P,EANF6P,YACA2N,EAKExd,EALFwd,YAJ6C,EAS3Cxd,EAJF8vB,eAL6C,MAKnC,GALmC,EAM7CjX,EAGE7Y,EAHF6Y,MACA1J,EAEEnP,EAFFmP,KACAwO,EACE3d,EADF2d,SAGIoS,EAAe,SACnB9jB,GAIA,GAAI0R,EAAU,CACZ,IAAM9E,EACJ1J,IAASrP,cAAYsoB,QAChBnc,EAAMiQ,OAA4B8T,QACnC/jB,EAAMiQ,OAAOrD,MACnB8E,EAAS9E,KA6Cb,OACE,eAAC1Y,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACToB,WAAY,SACZoC,eAAgB,gBAChB8Q,MAAO,OACP6G,GAAI,KANR,UASE,eAACpb,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACTC,cAAe,SACfuD,eAAgB,UAJpB,UAOE,cAACM,EAAA,EAAD,CAAYC,QAAQ,YAApB,SAAiC0b,IAChChQ,EACC,cAAC3L,EAAA,EAAD,CAAYC,QAAQ,QAAQpD,MAAM,gBAAlC,SACG8O,IAED,QA/DU,WAClB,OAAQV,GACN,KAAKrP,cAAYmwB,OACf,OACE,cAAC,GAAD,CACEpX,MAAOA,EACP2E,YAAaA,EACbG,SAAUoS,IAGhB,KAAKjwB,cAAYwvB,OACf,OACE,cAACA,GAAD,CACEzW,MAAOA,EACP2E,YAAaA,EACbG,SAAUoS,IAGhB,KAAKjwB,cAAYsoB,QACf,OACE,cAAC,GAAD,CACE4H,QAASnX,EACT8E,SAAUoS,EACV9R,WAAY,CAAE,aAAc,cAGlC,KAAKne,cAAY4b,KACf,OACE,cAAC,GAAD,CAAQ7C,MAAOA,EAAiB5U,KAAK,QAAQ0Z,SAAUoS,EAAvD,SACGD,EAAQtgB,KAAI,SAAC0gB,EAAoBxL,GAArB,OACX,cAAC,GAAD,CAAsB7L,MAAOqX,EAAOrX,MAApC,SACGqX,EAAOrQ,OADK6E,QAMvB,QACE,OAAO,MA4BRyL,M,IC5G4BC,GAAoB7sB,0CAMxC,SAAS8sB,GAAOrwB,GAAqB,IAC1CqO,EAAarO,EAAbqO,SACFgM,EAAM9D,GAAe4E,IACrBhJ,EAAW2I,KAOjB,OACE,qCACE,eAAC,GAAD,CACEyB,KAAMlC,EAAI7B,SAAWnK,EAASxJ,OAC9B4X,SAAS,UACTC,UAAQ,EACRC,UAAQ,EAJV,iEAMuD,IACrD,cAACZ,EAAA,EAAD,CACEE,KAAK,IACLlb,MAAM,YACNob,IAAI,WACJc,QAlBsB,SAAChR,GAC7BA,EAAME,iBACNgG,EAASxM,GAAY,CAAEd,OAAQurB,OAY3B,qCASF,cAAC,GAAD,CACE7T,KAAMlC,EAAI7B,QAAUnK,EAASxJ,SAAWurB,GACxC3T,SAAS,UACTC,UAAQ,EACRC,UAAQ,EAJV,qKC3BC,SAAS2T,GAAStwB,GAAuB,IAAD,EACHmW,mBAAS,MADN,mBACtCoa,EADsC,KACvBC,EADuB,KAEvCniB,EAAWkI,GAAe0E,IAC1B9I,EAAW2I,KAajB,OAXA9D,qBAAU,WACJzK,I3E6CD,SAAqBuJ,GAAkC,IAAD,uBAAb9G,EAAa,iCAAbA,EAAa,kBAC3D,OAAOxC,QAAQW,QAAQsjB,YAAY,CACjC3a,UACA9G,W2E/CEyhB,CAAY,oBAAoBpC,MAAK,SAAC5jB,GACpC,GAAIA,EAAM,CACR,IAAMlD,EAAO,IAAIsC,KAAKY,GAAMS,UAC5BslB,EAAiB5nB,GAAQuI,QAAQ5J,UAItC,IAGD,eAACxH,EAAD,WACE,cAACswB,GAAD,CAAQhiB,SAAUA,IAClB,eAACuc,GAAA,EAAD,CAAO1qB,GAAI,CAAE0b,GAAI,EAAG6E,SAAU,QAAUoK,QAAS,cAACC,GAAA,EAAD,IAAjD,UACE,cAAC+E,GAAD,CACEhQ,MAAM,eACNhH,MAAOxK,EAAS1J,YAChBgZ,SAAU,SAAChZ,GACTwN,EAASxM,GAAY,CAAEhB,kBAEzBmrB,QAAS,CACP,CACEjQ,MAAO,MACPhH,MAAOjZ,WAASgF,KAElB,CACEib,MAAO,SACPhH,MAAOjZ,WAAS6lB,QAElB,CACE5F,MAAO,cACPhH,MAAOjZ,WAAS2hB,aAGpBpS,KAAMrP,cAAY4b,OAEpB,cAACmU,GAAD,CACEhQ,MAAM,0BACNhH,MAAOxK,EAASrJ,sBAChB2Y,SAAU,SAAC3Y,GACTmN,EAASxM,GAAY,CAAEX,4BAEzB8qB,QAAS,CACP,CACEjQ,MAAO,QACPhH,MAAOhZ,kBAAgBoF,QAEzB,CACE4a,MAAO,SACPhH,MAAOhZ,kBAAgB6wB,WAEzB,CACE7Q,MAAO,SACPhH,MAAOhZ,kBAAgB8wB,YAG3BxhB,KAAMrP,cAAY4b,OAEpB,cAACmU,GAAD,CACEhQ,MAAM,YACNhH,MAAOxK,EAASvJ,SAChB6Y,SAAU,SAAC7Y,GACTqN,EAASxM,GAAY,CAAEb,eAEzBqK,KAAMrP,cAAYsoB,UAEpB,cAACyH,GAAD,CACEhQ,MAAM,mBACNhH,MAAOxK,EAAStJ,eAChB4Y,SAAU,SAAC5Y,GACToN,EAASxM,GAAY,CAAEZ,qBAEzBoK,KAAMrP,cAAYsoB,UAEnB7b,GACC,cAACsjB,GAAD,CACEhQ,MAAM,uBACNhQ,YAAW,qDAAgDzD,GACzDkM,GACA,WAFS,OAGPiY,EAAa,wBAAoBA,EAApB,KAAuC,IACxD1X,MAAOxK,EAAShJ,oBAChBsY,SAAU,SAACtY,GACT8M,EAASxM,GAAY,CAAEN,0BAEzB8J,KAAMrP,cAAYsoB,UAElB,KACJ,cAACyH,GAAD,CACEhQ,MAAM,kBACNhQ,YACE,8DAC6B,IAC3B,cAACkM,EAAA,EAAD,CACEE,KAAK,2DACLC,OAAO,SACPnb,MAAM,YACNob,IAAI,WAJN,8BAUJtD,MAAOxK,EAASxJ,OAChB8Y,SAAU,SAAC9Y,GACTsN,EAASxM,GAAY,CAAEd,aAEzBsK,KAAMrP,cAAYwvB,e,iECtHb,SAASsB,GAAO5wB,GAAqB,IAC1C6wB,EAA0B7wB,EAA1B6wB,OAAQC,EAAkB9wB,EAAlB8wB,cAEhB,OACE,eAAC5sB,EAAA,EAAD,CACEhE,GAAI,CACFE,QAAS,OACToB,WAAY,SACZoC,eAAgB,SAChBC,IAAK,IAEP9C,MAAM,iBAPR,uBASY,cAAC,KAAD,CAAqBb,GAAI,CAAEa,MAAO,UAAWkB,SAAU,MAAS,IAT5E,MAUM4uB,EACHC,EACC,cAAC/U,EAAA,EAAD,CAAME,KAAM6U,EAAe5U,OAAO,SAASC,IAAI,WAA/C,SACE,cAACa,GAAA,EAAD,CAAY9c,GAAI,CAAEygB,EAAG,GAAK1c,KAAK,QAAQ0X,aAAW,cAAlD,SACE,cAAC,KAAD,CAAY1Z,SAAS,gBAGvB,QCtBK,SAAS8uB,GAAW/wB,GAAyB,IAClDC,EAA+CD,EAA/CC,SAAU+wB,EAAqChxB,EAArCgxB,QAAS/U,EAA4Bjc,EAA5Bic,KAD8B,EACFjc,EAAtBkc,cADwB,MACf,SADe,EAGzD,OACE,cAACsF,GAAA,EAAD,CAAS9R,MAAOshB,EAAS3G,UAAU,SAASC,OAAK,EAAjD,SACE,cAACvO,EAAA,EAAD,CAAME,KAAMA,EAAMC,OAAQA,EAAQnb,MAAM,UAAUob,IAAI,WAAtD,SACGlc,M,8CCIF,SAASgxB,GAAMjxB,GACpB,OACE,cAACD,EAAD,UACE,cAACI,EAAA,EAAD,CACED,GAAI,CACFkE,QAAS,SAAC1D,GAAD,MACgB,UAAvBA,EAAME,QAAQyD,KAAmB,UAAY,eAC/C7D,SAAU,EACVJ,QAAS,OACToB,WAAY,SACZoC,eAAgB,UAPpB,SAUE,eAAComB,GAAA,EAAD,CAAM7lB,QAAQ,WAAd,UACE,eAAC+sB,GAAA,EAAD,CACEhxB,GAAI,CACFmjB,GAAI,EACJlC,GAAI,GACJvF,GAAI,GACJxb,QAAS,OACTC,cAAe,SACfmB,WAAY,SACZoC,eAAgB,UARpB,UAWE,cAACI,GAAD,CAAMC,KAAM,GAAI/D,GAAI,CAAE4b,GAAI,KAC1B,cAAC5X,EAAA,EAAD,CACEhE,GAAI,CAAE+B,SAAU,UAAW6Z,GAAI,GAC/B3X,QAAQ,KACRpD,MAAM,eAHR,4BAOA,cAAC6vB,GAAD,CAAQC,OAAO,SACf,eAAC1wB,EAAA,EAAD,CACED,GAAI,CACFE,QAAS,OACTyD,IAAK,IACL9C,MAAO,SAACL,GAAD,MACkB,UAAvBA,EAAME,QAAQyD,KAAmB,WAAa,YAChDwe,GAAI,GANR,UASE,cAACkO,GAAD,CACEC,QAAQ,QACR/U,KAAK,oCAFP,SAIE,cAAC,KAAD,MAEF,cAAC8U,GAAD,CACEC,QAAQ,UACR/U,KAAK,gCAFP,SAIE,cAAC,KAAD,MAEF,cAAC8U,GAAD,CACEC,QAAQ,SACR/U,KAAK,6CAFP,SAIE,cAAC,KAAD,YAIN,cAACkV,GAAA,EAAD,CAAajxB,GAAI,CAAE2b,UAAW,EAAGrX,YAAa,UAAWoX,GAAI,KAA7D,SACE,cAACG,EAAA,EAAD,CACE7b,GAAI,CAAE8b,eAAgB,QACtBC,KAAK,iEACLC,OAAO,SACPC,IAAI,WAJN,SAME,cAAC0J,GAAA,EAAD,CACE3lB,GAAI,CACF+B,SAAU,WACV8d,WAAY,IACZC,cAAe,cAEjB/b,KAAK,QACLlD,MAAM,YAPR,8BAaJ,cAACowB,GAAA,EAAD,CAAajxB,GAAI,CAAE2b,UAAW,EAAGrX,YAAa,UAAWoX,GAAI,KAA7D,SACE,cAACiK,GAAA,EAAD,CACE3lB,GAAI,CACF+B,SAAU,WACV8d,WAAY,IACZC,cAAe,cAEjB/b,KAAK,QACLlD,MAAM,YAPR,qCCzEL,SAASqwB,GAAWpxB,GACzB,IAAMqxB,EAAYta,iBAAuB,IACnCua,EAAgBva,iBAAuB,MACvC/D,EAAWuD,GAAenD,IAC1B/E,EAAWkI,GAAe0E,IAC1BZ,EAAM9D,GAAe4E,IAE3BnE,qBAAU,WACJ3I,EAAShJ,sBACXgsB,EAAUpa,QAAU,MAErB,CAAC5I,EAAShJ,sBAEb,IAAMksB,EAAe,WACnBlkB,GAAa,IACbV,GAAUO,KAGNskB,EAAgB,SACpBC,EACAC,EACAC,GAEA9b,GAAI,kBAAmB4b,GACvB,IAAIniB,EAAgB,KACpB,OAAO,IAAIse,SAAQ,SAACC,GAClB,OAAQ4D,EAAQ3b,SAEd,IAAK,mBACHxG,EAAWgiB,EAAcra,QAM7BpB,GAAI,YAAavG,GACjBue,EAAQve,OA0CZ0H,qBAAU,WACJzK,KAtCJiB,GAAe,OAAQ,QAEvBhB,QAAQW,QAAQykB,UAAUC,YAAYL,GAEtChlB,QAAQrF,cAAc2qB,UAAUD,aAAY,SAACE,GAC3Clc,GAAI,wBAAyBkc,GAC7BR,OAEF/kB,QAAQrF,cAAc6qB,gBAAgBH,aACpC,SAACE,EAAwBE,GAAyB,IAAD,EAC/Cpc,GAAI,uBAAD,OAAwBoc,EAAxB,aAAgDF,GACnDlc,GAAI,WAAY7C,GAF+B,MAGzB+e,EAAeG,MAAM,MAAlCtiB,EAHsC,oBAIzChD,EAAG,UAAGoG,EAASzM,MAAK,SAACC,GAAD,OAAaA,EAAQF,KAAOsJ,YAA7C,aAAG,EAAsDhD,KAClE,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAK3E,SACP0E,GAAUC,MAMhBJ,QAAQc,cAAcwkB,UAAUD,aAAY,SAAC7L,GAC3CnQ,GAAI,0BAA2BmQ,GAC/BuL,OAGF/kB,QAAQkM,QAAQyZ,UAAUN,aAAY,SAACO,EAAcC,GAEnD,GADAxc,GAAI,mBAAoBwc,EAAUD,GACjB,UAAbC,EAAsB,CAAC,IAAD,EACeD,EAAQ7Y,IAAY+Y,SAAnDjkB,EADgB,EAChBA,SAAU2E,EADM,EACNA,SAAUP,EADJ,EACIA,OAC5BN,GAASxM,GAAY0I,IACrB8D,GAAS/L,GAAY4M,IACrBb,GAAS0F,GAAUpF,QAQrBoD,GAAI,mCAGL,IAEHmB,qBAAU,WACJzK,IAAkB8N,EAAI7B,SACxB3C,GAAI,6BACJ1D,GAASgG,MAAwB,MAGlC,CAACkC,EAAI7B,SAER,IAAM+Z,EAAW,uCAAG,WAAOhM,GAAP,eAAA3U,EAAA,sE/ElCbpF,QAAQc,cAAcklB,aAAa,I+EkCtB,QACZC,EADY,QAEJxqB,SACZse,IAAUkM,GAEZ5c,GAAI,kBAAmB0Q,GACvBlZ,GAAakZ,GANK,2CAAH,sDASXmM,EAAiB,SAAC7gB,GAGtB,GAFAwf,EAAUpa,QAAQxQ,KAAKoL,GAEnBwf,EAAUpa,QAAQhP,SAAW+K,EAAS/K,OAAQ,CAEhDqpB,EAAcra,QAAU,IAAIpN,KAE5B,IAAM0c,EAAQ8K,EAAUpa,QAAQjC,QAC9B,SAACwR,EAAKC,GAAN,OAAcD,EAAMC,EAAIpP,UAAUpP,SAClC,GAIF,GAFA4N,GAAI,oDAAqD0Q,GAErDA,EAAQ,EAAG,CACbgM,EAAYhM,GACZ,IACMoM,EAAqBtB,EAAUpa,QAAQtQ,QAC3C,qBAAG0Q,UAA0BpP,OAAS,KAElC2qB,EAAgBD,EACnBxqB,MAAM,EAAGM,KAAK+b,IALQ,EAKcmO,EAAmB1qB,SACvDuH,KAAI,qBAAGhJ,QAAsBkJ,SAC7B5H,KAAK,O/EzGT,SAA0BkH,GAAuC,IAEpE1I,EAKE0I,EALF1I,GAFmE,EAOjE0I,EAJFG,YAHmE,MAG5D,QAH4D,IAOjEH,EAHFU,aAJmE,MAI3D,iBAJ2D,IAOjEV,EAFF6jB,eALmE,MAKzD,gBALyD,EAMhE/S,EANgE,aAOjE9Q,EAPiE,iCAQrExC,QAAQrF,cAAc4F,OAAOzG,EAA7B,aACE6I,OACAO,QACAmjB,WACG/S,I+E8FCgT,CAAiB,CACfpjB,MAAM,mBAAD,OAAqB6W,EAArB,qBAAuCA,EAAQ,EAAI,IAAM,GAAzD,KACLzQ,QAAQ,aAAD,OAAe8c,GAAf,OACLD,EAAmB1qB,OAXE,EAW0B,YAAc,GADxD,OAgBT,IAAMwK,EAASkgB,EAAmB3d,QAChC,SAACwR,EAAcC,GAAf,6BAAyCD,GAAzC,aAAiDC,EAAIpP,cACrD,IAEFxB,GAAI,0BAA2BpD,GAC/BN,GACEK,GAAW,CACTC,SACAF,MAAO,CACLgF,UAAU,MAGd,GAIJ8Z,EAAUpa,QAAU,KAIxB,OAAO1K,GACL,mCACG8N,EAAI7B,QAAUnK,EAAShJ,oBACpB2N,EAASxD,KAAI,SAAChJ,EAASke,GAAV,OACX,cAACzO,GAAD,CAEEzP,QAASA,EACT0P,WAAYwc,GAFPhO,MAKT,OAGN,mF,2CC3IW9P,I,mCA9CE,eAACvQ,EAAD,uDAAqB,QAArB,OACf0uB,aAAY,CACVnyB,QAAQ,aACNyD,OACAxD,QAAS,CACPsuB,MAAO,UACPruB,KAAM,UACNe,KAAM,WAER4d,UAAW,CACT0P,MAAO,UACPruB,KAAM,UACNe,KAAM,YAEK,UAATwC,EACA,CACEwqB,WAAY,CACVC,QAAS,QAEX1R,OAAQ,CACNC,UAAW,UACXC,YAAa6R,KAAMtE,UAGvB,CACEgE,WAAY,CACVC,QAAS,WAEX1R,OAAQ,CACNC,UAAW,UACXC,YAAa,+BAIvBzI,YAAa,CACXuE,OAAQ,CACNoK,IAAK,EACLC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,GAAI,KACJC,GAAI,WC3BGmP,OArBf,WACE,IAAM3uB,EAAOkS,GAAe2E,IACtBxa,EAAQkU,GAASvQ,GAEvB,OACE,eAAC4uB,GAAA,EAAD,CAAevyB,MAAOA,EAAtB,UACE,cAACwyB,GAAA,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAAClmB,KAAK,IAAI/J,UAAWimB,KACjC,cAAC,IAAD,CAAOgK,OAAK,EAAClmB,KAAK,YAAY/J,UAAWsrB,KACzC,cAAC,IAAD,CAAO2E,OAAK,EAAClmB,KAAK,YAAY/J,UAAWotB,KACzC,cAAC,IAAD,CAAO6C,OAAK,EAAClmB,KAAK,SAAS/J,UAAW+tB,KACtC,cAAC,IAAD,CAAOhkB,KAAK,cAAc/J,UAAWkuB,KACrC,cAAC,IAAD,CAAU5uB,GAAG,eCfR4wB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBjF,MAAK,YAAkD,IAA/CkF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUna,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJ0N,SAAS0M,eAAe,SAM1BX,O","file":"static/js/main.573b835a.chunk.js","sourcesContent":["export interface Settings {\n  defaultView: HomeView;\n  apiKey: string;\n  darkMode: boolean;\n  autoPlayVideos: boolean;\n  recentVideosSeniority: VideosSeniority;\n  recentVideosDisplayOptions: VideosDisplayOptions;\n  enableNotifications: boolean;\n}\n\nexport enum HomeView {\n  All = 'all',\n  Recent = 'recent',\n  WatchLater = 'watch-later',\n}\n\nexport enum VideosSeniority {\n  OneDay = 1,\n  ThreeDays = 3,\n  SevenDays = 7,\n}\n\nexport interface VideosDisplayOptions {\n  hideViewedVideos: boolean;\n  hideWatchLaterVideos: boolean;\n}\n\nexport type VideoDisplayOption = keyof VideosDisplayOptions;\n\nexport enum SettingType {\n  String,\n  Secret,\n  Number,\n  Boolean,\n  List,\n}\n","export * from './Channel';\nexport * from './Video';\nexport * from './Settings';\nexport * from './api';\nexport * from './webext';\nexport * from './common';\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport { SxProps } from '@mui/system';\nimport { Sidebar } from 'ui/components/shared';\n\ninterface LayoutProps {\n  children?: React.ReactNode;\n  sx?: SxProps;\n}\n\nexport function Layout(props: LayoutProps) {\n  const { children, sx } = props;\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'row', height: '100vh' }}>\n      <Sidebar />\n      <Box\n        sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', ...sx }}\n      >\n        {children}\n      </Box>\n    </Box>\n  );\n}\n","import { styled, Theme } from '@mui/material/styles';\nimport MuiListItemButton from '@mui/material/ListItemButton';\n\nconst ListItemSelectedStyle = (theme: Theme) => ({\n  backgroundColor: theme.palette.primary.main,\n  color: '#fff',\n  '& .MuiListItemIcon-root': {\n    color: '#fff',\n  },\n});\n\nconst ListItem = styled(MuiListItemButton)(({ theme }) => ({\n  borderRadius: '5px 0 0 5px',\n  marginBottom: theme.spacing(1),\n  '&.Mui-selected': ListItemSelectedStyle(theme),\n  '&.Mui-selected:hover': ListItemSelectedStyle(theme),\n})) as typeof MuiListItemButton;\n\nexport default ListItem;\n","import { styled } from '@mui/material/styles';\nimport MuiListItemText from '@mui/material/ListItemText';\n\nconst ListItemText = styled(MuiListItemText)(({ theme }) => ({\n  '& .MuiTypography-root': {\n    display: 'flex',\n    alignItems: 'center',\n  },\n})) as typeof MuiListItemText;\n\nexport default ListItemText;\n","import { styled } from '@mui/material/styles';\nimport MuiBadge from '@mui/material/Badge';\n\nconst Badge = styled(MuiBadge)(({ theme }) => ({\n  '& .MuiBadge-badge': {\n    position: 'relative',\n    transform: 'none',\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n    minWidth: 24,\n    height: 24,\n    fontSize: '0.75rem',\n    marginLeft: theme.spacing(3),\n    borderRadius: theme.spacing(1.5),\n  },\n}));\n\nexport default Badge;\n","import React from 'react';\nimport { Link, LinkProps, useLocation } from 'react-router-dom';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport ListItem from './ListItem';\nimport ListItemText from './ListItemText';\nimport Badge from './Badge';\n\ninterface ListItemLinkProps {\n  icon: React.ReactElement;\n  text: string;\n  badge?: React.ReactNode;\n  hasWarning?: boolean;\n  to: string;\n}\n\nexport default function ListItemLink(props: ListItemLinkProps) {\n  const { icon, text, badge, hasWarning, to } = props;\n  const location = useLocation();\n  const selected = location.pathname === to;\n\n  const renderLink = React.useMemo(\n    () =>\n      React.forwardRef<HTMLAnchorElement, Omit<LinkProps, 'to'>>(\n        (itemProps, ref) => <Link to={to} ref={ref} {...itemProps} />\n      ),\n    [to]\n  );\n\n  return (\n    <ListItem component={renderLink} selected={selected} disableRipple>\n      {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n      <ListItemText\n        primary={\n          <>\n            {text}\n            {badge && selected ? <Badge badgeContent={badge} /> : null}\n            {hasWarning && !selected ? (\n              <ErrorOutlineIcon sx={{ ml: 3 }} color=\"warning\" />\n            ) : null}\n          </>\n        }\n      />\n    </ListItem>\n  );\n}\n","import React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { Logo } from 'ui/components/shared';\n\nconst { REACT_APP_NAME, REACT_APP_VERSION } = process.env;\n\ninterface HeaderProps {\n  showVersion?: boolean;\n}\n\nexport default function Header(props: HeaderProps) {\n  const { showVersion } = props;\n\n  return (\n    <Box\n      component=\"span\"\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '1rem',\n        cursor: 'default',\n        userSelect: 'none',\n      }}\n    >\n      <Logo size={32} />\n      <Box\n        component=\"span\"\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          color: 'text.primary',\n        }}\n      >\n        <Typography variant=\"subtitle1\">{REACT_APP_NAME}</Typography>\n        {showVersion ? (\n          <Typography\n            variant=\"caption\"\n            sx={{\n              marginLeft: 1,\n              bgcolor: (theme) =>\n                theme.palette.mode === 'light' ? '#eee' : 'transparent',\n              padding: '3px 6px',\n              border: 1,\n              borderColor: (theme) =>\n                theme.palette.mode === 'light' ? 'transparent' : 'divider',\n              borderRadius: '4px',\n              color: 'text.primary',\n              fontSize: '0.75rem',\n              lineHeight: 1,\n            }}\n          >\n            v{REACT_APP_VERSION}\n          </Typography>\n        ) : null}\n      </Box>\n    </Box>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  HomeView,\n  Settings,\n  VideosDisplayOptions,\n  VideosSeniority,\n} from 'types';\n\nconst { REACT_APP_YOUTUBE_API_KEY } = process.env;\n\nexport const defaultSettings = {\n  defaultView: HomeView.All,\n  apiKey: REACT_APP_YOUTUBE_API_KEY || '',\n  darkMode: false,\n  autoPlayVideos: true,\n  recentVideosSeniority: VideosSeniority.OneDay,\n  recentVideosDisplayOptions: {\n    hideViewedVideos: false,\n    hideWatchLaterVideos: false,\n  },\n  enableNotifications: true,\n};\n\ninterface SettingsState extends Settings {}\n\nconst initialState: SettingsState = {\n  ...defaultSettings,\n};\n\nexport const settingsSlice = createSlice({\n  name: 'settings',\n  initialState,\n  reducers: {\n    setSettings: (state, action: PayloadAction<Partial<SettingsState>>) => {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    },\n    resetSettings: (state) => {\n      return {\n        ...state,\n        ...defaultSettings,\n      };\n    },\n    setRecentVideosDisplayOptions: (\n      state,\n      action: PayloadAction<Partial<VideosDisplayOptions>>\n    ) => {\n      return {\n        ...state,\n        recentVideosDisplayOptions: {\n          ...state.recentVideosDisplayOptions,\n          ...action.payload,\n        },\n      };\n    },\n  },\n});\n\nexport const { setSettings, resetSettings, setRecentVideosDisplayOptions } =\n  settingsSlice.actions;\n\nexport default settingsSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { arrayMove } from '@dnd-kit/sortable';\nimport { Channel } from 'types';\n\ninterface ChannelsState {\n  list: Channel[];\n}\n\nconst initialState: ChannelsState = {\n  list: [],\n};\n\nexport const channelsSlice = createSlice({\n  name: 'channels',\n  initialState,\n  reducers: {\n    setChannels: (state, action: PayloadAction<Partial<ChannelsState>>) => {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    },\n    addChannel: (state, action: PayloadAction<Channel>) => {\n      const { id } = action.payload;\n      const found = state.list.find((channel: Channel) => channel.id === id);\n      if (!found) {\n        state.list.push(action.payload);\n      }\n    },\n    removeChannel: (state, action: PayloadAction<Channel>) => {\n      const { id } = action.payload;\n      state.list = state.list.filter((channel: Channel) => channel.id !== id);\n    },\n    moveChannel: (\n      state,\n      action: PayloadAction<{ from: number; to: number }>\n    ) => {\n      const { from, to } = action.payload;\n      state.list = arrayMove(state.list, from, to);\n    },\n    toggleChannel: (state, action: PayloadAction<Channel>) => {\n      const { id } = action.payload;\n      const found = state.list.find((channel: Channel) => channel.id === id);\n      if (found) {\n        found.isHidden = !found.isHidden;\n      }\n    },\n    toggleChannelNotifications: (state, action: PayloadAction<Channel>) => {\n      const { id } = action.payload;\n      const found = state.list.find((channel: Channel) => channel.id === id);\n      if (found) {\n        found.notifications = {\n          ...found.notifications,\n          isDisabled: found.notifications\n            ? !found.notifications.isDisabled\n            : true,\n        };\n      }\n    },\n  },\n});\n\nexport const {\n  setChannels,\n  addChannel,\n  removeChannel,\n  moveChannel,\n  toggleChannel,\n  toggleChannelNotifications,\n} = channelsSlice.actions;\n\nexport default channelsSlice.reducer;\n","/**\n * Convert youtube duration to readable format\n *\n * @param ISO_8601_string {string}\n */\nexport function niceDuration(ISO_8601_string: string) {\n  let time = ISO_8601_string.replace('PT', '').toUpperCase();\n  let h = extract('H');\n  let m = extract('M');\n  let s = extract('S');\n  return h !== '00' ? [h, m, s].join(':') : [m, s].join(':');\n\n  function extract(stop: string) {\n    for (let i = 0; i < time.length; i++) {\n      if (time[i] === stop) {\n        let val = time.slice(0, i);\n        if (val.length === 1 && stop !== 'H') {\n          val = '0' + val;\n        }\n        time = time.slice(i + 1);\n        return val;\n      }\n    }\n    return '00';\n  }\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Shorten number to thousands, millions, billions, etc.\n * http://en.wikipedia.org/wiki/Metric_prefix\n *\n * @param {number} num Number to shorten.\n * @param {number} [digits=0] The number of digits to appear after the decimal point.\n * @returns {string|number}\n *\n * @example\n * // returns '12.5k'\n * shortenLargeNumber(12543, 1)\n *\n * @example\n * // returns '-13k'\n * shortenLargeNumber(-12567)\n *\n * @example\n * // returns '51M'\n * shortenLargeNumber(51000000)\n *\n * @example\n * // returns 651\n * shortenLargeNumber(651)\n *\n * @example\n * // returns 0.12345\n * shortenLargeNumber(0.12345)\n */\nexport function shortenLargeNumber(num: number, digits: number = 0) {\n  let units = ['k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'],\n    decimal;\n\n  for (let i = units.length - 1; i >= 0; i--) {\n    decimal = Math.pow(1000, i + 1);\n\n    if (num <= -decimal || num >= decimal) {\n      return +(num / decimal).toFixed(digits) + units[i];\n    }\n  }\n\n  return num;\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return Date & time in words\n * Stolen from: https://stackoverflow.com/a/37802747\n */\nexport const TimeAgo = (() => {\n  let self: any = {};\n\n  // Public Methods\n  self.locales = {\n    prefix: '',\n    sufix: 'ago',\n\n    seconds: 'less than a minute',\n    minute: 'about a minute',\n    minutes: '%d minutes',\n    hour: 'about an hour',\n    hours: 'about %d hours',\n    day: 'a day',\n    days: '%d days',\n    month: 'about a month',\n    months: '%d months',\n    year: 'about a year',\n    years: '%d years',\n  };\n\n  self.inWords = (timeAgo: any) => {\n    let seconds = Math.floor(((new Date() as any) - parseInt(timeAgo)) / 1000),\n      separator = self.locales.separator || ' ',\n      words = self.locales.prefix + separator,\n      interval = 0,\n      intervals: any = {\n        year: seconds / 31536000,\n        month: seconds / 2592000,\n        day: seconds / 86400,\n        hour: seconds / 3600,\n        minute: seconds / 60,\n      };\n\n    let distance = self.locales.seconds;\n\n    for (let key in intervals) {\n      interval = Math.floor(intervals[key]);\n\n      if (interval > 1) {\n        distance = self.locales[key + 's'];\n        break;\n      } else if (interval === 1) {\n        distance = self.locales[key];\n        break;\n      }\n    }\n\n    distance = distance.replace(/%d/i, interval);\n    words += distance + separator + self.locales.sufix;\n\n    return words.trim();\n  };\n\n  return self;\n})();\n\n// -------------------------------------------------------------------\n\n/**\n * Return current date minus number of days before\n *\n * @param before {number}\n */\nexport function getDateBefore(before: number = 0): Date {\n  let date = new Date();\n  date.setDate(date.getDate() - before);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Check if the given timestamp is in today's date\n * Stolen from: https://stackoverflow.com/a/40628566\n *\n * @param timestamp\n */\nexport function isInToday(timestamp: number) {\n  let today = new Date();\n  if (today.setHours(0, 0, 0, 0) === new Date(timestamp).setHours(0, 0, 0, 0)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Returns hours difference between two dates\n * Stolen from: https://www.w3resource.com/javascript-exercises/javascript-date-exercise-45.php\n *\n * @param dt1\n * @param dt2\n */\nexport function diffHours(dt1: Date | number, dt2: Date | number): number {\n  const tms1 = dt1 instanceof Date ? dt1.getTime() : dt1;\n  const tms2 = dt2 instanceof Date ? dt2.getTime() : dt2;\n  let diff = (tms2 - tms1) / 1000;\n  diff /= 60 * 60;\n  return Math.abs(Math.round(diff));\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Returns days difference between two dates\n * Stolen from: https://www.w3resource.com/javascript-exercises/javascript-date-exercise-8.php\n *\n * @param dt1\n * @param dt2\n */\nexport function diffDays(dt1: Date | number, dt2: Date | number): number {\n  const tms1 = dt1 instanceof Date ? dt1.getTime() : dt1;\n  const tms2 = dt2 instanceof Date ? dt2.getTime() : dt2;\n  const diff = (tms2 - tms1) / (1000 * 60 * 60 * 24);\n  return Math.floor(diff);\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Returns elapsed hours since the provided date\n *\n * @param dt\n */\nexport function elapsedHours(dt: Date | number): number {\n  const now = new Date();\n  return diffHours(now, dt);\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Returns elapsed days since the provided date\n *\n * @param dt\n */\nexport function elapsedDays(dt: Date | number): number {\n  const now = new Date();\n  return diffDays(dt, now);\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return a new RegExp object instance\n *\n * @param pattern\n * @param modifiers\n */\nexport function regex(pattern: string, modifiers: string): RegExp {\n  return new RegExp(pattern, modifiers);\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return size of an object\n * Stolen from: https://gist.github.com/zensh/4975495\n *\n * @param obj\n */\nexport function memorySizeOf(obj: any) {\n  let bytes = 0;\n\n  function sizeOf(obj: any) {\n    if (obj !== null && obj !== undefined) {\n      switch (typeof obj) {\n        case 'number':\n          bytes += 8;\n          break;\n        case 'string':\n          bytes += obj.length * 2;\n          break;\n        case 'boolean':\n          bytes += 4;\n          break;\n        case 'object':\n          let objClass = Object.prototype.toString.call(obj).slice(8, -1);\n          if (objClass === 'Object' || objClass === 'Array') {\n            for (let key in obj) {\n              if (!obj.hasOwnProperty(key)) continue;\n              sizeOf(obj[key]);\n            }\n          } else bytes += obj.toString().length * 2;\n          break;\n      }\n    }\n    return bytes;\n  }\n\n  function formatByteSize(bytes: number) {\n    if (bytes < 1024) return bytes + ' bytes';\n    else if (bytes < 1048576) return (bytes / 1024).toFixed(3) + ' KiB';\n    else if (bytes < 1073741824) return (bytes / 1048576).toFixed(3) + ' MiB';\n    else return (bytes / 1073741824).toFixed(3) + ' GiB';\n  }\n\n  return formatByteSize(sizeOf(obj));\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Create a new function that limits calls to func to once every given timeframe.\n * Stolen from: https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_throttle\n *\n * @param callback\n * @param timeFrame\n */\nexport function throttle(callback: Function, timeFrame: number) {\n  let lastTime = 0;\n  return (...args: any) => {\n    let now = new Date().getTime();\n    if (now - lastTime >= timeFrame) {\n      callback(...args);\n      lastTime = now;\n    }\n  };\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Create a new function that calls func with thisArg and args.\n * Stolen from: https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_debounce\n *\n * @param callback\n * @param wait\n * @param immediate\n */\nexport function debounce(\n  callback: Function,\n  wait: number,\n  immediate?: boolean\n) {\n  let timeout: any = null;\n  return function (this: any, ...args: any) {\n    const context = this;\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      timeout = null;\n      if (!immediate) callback.apply(context, args);\n    }, wait);\n    if (immediate && !timeout) callback.apply(context, args);\n  };\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Generates 26 [a-z0-9] characters, yielding a UID that is both shorter and more unique than RFC compliant GUIDs.\n * Dashes can be trivially added if human-readability matters.\n * Stolen from: https://stackoverflow.com/a/13403498\n */\nexport function generateGuid() {\n  return (\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  );\n}\n\n// -------------------------------------------------------------------\n\n/**\n * A little function to help us with reordering lists\n *\n * @param list\n * @param currentIndex\n * @param newIndex\n */\nexport function reorder<T>(\n  list: T[],\n  currentIndex: number,\n  newIndex: number\n): T[] {\n  const result = Array.from(list);\n  const [removed] = result.splice(currentIndex, 1);\n  result.splice(newIndex, 0, removed);\n\n  return result;\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Prevent default event operations\n *\n * @param event\n */\nexport function noop<T>(event: React.MouseEvent<T>) {\n  event.stopPropagation();\n  event.preventDefault();\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Transforms an interval to a human readable format\n *\n * @param interval\n * @param unity\n * @param pluralize\n */\nexport function humanInterval(\n  interval: number,\n  unity: string,\n  pluralize: boolean = true\n) {\n  return `${interval} ${unity}${pluralize && interval > 1 ? 's' : ''}`;\n}\n","// import { browser } from \"webextension-polyfill-ts\";\nimport { SendNotificationParams } from 'types';\n\ndeclare var browser: any;\n\nfunction isBrowserAPIAvailable(): boolean {\n  try {\n    return !!browser;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const isWebExtension: boolean = isBrowserAPIAvailable();\n\nexport function isPopup(): boolean {\n  // have to be a function not a const, 'cause we need to check the window size multiple times not only once\n  return window.innerWidth < 1000;\n}\n\nexport function isFirefox(): boolean {\n  return navigator.userAgent.indexOf('Firefox') !== -1;\n}\n\nexport function isChrome(): boolean {\n  return navigator.userAgent.indexOf('Chrome') !== -1;\n}\n\nexport function createTab(url: string, isActive: boolean = true): Promise<any> {\n  return browser.tabs.create({\n    url,\n    active: isActive,\n  });\n}\n\nexport function getUrl(path: string): string {\n  return browser.runtime.getURL(path);\n}\n\nexport const indexUrl = isWebExtension ? getUrl('index.html') : '';\n\nexport function executeScript(tabId: number, code: string): void {\n  browser.tabs.executeScript(tabId, {\n    code,\n  });\n}\n\n// Notes:\n// - id will be auto-generated if empty\n// - Firefox only supports the 'basic' type @see https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/notifications/TemplateType#type\nexport function sendNotification(params: SendNotificationParams): void {\n  const {\n    id,\n    type = 'basic',\n    title = 'YouTube viewer',\n    iconUrl = 'icons/128.png',\n    ...rest\n  } = params;\n  browser.notifications.create(id, {\n    type,\n    title,\n    iconUrl,\n    ...rest,\n  });\n}\n\nexport function sendMessage(message: string, ...params: any) {\n  return browser.runtime.sendMessage({\n    message,\n    params,\n  });\n}\n\nexport function setBadgeText(text: string | number): void {\n  browser.browserAction.setBadgeText({\n    text: text === 0 ? '' : text.toString(),\n  });\n}\n\nexport function setBadgeColors(\n  backgroundColor: string,\n  textColor: string\n): void {\n  if (isFirefox()) {\n    browser.browserAction.setBadgeTextColor({ color: textColor });\n  }\n  browser.browserAction.setBadgeBackgroundColor({ color: backgroundColor });\n}\n\nexport function getBadgeText(): Promise<string> {\n  return browser.browserAction.getBadgeText({});\n}\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { RootState } from 'store';\n\nconst baseQuery = fetchBaseQuery({\n  baseUrl: 'https://www.googleapis.com/youtube/v3/',\n  prepareHeaders: (headers, { getState }) => {\n    const apiKey = (getState() as RootState).settings.apiKey;\n    if (apiKey) {\n      headers.set('X-Goog-Api-Key', apiKey);\n    }\n    return headers;\n  },\n});\n\nexport const youtubeApi = createApi({\n  reducerPath: 'youtubeApi',\n  baseQuery,\n  endpoints: () => ({}),\n});\n","import { youtubeApi } from './api';\nimport { FetchBaseQueryError } from '@reduxjs/toolkit/dist/query';\nimport { niceDuration, shortenLargeNumber, TimeAgo } from 'helpers/utils';\nimport { Channel, ChannelActivities, Response, Video, VideoFlags } from 'types';\nimport { saveVideos } from 'store/reducers/videos';\n\ntype FindChannelByNameArgs = {\n  name: string;\n  maxResults?: number;\n};\n\ntype FindChannelByNameResponse = {\n  items: Channel[];\n  total: number;\n};\n\ntype GetChannelActivitiesArgs = {\n  channel: Channel;\n  publishedAfter?: string;\n  publishedBefore?: string;\n  maxResults?: number;\n};\n\ntype GetChannelActivitiesResponse = {\n  items: ChannelActivities[];\n  total: number;\n};\n\ntype GetVideosByIdArgs = {\n  ids: string[];\n  maxResults?: number;\n};\n\ntype GetVideosByIdResponse = {\n  items: Video[];\n  total: number;\n};\n\ntype GetChannelVideosArgs = GetChannelActivitiesArgs & {\n  persistVideos?: boolean;\n  persistVideosFlags?: VideoFlags;\n};\n\nexport type GetChannelVideosResponse = GetVideosByIdResponse;\n\nconst queries = {\n  // Channel search query\n  findChannelByName: {\n    query: ({ name: q, maxResults = 10 }: FindChannelByNameArgs) => ({\n      url: 'search',\n      params: {\n        part: 'snippet',\n        fields: 'pageInfo,items(snippet)',\n        type: 'channel',\n        order: 'relevance',\n        maxResults,\n        q,\n      },\n    }),\n    transformResponse: (response: Response): FindChannelByNameResponse => ({\n      items: response.items.map((item) => ({\n        title: item.snippet.title,\n        url: `https://www.youtube.com/channel/${item.snippet.channelId}/videos`,\n        description: item.snippet.description,\n        thumbnail: item.snippet.thumbnails.medium.url,\n        id: item.snippet.channelId,\n      })),\n      total: response.pageInfo.totalResults,\n    }),\n  },\n  // Channel activities query\n  getChannelActivities: {\n    query: ({\n      channel,\n      publishedAfter,\n      publishedBefore,\n      maxResults = 10,\n    }: GetChannelActivitiesArgs) => ({\n      url: 'activities',\n      params: {\n        part: 'contentDetails',\n        fields: 'pageInfo,items(contentDetails)',\n        channelId: channel.id,\n        ...(publishedAfter ? { publishedAfter } : {}),\n        ...(publishedBefore ? { publishedBefore } : {}),\n        maxResults,\n      },\n    }),\n    transformResponse: (response: Response): GetChannelActivitiesResponse => ({\n      items: response.items\n        .filter((item) => item.contentDetails.upload?.videoId)\n        .map((item) => ({\n          videoId: item.contentDetails.upload.videoId,\n        })),\n      total: response.pageInfo.totalResults,\n    }),\n  },\n  // Videos informations query\n  getVideosById: {\n    query: ({ ids, maxResults = 10 }: GetVideosByIdArgs) => ({\n      url: 'videos',\n      params: {\n        part: 'snippet,contentDetails,statistics,id',\n        fields:\n          'pageInfo,items(id,contentDetails/duration,statistics/viewCount,snippet(title,channelTitle,channelId,publishedAt,thumbnails/medium))',\n        id: ids.slice(0, maxResults).join(','),\n      },\n    }),\n    transformResponse: (response: Response): GetVideosByIdResponse => ({\n      items: response.items.map((item) => {\n        const publishedAt = new Date(item.snippet.publishedAt).getTime();\n        return {\n          id: item.id,\n          title: item.snippet.title,\n          url: `https://www.youtube.com/watch?v=${item.id}`,\n          duration: niceDuration(item.contentDetails.duration),\n          views: shortenLargeNumber(item.statistics.viewCount),\n          thumbnail: item.snippet.thumbnails.medium.url,\n          channelId: item.snippet.channelId,\n          channelTitle: item.snippet.channelTitle,\n          publishedAt,\n          publishedSince: TimeAgo.inWords(publishedAt),\n        };\n      }),\n      total: response.pageInfo.totalResults,\n    }),\n  },\n};\n\nconst extendedApi = youtubeApi.injectEndpoints({\n  endpoints: (builder) => ({\n    findChannelByName: builder.query<\n      FindChannelByNameResponse,\n      FindChannelByNameArgs\n    >(queries.findChannelByName),\n    getChannelActivities: builder.query<\n      GetChannelActivitiesResponse,\n      GetChannelActivitiesArgs\n    >(queries.getChannelActivities),\n    getVideosById: builder.query<GetVideosByIdResponse, GetVideosByIdArgs>({\n      queryFn: async (_arg, _queryApi, _extraOptions, fetchWithBQ) => {\n        const { ids, maxResults } = _arg;\n        if (ids.length === 0) {\n          return {\n            data: {\n              items: [],\n              total: 0,\n            },\n          };\n        }\n        const result = await fetchWithBQ(\n          queries.getVideosById.query({\n            ids,\n            maxResults,\n          })\n        );\n        return result.data\n          ? {\n              data: queries.getVideosById.transformResponse(\n                result.data as Response\n              ),\n            }\n          : { error: result.error as FetchBaseQueryError };\n      },\n    }),\n    getChannelVideos: builder.query<\n      GetChannelVideosResponse,\n      GetChannelVideosArgs\n    >({\n      queryFn: async (_arg, _queryApi, _extraOptions, fetchWithBQ) => {\n        const { channel, publishedAfter, maxResults } = _arg;\n        // Fetch channel activities\n        const activities = await fetchWithBQ(\n          queries.getChannelActivities.query({\n            channel,\n            publishedAfter,\n            maxResults,\n          })\n        );\n        if (activities.error) {\n          return { error: activities.error as FetchBaseQueryError };\n        }\n        const { items, total } = queries.getChannelActivities.transformResponse(\n          activities.data as Response\n        );\n        // Fetch channel videos\n        const ids = items.map(({ videoId }) => videoId);\n        if (ids.length === 0) {\n          return {\n            data: {\n              items: [],\n              total: 0,\n            },\n          };\n        }\n        const result = await fetchWithBQ(\n          queries.getVideosById.query({\n            ids,\n            maxResults,\n          })\n        );\n        return result.data\n          ? {\n              data: {\n                ...queries.getVideosById.transformResponse(\n                  result.data as Response\n                ),\n                total,\n              },\n            }\n          : { error: result.error as FetchBaseQueryError };\n      },\n      onQueryStarted: async (arg, { dispatch, queryFulfilled }) => {\n        const { persistVideos, persistVideosFlags: flags = {} } = arg;\n        try {\n          if (persistVideos) {\n            const { data } = await queryFulfilled;\n            dispatch(\n              saveVideos({\n                videos: data.items,\n                flags,\n              })\n            );\n          }\n        } catch (err) {\n          // proceed\n        }\n      },\n    }),\n  }),\n  overrideExisting: false,\n});\n\nexport const {\n  useFindChannelByNameQuery,\n  useGetChannelActivitiesQuery,\n  useGetVideosByIdQuery,\n  useGetChannelVideosQuery,\n} = extendedApi;\n","import { createSelector } from '@reduxjs/toolkit';\nimport type { RootState } from 'store';\nimport { Channel } from 'types';\n\nexport const selectChannels = (state: RootState) => state.channels.list;\n\nexport const selectActiveChannels = createSelector(selectChannels, (channels) =>\n  channels.filter(({ isHidden }) => !isHidden)\n);\n\nexport const selectHiddenChannels = createSelector(selectChannels, (channels) =>\n  channels.filter(({ isHidden }) => isHidden)\n);\n\nexport const selectNotificationEnabledChannels = createSelector(\n  selectChannels,\n  (channels) =>\n    channels.filter(\n      ({ isHidden, notifications }) => !isHidden && !notifications?.isDisabled\n    )\n);\n\nexport const selectActiveChannelsCount = createSelector(\n  selectActiveChannels,\n  (channels) => channels.length\n);\n\nexport const selectChannelsCount = createSelector(\n  selectChannels,\n  selectActiveChannels,\n  (channels, activeChannels) =>\n    channels.length === activeChannels.length\n      ? channels.length\n      : `${activeChannels.length}/${channels.length}`\n);\n\nexport const selectChannel = (channel: Channel) =>\n  createSelector(selectChannels, (channels) =>\n    channels.find(({ id }) => id === channel.id)\n  );\n","import type { RootState } from 'store';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { Channel, Video } from 'types';\nimport { selectHiddenChannels } from './channels';\n\nexport const selectVideos = (state: RootState) => state.videos.list;\n\nexport const selectChannelVideos = (channel: Channel) =>\n  createSelector(selectVideos, (videos) =>\n    videos.filter(({ channelId }) => channel.id === channelId)\n  );\n\nexport const selectViewedVideos = (channel?: Channel) =>\n  createSelector(selectVideos, (videos) =>\n    videos.filter(\n      ({ flags, channelId }) =>\n        flags.viewed && (!channel || channel.id === channelId)\n    )\n  );\n\nexport const selectNotifiedVideos = (channel?: Channel) =>\n  createSelector(selectVideos, (videos) =>\n    videos.filter(\n      ({ flags, channelId }) =>\n        flags.notified && (!channel || channel.id === channelId)\n    )\n  );\n\nexport const selectWatchLaterVideos = (channel?: Channel) =>\n  createSelector(selectVideos, (videos) =>\n    videos\n      .filter(\n        ({ flags, channelId }) =>\n          flags.toWatchLater && (!channel || channel.id === channelId)\n      )\n      .sort((a, b) => b.publishedAt - a.publishedAt)\n  );\n\nexport const selectWatchLaterVideosCount = createSelector(\n  selectVideos,\n  selectHiddenChannels,\n  (videos, hiddenChannels) => {\n    const hiddenChannelsIds = hiddenChannels.map(({ id }) => id);\n    return videos.filter(\n      ({ flags, channelId }) =>\n        flags.toWatchLater && !hiddenChannelsIds.includes(channelId)\n    ).length;\n  }\n);\n\nexport const selectViewedWatchLaterVideosCount = createSelector(\n  selectVideos,\n  selectHiddenChannels,\n  (videos, hiddenChannels) => {\n    const hiddenChannelsIds = hiddenChannels.map(({ id }) => id);\n    return videos.filter(\n      ({ flags, channelId }) =>\n        flags.toWatchLater &&\n        flags.viewed &&\n        !hiddenChannelsIds.includes(channelId)\n    ).length;\n  }\n);\n\nexport const selectVideoMeta = (video: Video) =>\n  createSelector(selectVideos, (videos) => {\n    const { flags } = videos.find(({ id }) => id === video.id) || {};\n    return {\n      isViewed: flags?.viewed || false,\n      isToWatchLater: flags?.toWatchLater || false,\n    };\n  });\n","import { useWidth } from './useWidth';\n\ninterface GridColumns {\n  [key: string]: number;\n}\n\nexport function useGrid(columns: GridColumns) {\n  const width = useWidth(null);\n\n  return {\n    itemsPerRow: width ? columns[width] : undefined,\n  };\n}\n","import { Breakpoint, useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { Nullable } from 'types';\n\n/**\n * Be careful using this hook. It only works because the number of\n * breakpoints in theme is static. It will break once you change the number of\n * breakpoints. See https://reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level\n */\nexport function useWidth(defaultWidth: Nullable<Breakpoint> = 'xs') {\n  const theme = useTheme();\n  const keys = [...theme.breakpoints.keys].reverse();\n\n  return (\n    keys.reduce((output: Nullable<string>, key: Breakpoint) => {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const matches = useMediaQuery(theme.breakpoints.up(key));\n      return !output && matches ? key : output;\n    }, null) || defaultWidth\n  );\n}\n","const { REACT_APP_DEBUG } = process.env;\n\nfunction time() {\n  const now = new Date();\n  return `[${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}]`;\n}\n\nexport function log(message: any, ...params: any) {\n  if (REACT_APP_DEBUG) {\n    console.log(time(), message, ...params);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { Channel, Video } from 'types';\nimport { useGetChannelVideosQuery } from 'store/services/youtube';\nimport { getDateBefore } from 'helpers/utils';\nimport { useAppSelector } from 'store';\nimport { selectChannelVideos } from 'store/selectors/videos';\nimport { useInterval } from 'hooks';\nimport { log } from 'helpers/logger';\n\nexport interface CheckEndData {\n  channel: Channel;\n  newVideos: Video[];\n}\n\ninterface ChannelCheckerProps {\n  channel: Channel;\n  onCheckEnd: (data: CheckEndData) => void;\n}\n\nexport const defaults = {\n  checkInterval: 30, // minute(s)\n  videosSeniority: 1, // day(s)\n};\n\nexport default function ChannelChecker(props: ChannelCheckerProps) {\n  const { channel, onCheckEnd } = props;\n  const [ready, setReady] = useState(false);\n  const cachedVideos = useAppSelector(selectChannelVideos(channel));\n  const publishedAfter = getDateBefore(defaults.videosSeniority).toISOString();\n  const pollingInterval = defaults.checkInterval * 60000; // convert minutes to milliseconds\n  const { data, isFetching, refetch } = useGetChannelVideosQuery(\n    {\n      channel,\n      publishedAfter,\n    },\n    {\n      skip: !ready,\n      // pollingInterval,\n    }\n  );\n\n  useInterval(() => {\n    if (!ready) {\n      setReady(true);\n    } else {\n      refetch();\n    }\n  }, pollingInterval);\n\n  useEffect(() => {\n    if (!isFetching && data) {\n      let newVideos: Video[] = [];\n      const videos = data?.items || [];\n      const total = data?.total || 0;\n      log('Fetch ended:', total, data);\n      if (total > 0) {\n        const checkedVideosIds = cachedVideos\n          .filter(\n            ({ flags }) =>\n              flags.viewed ||\n              flags.toWatchLater ||\n              flags.notified ||\n              flags.recent\n          )\n          .map(({ id }) => id);\n        newVideos = videos.filter(\n          (video) => !checkedVideosIds.includes(video.id)\n        );\n        if (newVideos.length > 0) {\n          log(`New videos for channel ${channel.title}:`, newVideos);\n        }\n      }\n      onCheckEnd({\n        channel,\n        newVideos,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isFetching]);\n\n  return null;\n}\n","import { useEffect, useRef } from 'react';\nimport { Nullable } from 'types';\n\nexport function useInterval(callback: () => void, delay: Nullable<number>) {\n  const savedCallback = useRef(callback);\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay === null) {\n      return;\n    }\n    const id = setInterval(() => savedCallback.current(), delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { elapsedDays } from 'helpers/utils';\nimport { isWebExtension } from 'helpers/webext';\nimport { VideoCache, Video, VideoFlags, VideoFlag } from 'types';\nimport { defaults as channelCheckerDefaults } from 'ui/components/webext/Background/ChannelChecker';\n\ninterface VideosState {\n  list: VideoCache[];\n}\n\nconst initialState: VideosState = {\n  list: [],\n};\n\nfunction addVideo(state: VideosState, video: Video, flags: VideoFlags) {\n  const found = state.list.find(({ id }) => id === video.id);\n  if (found) {\n    found.flags = {\n      ...found.flags,\n      ...flags,\n    };\n  } else {\n    state.list.push({\n      id: video.id,\n      channelId: video.channelId,\n      publishedAt: video.publishedAt,\n      flags,\n    });\n  }\n}\n\nfunction removeVideoFlag(state: VideosState, video: Video, flag: VideoFlag) {\n  const found = state.list.find(({ id }) => id === video.id);\n  if (found) {\n    found.flags[flag] = false;\n  }\n}\n\nexport const videosSlice = createSlice({\n  name: 'videos',\n  initialState,\n  reducers: {\n    setVideos: (state, action: PayloadAction<Partial<VideosState>>) => {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    },\n    addViewedVideo: (state, action: PayloadAction<Video>) => {\n      const video = action.payload;\n      addVideo(state, video, { viewed: true });\n    },\n    removeViewedVideo: (state, action: PayloadAction<Video>) => {\n      const video = action.payload;\n      removeVideoFlag(state, video, 'viewed');\n    },\n    addWatchLaterVideo: (state, action: PayloadAction<Video>) => {\n      const video = action.payload;\n      addVideo(state, video, { toWatchLater: true });\n    },\n    removeWatchLaterVideo: (state, action: PayloadAction<Video>) => {\n      const video = action.payload;\n      removeVideoFlag(state, video, 'toWatchLater');\n      if (!isWebExtension) {\n        // no need to for the webextension, since it will be done by the background page on each launch\n        videosSlice.caseReducers.removeOutdatedVideos(state);\n      }\n    },\n    clearWatchLaterList: (\n      state,\n      action: PayloadAction<{ viewedOnly: boolean } | undefined>\n    ) => {\n      const { viewedOnly } = action.payload || {};\n      state.list = state.list.map((video) =>\n        video.flags.toWatchLater\n          ? {\n              ...video,\n              flags: {\n                ...video.flags,\n                toWatchLater: viewedOnly ? !video.flags.viewed : false,\n              },\n            }\n          : video\n      );\n    },\n    saveVideos: (\n      state,\n      action: PayloadAction<{ videos: Video[]; flags: VideoFlags }>\n    ) => {\n      const { videos, flags } = action.payload;\n      for (const video of videos) {\n        addVideo(state, video, flags);\n      }\n    },\n    removeOutdatedVideos: (state) => {\n      state.list = state.list.filter(\n        ({ flags, publishedAt }) =>\n          flags.viewed ||\n          flags.toWatchLater ||\n          ((flags.notified || flags.recent) &&\n            elapsedDays(publishedAt) <= channelCheckerDefaults.videosSeniority)\n      );\n    },\n  },\n});\n\nexport const {\n  setVideos,\n  addViewedVideo,\n  removeViewedVideo,\n  addWatchLaterVideo,\n  removeWatchLaterVideo,\n  clearWatchLaterList,\n  saveVideos,\n  removeOutdatedVideos,\n} = videosSlice.actions;\n\nexport default videosSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface AppState {\n  loaded: boolean;\n}\n\nconst initialState: AppState = {\n  loaded: false,\n};\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    setApp: (state, action: PayloadAction<Partial<AppState>>) => {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    },\n  },\n});\n\nexport const { setApp } = appSlice.actions;\n\nexport default appSlice.reducer;\n","import { Nullable } from 'types';\n//import { browser } from \"webextension-polyfill-ts\";\n\ndeclare var browser: any;\n\n/**\n * Get data from storage\n *\n * e.g.: get('key1', 'key2', ...)\n *\n * @param keys\n */\nasync function get(...keys: string[]) {\n  try {\n    const result = await browser.storage.local.get(keys);\n    return keys.length > 1 ? result : result[keys[0]];\n  } catch (error) {\n    const result: { [key: string]: string } = {};\n    for (const key of keys) {\n      const value = localStorage.getItem(key);\n      result[key] = parse(value);\n    }\n    return keys.length > 1 ? result : result[keys[0]];\n  }\n}\n\nfunction parse(value: Nullable<string>) {\n  if (!value) {\n    return value;\n  }\n  try {\n    return JSON.parse(value);\n  } catch (error) {\n    return value;\n  }\n}\n\n/**\n * Save data to storage\n *\n * e.g.: save({ key1: value1, key2: value2, ... })\n *\n * @param values\n */\nfunction save(values: { [key: string]: any }) {\n  try {\n    browser.storage.local.set(values);\n  } catch (error) {\n    const keys = Object.keys(values);\n    for (const key of keys) {\n      const value = stringify(values[key]);\n      localStorage.setItem(key, value);\n    }\n  }\n}\n\nfunction stringify(value: any) {\n  try {\n    return JSON.stringify(value);\n  } catch (error) {\n    return value;\n  }\n}\n\nconst storage = {\n  get,\n  save,\n};\n\nexport default storage;\n","import store, { RootState } from 'store';\nimport storage from 'helpers/storage';\nimport { setSettings } from './reducers/settings';\nimport { setChannels } from './reducers/channels';\nimport { setVideos } from './reducers/videos';\nimport { setApp } from './reducers/app';\nimport { AnyAction } from '@reduxjs/toolkit';\nimport { log } from 'helpers/logger';\nimport { LegacyVideoCache } from 'types';\n\nexport const storageKey = 'APP_YOUTUBE_VIEWER';\n\nlet canPersistState = true;\nlet prevSerializedState = '';\n\nexport const dispatch = (action: AnyAction, persist: boolean = false) => {\n  canPersistState = persist;\n  store.dispatch(action);\n};\n\nexport const preloadState = async () => {\n  const state = await storage.get(storageKey);\n  let shouldPersist = !state;\n  if (!state) {\n    // Handle backward compatibility with v0.6.x\n    const legacy = (await storage.get('settings', 'channels')) || {};\n    if (legacy.settings) {\n      const { apiKey } = legacy.settings;\n      if (apiKey) {\n        dispatch(setSettings({ apiKey }));\n      }\n    }\n    if (legacy.channels) {\n      dispatch(setChannels({ list: legacy.channels }));\n    }\n  } else {\n    // Load stored data\n    const { settings, channels, videos } = state || {};\n    if (settings) {\n      dispatch(setSettings(settings));\n    }\n    if (channels) {\n      dispatch(setChannels(channels));\n    }\n    if (videos) {\n      // Handle legacy videos cache\n      const legacyVideos = videos.list.filter(\n        (video: LegacyVideoCache) =>\n          !!Object.keys(video).find((key) =>\n            ['isViewed', 'isToWatchLater', 'isNotified'].includes(key)\n          )\n      );\n      if (legacyVideos.length > 0) {\n        shouldPersist = true;\n        dispatch(\n          setVideos({\n            list: videos.list.map(\n              ({\n                isViewed,\n                isToWatchLater,\n                isNotified,\n                ...video\n              }: LegacyVideoCache) => ({\n                ...video,\n                flags: {\n                  viewed: isViewed || false,\n                  toWatchLater: isToWatchLater || false,\n                  notified: isNotified || false,\n                },\n              })\n            ),\n          })\n        );\n      } else {\n        dispatch(setVideos(videos));\n      }\n    }\n  }\n  dispatch(setApp({ loaded: true }), shouldPersist);\n};\n\nexport const persistState = (state: RootState, onlyIfChanged?: boolean) => {\n  log('Persist state:', {\n    canPersistState,\n    state,\n  });\n  if (!canPersistState) {\n    canPersistState = true;\n    return;\n  }\n  const { settings, channels, videos } = state;\n  if (onlyIfChanged) {\n    const serializedState = JSON.stringify({ settings, channels, videos });\n    if (prevSerializedState === serializedState) {\n      log('State did not change!');\n      return;\n    }\n    prevSerializedState = serializedState;\n  }\n  storage.save({\n    [storageKey]: {\n      settings,\n      channels,\n      videos,\n    },\n  });\n};\n","import { configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport settingsReducer from './reducers/settings';\nimport channelsReducer from './reducers/channels';\nimport videosReducer from './reducers/videos';\nimport appReducer from './reducers/app';\nimport { debounce } from 'helpers/utils';\nimport { youtubeApi } from './services/youtube';\nimport { preloadState, persistState } from './persist';\n\nconst store = configureStore({\n  reducer: {\n    settings: settingsReducer,\n    channels: channelsReducer,\n    videos: videosReducer,\n    app: appReducer,\n    [youtubeApi.reducerPath]: youtubeApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(youtubeApi.middleware),\n});\n\nstore.subscribe(\n  debounce(() => {\n    persistState(store.getState());\n  }, 1000)\n);\n\n(async () => await preloadState())();\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\nexport { storageKey } from './persist';\n\nexport default store;\n","import type { RootState } from 'store';\nimport { createSelector } from 'reselect';\n\nexport const selectSettings = (state: RootState) => state.settings;\n\nexport const selectMode = createSelector(selectSettings, (settings) =>\n  settings.darkMode ? 'dark' : 'light'\n);\n","import type { RootState } from 'store';\n\nexport const selectApp = (state: RootState) => state.app;\n","import React from 'react';\nimport { Box, Typography, Link, List } from '@mui/material';\nimport ExploreIcon from '@mui/icons-material/Explore';\nimport SubscriptionsIcon from '@mui/icons-material/Subscriptions';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport ContactSupportIcon from '@mui/icons-material/ContactSupport';\nimport ListItemLink from './ListItemLink';\nimport Header from './Header';\nimport { useAppSelector } from 'store';\nimport { selectChannelsCount } from 'store/selectors/channels';\nimport { selectSettings } from 'store/selectors/settings';\nimport { selectApp } from 'store/selectors/app';\n\ninterface SidebarProps {}\n\nexport function Sidebar(props: SidebarProps) {\n  const app = useAppSelector(selectApp);\n  const channelsCount = useAppSelector(selectChannelsCount);\n  const settings = useAppSelector(selectSettings);\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 280,\n        maxWidth: 280,\n        bgcolor: 'custom.lightGrey',\n        borderRight: 1,\n        borderColor: 'divider',\n      }}\n    >\n      <Box\n        sx={{\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          py: 2.5,\n          pl: 3,\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            marginBottom: 6,\n          }}\n        >\n          <Header showVersion />\n        </Box>\n        <Box sx={{ flexGrow: 1, paddingLeft: 1, width: '100%' }}>\n          <List component=\"nav\" aria-label=\"main\">\n            <ListItemLink icon={<ExploreIcon />} text=\"Home\" to=\"/\" />\n            <ListItemLink\n              icon={<SubscriptionsIcon />}\n              text=\"Channels\"\n              to=\"/channels\"\n              badge={channelsCount}\n            />\n            <ListItemLink\n              icon={<SettingsIcon />}\n              text=\"Settings\"\n              to=\"/settings\"\n              hasWarning={app.loaded && !settings.apiKey}\n            />\n            <ListItemLink\n              icon={<InfoOutlinedIcon />}\n              text=\"About\"\n              to=\"/about\"\n            />\n          </List>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          py: 2,\n          px: 3,\n          borderTop: 1,\n          borderColor: 'divider',\n        }}\n      >\n        <Typography\n          sx={{ fontSize: '0.8rem', mb: 1 }}\n          variant=\"caption\"\n          color=\"text.secondary\"\n        >\n          Facing issues or have some feedback?\n        </Typography>\n        <Link\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: 0.5,\n            fontSize: '0.8rem',\n            textDecoration: 'none',\n            '&:hover': {\n              textDecoration: 'underline',\n            },\n          }}\n          href=\"https://github.com/AXeL-dev/youtube-viewer/issues\"\n          target=\"_blank\"\n          color=\"secondary\"\n          rel=\"noopener\"\n        >\n          <ContactSupportIcon sx={{ fontSize: 18 }} />\n          Report a bug | Feedback\n        </Link>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport { SxProps } from '@mui/system/styleFunctionSx';\nimport { Theme } from '@mui/material/styles';\n\ninterface LogoProps {\n  size: number;\n  sx?: SxProps<Theme>;\n}\n\nexport function Logo(props: LogoProps) {\n  const { size = 32, sx = {} } = props;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        '> img': {\n          width: size,\n          height: size,\n          filter: 'contrast(150%) brightness(100%)',\n        },\n        ...sx,\n      }}\n    >\n      <img alt=\"logo\" src=\"icons/128.png\" />\n    </Box>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport MuiAlert, { AlertColor } from '@mui/material/Alert';\nimport { IconButton, Collapse } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\ninterface AlertProps {\n  open?: boolean;\n  children?: React.ReactNode;\n  error?: any;\n  severity?: AlertColor;\n  closable?: boolean;\n  syncOpen?: boolean;\n  onClose?: () => void;\n}\n\nexport function Alert(props: AlertProps) {\n  const {\n    open: openProp = true,\n    error,\n    severity = 'error',\n    closable,\n    syncOpen,\n    onClose,\n  } = props;\n  const children = props.children || error?.data?.error.message || error?.error;\n  const [open, setOpen] = useState(openProp);\n\n  useEffect(() => {\n    if (syncOpen && openProp !== open) {\n      setOpen(openProp);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [openProp, syncOpen]);\n\n  const handleClose = () => {\n    setOpen(false);\n    if (onClose) {\n      onClose();\n    }\n  };\n\n  return (\n    <Collapse in={open}>\n      <MuiAlert\n        sx={{ borderRadius: 'unset' }}\n        severity={severity}\n        action={\n          closable ? (\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={handleClose}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          ) : null\n        }\n      >\n        {children}\n      </MuiAlert>\n    </Collapse>\n  );\n}\n","import React from 'react';\n\ninterface RawHTMLProps {\n  children: string;\n  tag?: string;\n  nl2br?: boolean;\n}\n\nexport const RawHTML = ({\n  children,\n  tag = 'span',\n  nl2br,\n  ...rest\n}: RawHTMLProps) =>\n  React.createElement(tag, {\n    dangerouslySetInnerHTML: {\n      __html: nl2br\n        ? children.replace\n          ? children.replace(/\\n/g, '<br />')\n          : children\n        : children,\n    },\n    ...rest,\n  });\n","import { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\n\nconst Input = styled(InputBase)(({ theme }) => ({\n  flexGrow: 1,\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.custom.lightGrey,\n  border: `1px solid ${theme.palette.custom.lightBorder}`,\n  borderRadius: 20,\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 5, 1, 6),\n    width: '100%',\n  },\n}));\n\nexport default Input;\n","import React from 'react';\nimport { Box, IconButton } from '@mui/material';\nimport { debounce } from 'helpers/utils';\nimport SearchIcon from '@mui/icons-material/Search';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Input from './Input';\n\ninterface SearchInputProps {\n  placeholder?: string;\n  width?: string | number;\n  clearable?: boolean;\n  debounceTime?: number;\n  onChange: (value: string) => void;\n  onClear?: () => void;\n}\n\nexport function SearchInput(props: SearchInputProps) {\n  const {\n    placeholder = 'Search…',\n    width: maxWidth,\n    clearable,\n    debounceTime = 300,\n    onChange,\n    onClear,\n  } = props;\n  const [value, setValue] = React.useState('');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  const handleClear = () => {\n    setValue('');\n    if (onClear) {\n      onClear();\n    }\n  };\n\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      onChange(value);\n    }\n  };\n\n  const debounceChange = React.useMemo(\n    () =>\n      debounce((value: string) => {\n        onChange(value);\n      }, debounceTime),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  React.useEffect(() => {\n    if (value === '') {\n      return;\n    }\n\n    debounceChange(value);\n  }, [value, debounceChange]);\n\n  return (\n    <Box sx={{ position: 'relative', display: 'flex', flexGrow: 1, maxWidth }}>\n      <Box\n        sx={{\n          width: 48,\n          height: '100%',\n          position: 'absolute',\n          pointerEvents: 'none',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          color: 'action.active',\n          zIndex: 1,\n        }}\n      >\n        <SearchIcon />\n      </Box>\n      <Input\n        placeholder={placeholder}\n        inputProps={{ value, 'aria-label': 'search' }}\n        onChange={handleChange}\n        onKeyUp={handleKeyUp}\n      />\n      {clearable && value?.length > 0 ? (\n        <IconButton\n          sx={{\n            position: 'absolute',\n            right: 0,\n            top: 0,\n            my: 0.75,\n            mx: 1,\n            color: 'action.active',\n          }}\n          aria-label=\"clear\"\n          size=\"small\"\n          onClick={handleClear}\n        >\n          <CloseIcon fontSize=\"inherit\" />\n        </IconButton>\n      ) : null}\n    </Box>\n  );\n}\n","import { styled } from '@mui/material/styles';\nimport MuiLinearProgress, {\n  linearProgressClasses,\n} from '@mui/material/LinearProgress';\n\nconst LinearProgress = styled(MuiLinearProgress)(({ theme }) => ({\n  height: 3,\n  [`&.${linearProgressClasses.colorPrimary}`]: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\n  },\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 5,\n    backgroundColor: theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8',\n  },\n}));\n\nexport default LinearProgress;\n","import * as React from 'react';\nimport { Box, LinearProgressProps } from '@mui/material';\nimport LinearProgress from './LinearProgress';\n\nexport function ProgressBar(props: LinearProgressProps) {\n  const { variant = 'determinate', value = 0 } = props;\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <LinearProgress variant={variant} value={value} />\n    </Box>\n  );\n}\n","import { styled, alpha } from '@mui/material/styles';\nimport Menu, { MenuProps } from '@mui/material/Menu';\n\nexport const StyledMenu = styled((props: MenuProps) => (\n  <Menu\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'right',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'right',\n    }}\n    MenuListProps={{\n      dense: true,\n    }}\n    {...props}\n  />\n))(({ theme }) => ({\n  '& .MuiPaper-root': {\n    borderRadius: 6,\n    marginTop: theme.spacing(1),\n    minWidth: 180,\n    color:\n      theme.palette.mode === 'light'\n        ? 'rgb(55, 65, 81)'\n        : theme.palette.grey[300],\n    boxShadow:\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n    '& .MuiMenuItem-root': {\n      '& .MuiSvgIcon-root': {\n        fontSize: 18,\n        marginRight: theme.spacing(1.5),\n        '&:not(.inherit-color)': {\n          color: theme.palette.text.secondary,\n        },\n      },\n      '&:active': {\n        backgroundColor: alpha(\n          theme.palette.action.selected,\n          theme.palette.action.selectedOpacity\n        ),\n      },\n    },\n  },\n}));\n","import { styled } from '@mui/material/styles';\nimport MuiBadge from '@mui/material/Badge';\n\nconst Badge = styled(MuiBadge)(({ theme }) => ({\n  '& .MuiBadge-badge': {\n    position: 'relative',\n    transform: 'none',\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    minWidth: 20,\n    height: 20,\n    fontSize: '0.75rem',\n    marginLeft: theme.spacing(1.5),\n    borderRadius: theme.spacing(1.5),\n  },\n}));\n\nexport default Badge;\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport MuiTab, { TabProps as MuiTabProps } from '@mui/material/Tab';\nimport Badge from './Badge';\n\ninterface TabProps extends MuiTabProps {\n  badge?: React.ReactNode;\n  selected?: boolean;\n}\n\nexport default function Tab(props: TabProps) {\n  const { label, badge, selected, ...rest } = props;\n\n  return (\n    <MuiTab\n      sx={{\n        fontSize: '0.975rem',\n        fontWeight: 400,\n        minWidth: 140,\n        textTransform: 'capitalize',\n      }}\n      label={\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\n          {label}\n          {badge && selected ? <Badge badgeContent={badge} /> : null}\n        </Box>\n      }\n      disableRipple\n      {...rest}\n    />\n  );\n}\n","import React, { MouseEvent } from 'react';\nimport { IconButton } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\ninterface CloseButtonProps {\n  onClick: (event: MouseEvent) => void;\n}\n\nexport default function CloseButton(props: CloseButtonProps) {\n  const { onClick } = props;\n\n  return (\n    <IconButton\n      sx={{\n        position: 'absolute',\n        top: (theme) => theme.spacing(-1.75),\n        right: (theme) => theme.spacing(-1.75),\n        bgcolor: 'primary.main',\n        color: 'common.white',\n        fontSize: '1.275rem',\n        '&:hover': {\n          bgcolor: 'primary.main',\n          color: 'common.white',\n        },\n      }}\n      size=\"small\"\n      onClick={onClick}\n    >\n      <CloseIcon fontSize=\"inherit\" />\n    </IconButton>\n  );\n}\n","import React, { MouseEvent } from 'react';\nimport YouTube, { PlayerVars } from 'react-youtube';\nimport { Dialog, DialogContent } from '@mui/material';\nimport { Video, Nullable } from 'types';\nimport { noop } from 'helpers/utils';\nimport { useAppSelector } from 'store';\nimport { selectSettings } from 'store/selectors/settings';\nimport CloseButton from './CloseButton';\n\ninterface VideoPlayerDialogProps {\n  open: boolean;\n  video: Nullable<Video>;\n  onClose: () => void;\n}\n\nfunction VideoPlayerDialog(props: VideoPlayerDialogProps) {\n  const { open, video, onClose } = props;\n  const settings = useAppSelector(selectSettings);\n  const opts = {\n    height: '100%',\n    width: '100%',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: settings.autoPlayVideos ? 1 : 0,\n    } as PlayerVars,\n  };\n\n  const handleClose = (event: MouseEvent, reason?: string) => {\n    if (reason === 'backdropClick') {\n      return noop(event);\n    }\n    onClose();\n  };\n\n  return (\n    <Dialog\n      sx={{\n        '& .MuiPaper-root': {\n          overflow: 'visible',\n          width: '80%',\n          maxWidth: 1200,\n          height: '80%',\n        },\n      }}\n      open={open}\n      onClose={handleClose}\n    >\n      <CloseButton onClick={handleClose} />\n      <DialogContent\n        sx={{\n          display: 'flex',\n          p: 2.5,\n          '> div': {\n            flexGrow: 1,\n          },\n        }}\n      >\n        {video ? <YouTube videoId={video.id} opts={opts} /> : null}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nfunction propsAreEqual(\n  prevProps: VideoPlayerDialogProps,\n  nextProps: VideoPlayerDialogProps\n) {\n  return (\n    prevProps.open === nextProps.open &&\n    prevProps.video?.id === nextProps.video?.id\n  );\n}\n\nexport default React.memo(VideoPlayerDialog, propsAreEqual);\n","import React from 'react';\nimport { Link } from '@mui/material';\nimport { Channel } from 'types';\n\ninterface ChannelLinkProps {\n  channel: Channel;\n  children: React.ReactNode;\n}\n\nfunction ChannelLink(props: ChannelLinkProps) {\n  const { channel, children } = props;\n\n  return (\n    <Link\n      sx={{ outline: 'none', textDecoration: 'none' }}\n      href={channel.url}\n      target=\"_blank\"\n      rel=\"noopener\"\n    >\n      {children}\n    </Link>\n  );\n}\n\nexport default ChannelLink;\n","import React from 'react';\nimport { Box, Avatar, Typography } from '@mui/material';\nimport { Channel } from 'types';\nimport ChannelLink from './ChannelLink';\n\ninterface ChannelTitleProps {\n  channel: Channel;\n}\n\nfunction ChannelTitle(props: ChannelTitleProps) {\n  const { channel } = props;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        pb: 2,\n      }}\n    >\n      <ChannelLink channel={channel}>\n        <Avatar alt={channel.title} src={channel.thumbnail} />\n      </ChannelLink>\n      <ChannelLink channel={channel}>\n        <Typography sx={{ ml: 1.5 }} variant=\"subtitle1\" color=\"text.primary\">\n          {channel.title}\n        </Typography>\n      </ChannelLink>\n    </Box>\n  );\n}\n\nfunction propsAreEqual(\n  prevProps: ChannelTitleProps,\n  nextProps: ChannelTitleProps\n) {\n  return prevProps.channel.id === nextProps.channel.id;\n}\n\nexport default React.memo(ChannelTitle, propsAreEqual);\n","import React from 'react';\nimport { IconButton, Tooltip } from '@mui/material';\nimport WatchLaterOutlinedIcon from '@mui/icons-material/WatchLaterOutlined';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { HomeView, Video } from 'types';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport {\n  addWatchLaterVideo,\n  removeWatchLaterVideo,\n} from 'store/reducers/videos';\nimport { selectVideoMeta } from 'store/selectors/videos';\n\ninterface WatchLaterActionProps {\n  video: Video;\n  view: HomeView;\n}\n\nfunction WatchLaterAction(props: WatchLaterActionProps) {\n  const { video, view } = props;\n  const { isToWatchLater } = useAppSelector(selectVideoMeta(video));\n  const dispatch = useAppDispatch();\n\n  return !isToWatchLater ? (\n    <Tooltip title=\"Watch later\" aria-label=\"watch-later\">\n      <IconButton\n        sx={{\n          color: '#eee',\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          padding: '4px',\n          borderRadius: '2px',\n          '&:hover': {\n            color: '#fff',\n          },\n        }}\n        size=\"small\"\n        onClick={() => {\n          dispatch(addWatchLaterVideo(video));\n        }}\n      >\n        <WatchLaterOutlinedIcon sx={{ fontSize: '1.25rem' }} />\n      </IconButton>\n    </Tooltip>\n  ) : view === HomeView.WatchLater ? (\n    <Tooltip title=\"Remove\" aria-label=\"remove-from-watch-later\">\n      <IconButton\n        sx={{\n          color: '#eee',\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          padding: '4px',\n          borderRadius: '2px',\n          '&:hover': {\n            color: '#fff',\n          },\n        }}\n        size=\"small\"\n        onClick={() => {\n          dispatch(removeWatchLaterVideo(video));\n        }}\n      >\n        <CloseIcon sx={{ fontSize: '1.125rem' }} />\n      </IconButton>\n    </Tooltip>\n  ) : null;\n}\n\nexport default WatchLaterAction;\n","import React from 'react';\nimport { IconButton, Tooltip } from '@mui/material';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { Video } from 'types';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { addViewedVideo, removeViewedVideo } from 'store/reducers/videos';\nimport { selectVideoMeta } from 'store/selectors/videos';\n\ninterface ViewedActionProps {\n  video: Video;\n}\n\nfunction ViewedAction(props: ViewedActionProps) {\n  const { video } = props;\n  const { isViewed } = useAppSelector(selectVideoMeta(video));\n  const dispatch = useAppDispatch();\n\n  return !isViewed ? (\n    <Tooltip title=\"Mark as viewed\" aria-label=\"mark-as-viewed\">\n      <IconButton\n        sx={{\n          color: '#eee',\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          padding: '4px',\n          borderRadius: '2px',\n          '&:hover': {\n            color: '#fff',\n          },\n        }}\n        size=\"small\"\n        onClick={() => {\n          dispatch(addViewedVideo(video));\n        }}\n      >\n        <VisibilityIcon sx={{ fontSize: '1.125rem' }} />\n      </IconButton>\n    </Tooltip>\n  ) : (\n    <Tooltip title=\"Mark as unviewed\" aria-label=\"mark-as-unviewed\">\n      <IconButton\n        sx={{\n          color: '#eee',\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          padding: '4px',\n          borderRadius: '2px',\n          '&:hover': {\n            color: '#fff',\n          },\n        }}\n        size=\"small\"\n        onClick={() => {\n          dispatch(removeViewedVideo(video));\n        }}\n      >\n        <VisibilityOffIcon sx={{ fontSize: '1.125rem' }} />\n      </IconButton>\n    </Tooltip>\n  );\n}\n\nexport default ViewedAction;\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport { HomeView, Video } from 'types';\nimport WatchLaterAction from './WatchLaterAction';\nimport ViewedAction from './ViewedAction';\n\ninterface VideoTopActionsProps {\n  video: Video;\n  view: HomeView;\n}\n\nfunction VideoTopActions(props: VideoTopActionsProps) {\n  const { video, view } = props;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        margin: '4px',\n        gap: '4px',\n      }}\n    >\n      <ViewedAction video={video} />\n      <WatchLaterAction video={video} view={view} />\n    </Box>\n  );\n}\n\nfunction propsAreEqual(\n  prevProps: VideoTopActionsProps,\n  nextProps: VideoTopActionsProps\n) {\n  return (\n    prevProps.view === nextProps.view &&\n    prevProps.video.id === nextProps.video.id\n  );\n}\n\nexport default React.memo(VideoTopActions, propsAreEqual);\n","import React from 'react';\nimport { Box, Tooltip } from '@mui/material';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { Video } from 'types';\nimport { useAppSelector } from 'store';\nimport { selectVideoMeta } from 'store/selectors/videos';\n\ninterface ViewedBadgeProps {\n  video: Video;\n}\n\nfunction ViewedBadge(props: ViewedBadgeProps) {\n  const { video } = props;\n  const { isViewed } = useAppSelector(selectVideoMeta(video));\n\n  return isViewed ? (\n    <Tooltip title=\"Viewed\" aria-label=\"viewed\">\n      <Box\n        sx={{\n          display: 'flex',\n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          margin: '4px',\n          color: '#eee',\n          backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          padding: '3px 5px',\n          borderRadius: '2px',\n          '&:hover': {\n            color: '#fff',\n          },\n        }}\n      >\n        <VisibilityIcon sx={{ fontSize: '1rem' }} />\n      </Box>\n    </Tooltip>\n  ) : null;\n}\n\nfunction propsAreEqual(\n  prevProps: ViewedBadgeProps,\n  nextProps: ViewedBadgeProps\n) {\n  return prevProps.video.id === nextProps.video.id;\n}\n\nexport default React.memo(ViewedBadge, propsAreEqual);\n","import React, { MouseEvent } from 'react';\nimport { Box, IconButton, Tooltip, Typography, Link } from '@mui/material';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport { HomeView, Video } from 'types';\nimport { useAppDispatch } from 'store';\nimport { addViewedVideo } from 'store/reducers/videos';\nimport TopActions from './TopActions';\nimport ViewedBadge from './ViewedBadge';\nimport { createTab, isWebExtension } from 'helpers/webext';\n\ninterface VideoCardProps {\n  video: Video;\n  view: HomeView;\n  thumbnailWidth?: number;\n  thumbnailHeight?: number;\n  onVideoPlay: (video: Video) => void;\n}\n\nfunction VideoCard(props: VideoCardProps) {\n  const {\n    video,\n    view,\n    thumbnailWidth = '100%',\n    thumbnailHeight = 120,\n    onVideoPlay,\n  } = props;\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      <Box\n        sx={{\n          position: 'relative',\n          '&:hover .overlay': {\n            opacity: 1,\n          },\n          '&:hover .options': {\n            opacity: 1,\n          },\n        }}\n      >\n        <Box\n          sx={{\n            display: 'flex',\n            width: thumbnailWidth,\n            height: thumbnailHeight,\n            backgroundImage: `url(\"${video.thumbnail}\")`,\n            //backgroundPosition: 'center',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n          }}\n        />\n        <Box\n          sx={{\n            backgroundColor: 'rgba(0, 0, 0, 0.7)',\n            position: 'absolute',\n            height: '100%',\n            width: '100%',\n            left: 0,\n            top: 0,\n            bottom: 0,\n            right: 0,\n            opacity: 0,\n            transition: 'opacity 0.4s ease-in-out 0s',\n          }}\n          className=\"overlay\"\n        ></Box>\n        <Box\n          sx={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            opacity: 0,\n            width: '100%',\n            height: '100%',\n            transition: 'opacity 0.3s ease-in-out 0s',\n          }}\n          className=\"options\"\n        >\n          <Box\n            sx={{\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: '100%',\n              textAlign: 'center',\n              paddingLeft: '1rem',\n              paddingRight: '1rem',\n            }}\n          >\n            <Link\n              sx={{ textDecoration: 'none', outline: 'none' }}\n              href={video.url}\n              target=\"_blank\"\n              rel=\"noopener\"\n              onClick={(event: MouseEvent) => {\n                if (isWebExtension) {\n                  event.preventDefault();\n                  createTab(video.url, false);\n                }\n                dispatch(addViewedVideo(video));\n              }}\n            >\n              <IconButton sx={{ color: '#fff', margin: 0.5 }} size=\"small\">\n                <Tooltip title=\"Open in Youtube\" aria-label=\"watch-later\">\n                  <OpenInNewIcon sx={{ fontSize: '1.5rem' }} />\n                </Tooltip>\n              </IconButton>\n            </Link>\n            <IconButton\n              sx={{ color: '#fff', margin: 0.5 }}\n              size=\"small\"\n              onClick={() => {\n                onVideoPlay(video);\n                dispatch(addViewedVideo(video));\n              }}\n            >\n              <Tooltip title=\"Watch\" aria-label=\"watch\">\n                <PlayArrowIcon sx={{ fontSize: '2.1rem' }} />\n              </Tooltip>\n            </IconButton>\n          </Box>\n          <TopActions video={video} view={view} />\n        </Box>\n        <ViewedBadge video={video} />\n        <Typography\n          sx={{\n            position: 'absolute',\n            bottom: 0,\n            right: 0,\n            margin: '4px',\n            color: '#fff',\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\n            padding: '2px 4px',\n            borderRadius: '2px',\n          }}\n          variant=\"caption\"\n        >\n          {video.duration}\n        </Typography>\n      </Box>\n      <Box pr={2} mt={1}>\n        <Tooltip\n          title={video.title}\n          enterDelay={700}\n          enterNextDelay={700}\n          aria-label=\"video-title\"\n        >\n          <Typography\n            sx={{\n              display: '-webkit-box',\n              WebkitLineClamp: 2,\n              WebkitBoxOrient: 'vertical',\n              overflow: 'hidden',\n            }}\n            gutterBottom\n            variant=\"body2\"\n          >\n            {video.title}\n          </Typography>\n        </Tooltip>\n        <Typography display=\"block\" variant=\"caption\" color=\"textSecondary\">\n          {video.channelTitle}\n        </Typography>\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          {`${video.views} • ${video.publishedSince}`}\n        </Typography>\n      </Box>\n    </>\n  );\n}\n\nfunction propsAreEqual(prevProps: VideoCardProps, nextProps: VideoCardProps) {\n  return (\n    prevProps.view === nextProps.view &&\n    prevProps.thumbnailHeight === nextProps.thumbnailHeight &&\n    prevProps.thumbnailWidth === nextProps.thumbnailWidth &&\n    prevProps.video.id === nextProps.video.id\n  );\n}\n\nexport default React.memo(VideoCard, propsAreEqual);\n","import React from 'react';\nimport { Skeleton, Box } from '@mui/material';\n\ninterface VideoSkeletonProps {\n  width?: string | number;\n  height?: string | number;\n}\n\nexport default function VideoSkeleton(props: VideoSkeletonProps) {\n  const { width = '100%', height = 120 } = props;\n\n  return (\n    <>\n      <Skeleton variant=\"rectangular\" width={width} height={height} />\n      <Box pt={0.5}>\n        <Skeleton />\n        <Skeleton width=\"60%\" />\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { Grid, GridProps } from '@mui/material';\n\ninterface GridItemProps extends GridProps {}\n\nexport default function GridItem(props: GridItemProps) {\n  const { children, ...rest } = props;\n  const sizes = {\n    xxs: 1,\n    xs: 1,\n    sm: 1,\n    md: 1,\n    lg: 1,\n    xl: 1,\n  } as any;\n\n  return (\n    <Grid item {...sizes} {...rest}>\n      {children}\n    </Grid>\n  );\n}\n","const config = {\n  gridSpacing: { xxs: 1, sm: 2 },\n  gridColumns: { xxs: 1, xs: 2, sm: 3, md: 4, lg: 5, xl: 6 },\n};\n\nexport default config;\n","import React from 'react';\nimport { Box, IconButton } from '@mui/material';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\n\ninterface LoadMoreProps {\n  isLoading: boolean;\n  hasMore?: boolean;\n  onClick?: () => void;\n}\n\nexport default function LoadMore(props: LoadMoreProps) {\n  const { isLoading, hasMore, onClick } = props;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'flex-end',\n        minWidth: (theme) => theme.spacing(3.5),\n        ml: 2,\n        gap: 2,\n      }}\n    >\n      {hasMore ? (\n        <IconButton\n          sx={{ height: 216, borderRadius: 0 }}\n          disabled={isLoading}\n          size=\"small\"\n          onClick={onClick}\n        >\n          <ArrowForwardIosIcon fontSize=\"inherit\" />\n        </IconButton>\n      ) : null}\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Box, Grid } from '@mui/material';\nimport { HomeView, Video } from 'types';\nimport VideoCard from './VideoCard';\nimport VideoSkeleton from './VideoSkeleton';\nimport GridItem from './GridItem';\nimport config from './config';\nimport LoadMore from './LoadMore';\n\ninterface ChannelVideosProps {\n  videos: Video[];\n  view: HomeView;\n  isLoading: boolean;\n  itemsPerRow: number;\n  maxResults: number;\n  hasMore?: boolean;\n  onVideoPlay: (video: Video) => void;\n  onLoadMore?: () => void;\n}\n\nfunction ChannelVideos(props: ChannelVideosProps) {\n  const {\n    videos,\n    view,\n    isLoading,\n    itemsPerRow,\n    maxResults,\n    hasMore,\n    onVideoPlay,\n    onLoadMore,\n  } = props;\n  const skeletonNumber = Math.min(maxResults - videos.length, itemsPerRow);\n\n  return (\n    <Box sx={{ display: 'flex', pl: 6 }}>\n      <Grid container spacing={config.gridSpacing} columns={config.gridColumns}>\n        {videos.map((video: Video, index: number) => (\n          <GridItem key={index}>\n            <VideoCard video={video} view={view} onVideoPlay={onVideoPlay} />\n          </GridItem>\n        ))}\n        {isLoading && skeletonNumber > 0\n          ? Array.from(new Array(skeletonNumber)).map((_, index: number) => (\n              <GridItem key={index}>\n                <VideoSkeleton />\n              </GridItem>\n            ))\n          : null}\n      </Grid>\n      <LoadMore isLoading={isLoading} hasMore={hasMore} onClick={onLoadMore} />\n    </Box>\n  );\n}\n\nexport default ChannelVideos;\n","import React from 'react';\nimport { Box } from '@mui/material';\nimport { Channel, HomeView, Video } from 'types';\nimport ChannelTitle from './ChannelTitle';\nimport ChannelVideos from './ChannelVideos';\n\nexport interface ChannelRendererProps {\n  view: HomeView;\n  channel: Channel;\n  videos: Video[];\n  total: number;\n  isLoading: boolean;\n  itemsPerRow: number;\n  maxResults: number;\n  onLoadMore: () => void;\n  onVideoPlay: (video: Video) => void;\n}\n\nfunction ChannelRenderer(props: ChannelRendererProps) {\n  const { channel, videos, total, isLoading, maxResults, ...rest } = props;\n  const hasVideos = isLoading || videos.length > 0;\n  const canLoadMore = total > maxResults;\n  const hasMore =\n    videos.length > 0 && ((isLoading && canLoadMore) || canLoadMore);\n\n  return hasVideos ? (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        pb: 3,\n      }}\n    >\n      <ChannelTitle channel={channel} />\n      <ChannelVideos\n        videos={videos}\n        isLoading={isLoading}\n        maxResults={maxResults}\n        hasMore={hasMore}\n        {...rest}\n      />\n    </Box>\n  ) : null;\n}\n\nfunction propsAreEqual(\n  prevProps: ChannelRendererProps,\n  nextProps: ChannelRendererProps\n) {\n  return (\n    prevProps.view === nextProps.view &&\n    prevProps.channel.id === nextProps.channel.id &&\n    prevProps.total === nextProps.total &&\n    prevProps.isLoading === nextProps.isLoading &&\n    prevProps.itemsPerRow === nextProps.itemsPerRow &&\n    prevProps.maxResults === nextProps.maxResults &&\n    JSON.stringify(prevProps.videos.map(({ id }) => id)) ===\n      JSON.stringify(nextProps.videos.map(({ id }) => id))\n  );\n}\n\nexport default React.memo(ChannelRenderer, propsAreEqual);\n","import React, { useState, useEffect } from 'react';\nimport { Channel, HomeView, Video, VideoFlags } from 'types';\nimport { useGetChannelVideosQuery } from 'store/services/youtube';\nimport ChannelRenderer from './ChannelRenderer';\nimport config from './ChannelVideos/config';\nimport { useGrid } from 'hooks';\n\nexport interface DefaultRendererProps {\n  channel: Channel;\n  view: HomeView;\n  publishedAfter?: string;\n  excludedVideosIds?: string[];\n  persistVideos?: boolean;\n  persistVideosFlags?: VideoFlags;\n  onError?: (error: any) => void;\n  onChange?: (data: any) => void;\n  onVideoPlay: (video: Video) => void;\n}\n\nfunction DefaultRenderer(props: DefaultRendererProps) {\n  const {\n    channel,\n    publishedAfter,\n    excludedVideosIds = [],\n    persistVideos = false,\n    persistVideosFlags,\n    onError,\n    onChange,\n    ...rest\n  } = props;\n  const [page, setPage] = useState(1);\n  const { itemsPerRow = 0 } = useGrid(config.gridColumns);\n  const maxResults = itemsPerRow * page;\n  const { data, error, isLoading, isFetching } = useGetChannelVideosQuery(\n    {\n      channel,\n      publishedAfter,\n      maxResults,\n      persistVideos,\n      persistVideosFlags,\n    },\n    {\n      skip: itemsPerRow === 0,\n    }\n  );\n  const videos =\n    data?.items.filter((video) => !excludedVideosIds.includes(video.id)) || [];\n  const total = data?.total || 0;\n\n  const handleLoadMore = () => {\n    setPage(page + 1);\n  };\n\n  useEffect(() => {\n    if (error && onError) {\n      onError(error);\n    }\n  }, [error, onError]);\n\n  useEffect(() => {\n    if (!isFetching && data && onChange) {\n      onChange({ channel, items: videos, total });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isFetching, onChange, videos]);\n\n  return (\n    <ChannelRenderer\n      channel={channel}\n      videos={videos}\n      total={total}\n      isLoading={isLoading || isFetching}\n      itemsPerRow={itemsPerRow}\n      maxResults={maxResults}\n      onLoadMore={handleLoadMore}\n      {...rest}\n    />\n  );\n}\n\nexport default DefaultRenderer;\n","import React, { useMemo } from 'react';\nimport { useAppSelector } from 'store';\nimport { selectSettings } from 'store/selectors/settings';\nimport { getDateBefore } from 'helpers/utils';\nimport DefaultRenderer, { DefaultRendererProps } from './DefaultRenderer';\nimport { selectChannelVideos } from 'store/selectors/videos';\nimport { isWebExtension } from 'helpers/webext';\n\nexport interface RecentViewRendererProps\n  extends Omit<DefaultRendererProps, 'publishedAfter'> {}\n\nfunction RecentViewRenderer(props: RecentViewRendererProps) {\n  const { channel } = props;\n  const settings = useAppSelector(selectSettings);\n  const videos = useAppSelector(selectChannelVideos(channel));\n  const { hideViewedVideos, hideWatchLaterVideos } =\n    settings.recentVideosDisplayOptions;\n  const excludedVideosIds = useMemo(\n    () => [\n      ...(hideViewedVideos\n        ? videos.filter(({ flags }) => flags.viewed).map(({ id }) => id)\n        : []),\n      ...(hideWatchLaterVideos\n        ? videos.filter(({ flags }) => flags.toWatchLater).map(({ id }) => id)\n        : []),\n    ],\n    [videos, hideViewedVideos, hideWatchLaterVideos]\n  );\n  const publishedAfter = getDateBefore(\n    settings.recentVideosSeniority\n  ).toISOString();\n\n  return (\n    <DefaultRenderer\n      publishedAfter={publishedAfter}\n      excludedVideosIds={excludedVideosIds}\n      persistVideos={isWebExtension}\n      persistVideosFlags={{ recent: true }}\n      {...props}\n    />\n  );\n}\n\nexport default RecentViewRenderer;\n","import React, { useState, useEffect } from 'react';\nimport { Channel, HomeView, Video } from 'types';\nimport { useGetVideosByIdQuery } from 'store/services/youtube';\nimport { useAppSelector } from 'store';\nimport { selectWatchLaterVideos } from 'store/selectors/videos';\nimport ChannelRenderer from './ChannelRenderer';\nimport config from './ChannelVideos/config';\nimport { useGrid } from 'hooks';\n\nexport interface WatchLaterViewRendererProps {\n  channel: Channel;\n  onError?: (error: any) => void;\n  onVideoPlay: (video: Video) => void;\n}\n\nfunction WatchLaterViewRenderer(props: WatchLaterViewRendererProps) {\n  const { channel, onError, onVideoPlay } = props;\n  const [page, setPage] = useState(1);\n  const { itemsPerRow = 0 } = useGrid(config.gridColumns);\n  const watchLaterVideos = useAppSelector(selectWatchLaterVideos(channel));\n  const ids = watchLaterVideos.map(({ id }) => id);\n  const total = ids.length;\n  const maxResults = Math.min(total, itemsPerRow * page);\n  const { data, error, isLoading, isFetching } = useGetVideosByIdQuery(\n    {\n      ids,\n      maxResults: Math.max(maxResults, itemsPerRow),\n    },\n    {\n      skip: itemsPerRow === 0,\n    }\n  );\n  const videos = (data?.items || []).filter((video) => ids.includes(video.id)); // filter deleted videos (before refetch)\n\n  const handleLoadMore = () => {\n    setPage(page + 1);\n  };\n\n  useEffect(() => {\n    if (error && onError) {\n      onError(error);\n    }\n  }, [error, onError]);\n\n  return (\n    <ChannelRenderer\n      view={HomeView.WatchLater}\n      channel={channel}\n      videos={videos}\n      total={total}\n      isLoading={isLoading || isFetching}\n      itemsPerRow={itemsPerRow}\n      maxResults={maxResults}\n      onLoadMore={handleLoadMore}\n      onVideoPlay={onVideoPlay}\n    />\n  );\n}\n\nexport default WatchLaterViewRenderer;\n","import React, { useMemo } from 'react';\nimport { Box } from '@mui/material';\nimport { Channel, HomeView, Video } from 'types';\nimport {\n  DefaultRenderer,\n  RecentViewRenderer,\n  WatchLaterViewRenderer,\n} from './ChannelRenderer';\n\ninterface ChannelsWrapperProps {\n  view: HomeView;\n  channels: Channel[];\n  onError?: (error: any) => void;\n  onChange?: (data: any) => void;\n  onVideoPlay: (video: Video) => void;\n}\n\nfunction ChannelsWrapper(props: ChannelsWrapperProps) {\n  const { view, channels, onError, onChange, onVideoPlay } = props;\n  const ChannelRenderer = useMemo(() => {\n    switch (view) {\n      case HomeView.WatchLater:\n        return WatchLaterViewRenderer;\n      case HomeView.Recent:\n        return RecentViewRenderer;\n      default:\n        return DefaultRenderer;\n    }\n  }, [view]);\n\n  return (\n    <Box\n      sx={{\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'auto',\n        px: 3,\n        pt: 3,\n      }}\n    >\n      {channels.map((channel: Channel, index: number) => (\n        <ChannelRenderer\n          key={index}\n          view={view}\n          channel={channel}\n          onError={onError}\n          onChange={onChange}\n          onVideoPlay={onVideoPlay}\n        />\n      ))}\n    </Box>\n  );\n}\n\nfunction propsAreEqual(\n  prevProps: ChannelsWrapperProps,\n  nextProps: ChannelsWrapperProps\n) {\n  return (\n    prevProps.view === nextProps.view &&\n    JSON.stringify(prevProps.channels.map(({ id }) => id)) ===\n      JSON.stringify(nextProps.channels.map(({ id }) => id))\n  );\n}\n\nexport default React.memo(ChannelsWrapper, propsAreEqual);\n","import React from 'react';\nimport { Box, Typography, Button } from '@mui/material';\nimport { useHistory } from 'react-router-dom';\nimport PlaylistAddCheckIcon from '@mui/icons-material/PlaylistAddCheck';\nimport { useAppSelector } from 'store';\nimport { selectApp } from 'store/selectors/app';\n\ninterface NoChannelsProps {}\n\nexport default function NoChannels(props: NoChannelsProps) {\n  const app = useAppSelector(selectApp);\n  const history = useHistory();\n\n  return app.loaded ? (\n    <Box\n      sx={{\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Typography\n        sx={{ textAlign: 'center', fontSize: '1.125rem', mb: 2 }}\n        variant=\"body1\"\n        color=\"text.secondary\"\n      >\n        Welcome, stranger! To get started, you should add some channels\n      </Typography>\n      <Button\n        sx={{ textTransform: 'capitalize' }}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => {\n          history.push('/channels');\n        }}\n      >\n        <PlaylistAddCheckIcon sx={{ fontSize: '1.25rem', mr: 0.5 }} />\n        Add channels\n      </Button>\n    </Box>\n  ) : null;\n}\n","import React, { useState, useRef } from 'react';\nimport { Alert } from 'ui/components/shared';\nimport { Channel, HomeView, Video, Nullable } from 'types';\nimport { useAppSelector } from 'store';\nimport { selectActiveChannels } from 'store/selectors/channels';\nimport { GetChannelVideosResponse } from 'store/services/youtube';\nimport VideoPlayerDialog from './VideoPlayerDialog';\nimport ChannelsWrapper from './ChannelsWrapper';\nimport NoChannels from './NoChannels';\n\ninterface ChannelData extends GetChannelVideosResponse {\n  channel: Channel;\n}\n\nexport interface RecentVideosCount {\n  displayed: number;\n  total: number;\n}\n\ninterface TabPanelProps {\n  tab: HomeView;\n  onCountChange?: (tab: HomeView, count: RecentVideosCount) => void;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { tab, onCountChange } = props;\n  const [error, setError] = useState(null);\n  const [activeVideo, setActiveVideo] = useState<Nullable<Video>>(null);\n  const channels = useAppSelector(selectActiveChannels);\n  const channelsData = useRef<ChannelData[]>([]);\n\n  const handleVideoPlay = (video: Video) => {\n    setActiveVideo(video);\n  };\n\n  const handleVideoDialogClose = () => {\n    setActiveVideo(null);\n  };\n\n  const handleError = (err: any) => {\n    setError(err);\n  };\n\n  const handleChange = (data: ChannelData) => {\n    if (onCountChange) {\n      channelsData.current.push(data);\n      if (channelsData.current.length === channels.length) {\n        const count = channelsData.current.reduce(\n          (acc, cur) => ({\n            displayed: acc.displayed + (cur.items?.length || 0),\n            total: acc.total + (cur.total || 0),\n          }),\n          { displayed: 0, total: 0 }\n        );\n        onCountChange(tab, count);\n        channelsData.current = [];\n      }\n    }\n  };\n\n  return error ? (\n    <Alert error={error} closable />\n  ) : (\n    <>\n      {channels.length > 0 ? (\n        <ChannelsWrapper\n          view={tab}\n          channels={channels}\n          onError={handleError}\n          onChange={handleChange}\n          onVideoPlay={handleVideoPlay}\n        />\n      ) : (\n        <NoChannels />\n      )}\n      <VideoPlayerDialog\n        open={!!activeVideo}\n        video={activeVideo}\n        onClose={handleVideoDialogClose}\n      />\n    </>\n  );\n}\n\nexport default React.memo(TabPanel);\n","import React from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@mui/material';\n\nexport interface ConfirmationDialogProps {\n  open: boolean;\n  title: string;\n  text: string;\n  onClose: (confirmed?: boolean) => void;\n}\n\nfunction ConfirmationDialog(props: ConfirmationDialogProps) {\n  const { open, title, text, onClose } = props;\n\n  const handleConfirm = () => {\n    onClose(true);\n  };\n\n  const handleClose = () => {\n    onClose(false);\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogContent>\n        <DialogTitle sx={{ px: 0, pt: 0 }}>{title}</DialogTitle>\n        <DialogContentText>{text}</DialogContentText>\n      </DialogContent>\n      <DialogActions sx={{ px: 2, pb: 2 }}>\n        <Button color=\"inherit\" onClick={handleClose} autoFocus>\n          Cancel\n        </Button>\n        <Button color=\"primary\" variant=\"contained\" onClick={handleConfirm}>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nfunction propsAreEqual(\n  prevProps: ConfirmationDialogProps,\n  nextProps: ConfirmationDialogProps\n) {\n  return prevProps.open === nextProps.open;\n}\n\nexport default React.memo(ConfirmationDialog, propsAreEqual);\n","export function downloadFile(blob: Blob, filename: string) {\n  if ((window.navigator as any).msSaveOrOpenBlob) {\n    // IE10+\n    (window.navigator as any).msSaveOrOpenBlob(blob, filename);\n  } else {\n    // Others\n    const a = document.createElement('a'),\n      url = URL.createObjectURL(blob);\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(function () {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    }, 0);\n  }\n}\n\nexport function readFile(file: Blob) {\n  return new Promise(function (resolve, reject) {\n    const fileReader = new FileReader();\n    fileReader.readAsText(file, 'UTF-8');\n    fileReader.onload = function () {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = function (error) {\n      reject(error);\n    };\n  });\n}\n","import React, { useState } from 'react';\nimport {\n  IconButton,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport { StyledMenu } from 'ui/components/shared';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport ClearAllIcon from '@mui/icons-material/ClearAll';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport { clearWatchLaterList } from 'store/reducers/videos';\nimport {\n  selectWatchLaterVideos,\n  selectViewedWatchLaterVideosCount,\n} from 'store/selectors/videos';\nimport ConfirmationDialog, {\n  ConfirmationDialogProps,\n} from './ConfirmationDialog';\nimport { Nullable } from 'types';\nimport { downloadFile } from 'helpers/file';\n\ninterface WatchLaterViewActionsProps {}\n\nfunction WatchLaterViewActions(props: WatchLaterViewActionsProps) {\n  const watchLaterVideos = useAppSelector(selectWatchLaterVideos());\n  const viewedCount = useAppSelector(selectViewedWatchLaterVideosCount);\n  const dispatch = useAppDispatch();\n  const [anchorEl, setAnchorEl] = useState<Nullable<HTMLElement>>(null);\n  const open = Boolean(anchorEl);\n  const [confirmationDialogProps, setConfirmationDialogProps] =\n    useState<ConfirmationDialogProps>({\n      open: false,\n      title: '',\n      text: '',\n      onClose: () => {},\n    });\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleRemoveAll = () => {\n    setConfirmationDialogProps({\n      open: true,\n      title: 'Remove all videos',\n      text: 'Are you sure that you want to remove all the videos from the watch later list?',\n      onClose: (confirmed) => {\n        if (confirmed) {\n          dispatch(clearWatchLaterList());\n        }\n        setConfirmationDialogProps((state) => ({\n          ...state,\n          open: false,\n        }));\n      },\n    });\n    handleClose();\n  };\n\n  const handleRemoveViewed = () => {\n    setConfirmationDialogProps({\n      open: true,\n      title: 'Remove viewed videos',\n      text: 'Are you sure that you want to remove all viewed videos from the watch later list?',\n      onClose: (confirmed) => {\n        if (confirmed) {\n          dispatch(clearWatchLaterList({ viewedOnly: true }));\n        }\n        setConfirmationDialogProps((state) => ({\n          ...state,\n          open: false,\n        }));\n      },\n    });\n    handleClose();\n  };\n\n  const handleExport = () => {\n    const videos = watchLaterVideos.map((video) => ({\n      ...video,\n      url: `https://www.youtube.com/watch?v=${video.id}`,\n    }));\n    const data = JSON.stringify(videos, null, 4);\n    const file = new Blob([data], { type: 'text/json' });\n    downloadFile(file, 'watch_later_videos.json');\n    handleClose();\n  };\n\n  return (\n    <>\n      <IconButton\n        id=\"more-button\"\n        aria-label=\"more\"\n        aria-controls={open ? 'more-menu' : undefined}\n        aria-expanded={open ? 'true' : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <StyledMenu\n        id=\"more-menu\"\n        MenuListProps={{\n          'aria-labelledby': 'more-button',\n          dense: true,\n        }}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n      >\n        <MenuItem onClick={handleRemoveAll}>\n          <ListItemIcon>\n            <ClearAllIcon />\n          </ListItemIcon>\n          <ListItemText>Remove all videos</ListItemText>\n        </MenuItem>\n        {viewedCount > 0 ? (\n          <MenuItem onClick={handleRemoveViewed}>\n            <ListItemIcon>\n              <VisibilityOffIcon />\n            </ListItemIcon>\n            <ListItemText>Remove viewed videos</ListItemText>\n          </MenuItem>\n        ) : null}\n        <MenuItem onClick={handleExport}>\n          <ListItemIcon>\n            <FileDownloadIcon />\n          </ListItemIcon>\n          <ListItemText>Export</ListItemText>\n        </MenuItem>\n      </StyledMenu>\n      <ConfirmationDialog {...confirmationDialogProps} />\n    </>\n  );\n}\n\nexport default WatchLaterViewActions;\n","import React, { useState, useMemo } from 'react';\nimport {\n  IconButton,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport { StyledMenu } from 'ui/components/shared';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport TimerOffIcon from '@mui/icons-material/TimerOff';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport Check from '@mui/icons-material/Check';\nimport { selectSettings } from 'store/selectors/settings';\nimport { setRecentVideosDisplayOptions } from 'store/reducers/settings';\nimport { VideoDisplayOption, Nullable } from 'types';\n\ninterface RecentViewActionsProps {}\n\nfunction RecentViewActions(props: RecentViewActionsProps) {\n  const settings = useAppSelector(selectSettings);\n  const dispatch = useAppDispatch();\n  const [anchorEl, setAnchorEl] = useState<Nullable<HTMLElement>>(null);\n  const open = Boolean(anchorEl);\n  const { hideViewedVideos, hideWatchLaterVideos } =\n    settings.recentVideosDisplayOptions;\n  const hasEnabledOptions = useMemo(() => {\n    const options = Object.keys(\n      settings.recentVideosDisplayOptions\n    ) as VideoDisplayOption[];\n    return options.reduce(\n      (acc, cur) => settings.recentVideosDisplayOptions[cur] || acc,\n      false\n    );\n  }, [settings.recentVideosDisplayOptions]);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleFilterViewedToggle = () => {\n    dispatch(\n      setRecentVideosDisplayOptions({\n        hideViewedVideos: !hideViewedVideos,\n      })\n    );\n  };\n\n  const handleFilterWatchLaterToggle = () => {\n    dispatch(\n      setRecentVideosDisplayOptions({\n        hideWatchLaterVideos: !hideWatchLaterVideos,\n      })\n    );\n  };\n\n  return (\n    <>\n      <IconButton\n        id=\"more-button\"\n        aria-label=\"more\"\n        aria-controls={open ? 'more-menu' : undefined}\n        aria-expanded={open ? 'true' : undefined}\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <StyledMenu\n        id=\"more-menu\"\n        MenuListProps={{\n          'aria-labelledby': 'more-button',\n          dense: true,\n        }}\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n      >\n        <MenuItem onClick={handleFilterViewedToggle}>\n          <ListItemIcon>\n            {hideViewedVideos ? (\n              <Check />\n            ) : (\n              !hasEnabledOptions && <VisibilityOffIcon />\n            )}\n          </ListItemIcon>\n          <ListItemText>Filter viewed videos</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={handleFilterWatchLaterToggle}>\n          <ListItemIcon>\n            {hideWatchLaterVideos ? (\n              <Check />\n            ) : (\n              !hasEnabledOptions && <TimerOffIcon />\n            )}\n          </ListItemIcon>\n          <ListItemText>Filter watch later videos</ListItemText>\n        </MenuItem>\n      </StyledMenu>\n    </>\n  );\n}\n\nexport default RecentViewActions;\n","import React from 'react';\nimport { HomeView } from 'types';\nimport WatchLaterViewActions from './WatchLaterViewActions';\nimport RecentViewActions from './RecentViewActions';\nimport { useAppSelector } from 'store';\nimport { selectActiveChannelsCount } from 'store/selectors/channels';\n\ninterface TabActionsProps {\n  tab: HomeView;\n  recentVideosCount: number;\n  watchLaterVideosCount: number;\n}\n\nfunction TabActions(props: TabActionsProps) {\n  const { tab, recentVideosCount, watchLaterVideosCount } = props;\n  const channelsCount = useAppSelector(selectActiveChannelsCount);\n\n  switch (tab) {\n    case HomeView.Recent:\n      return channelsCount > 0 && recentVideosCount > 0 ? (\n        <RecentViewActions />\n      ) : null;\n    case HomeView.WatchLater:\n      return channelsCount > 0 && watchLaterVideosCount > 0 ? (\n        <WatchLaterViewActions />\n      ) : null;\n    default:\n      return null;\n  }\n}\n\nexport default React.memo(TabActions);\n","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { Box, Tabs } from '@mui/material';\nimport { Layout } from 'ui/components/shared';\nimport { HomeView } from 'types';\nimport Tab from './Tab';\nimport TabPanel, { RecentVideosCount } from './TabPanel';\nimport { useAppSelector } from 'store';\nimport { selectSettings } from 'store/selectors/settings';\nimport { selectWatchLaterVideosCount } from 'store/selectors/videos';\nimport TabActions from './TabActions';\n\ninterface HomeProps {}\n\nexport function Home(props: HomeProps) {\n  const settings = useAppSelector(selectSettings);\n  const [activeTab, setActiveTab] = useState(settings.defaultView);\n  const [recentVideosCount, setRecentVideosCount] = useState<RecentVideosCount>(\n    {\n      displayed: 0,\n      total: 0,\n    }\n  );\n  const watchLaterVideosCount = useAppSelector(selectWatchLaterVideosCount);\n\n  useEffect(() => {\n    if (activeTab !== settings.defaultView) {\n      setActiveTab(settings.defaultView);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings.defaultView]);\n\n  const handleTabChange = (event: ChangeEvent<{}>, value: HomeView) => {\n    setActiveTab(value);\n  };\n\n  const handleCountChange = (tab: HomeView, count: RecentVideosCount) => {\n    if (tab === HomeView.Recent) {\n      setRecentVideosCount(count);\n    }\n  };\n\n  return (\n    <Layout>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          borderBottom: 1,\n          borderColor: 'divider',\n          gap: 2,\n          px: 3,\n        }}\n      >\n        <Tabs\n          sx={{ flexGrow: 1, pt: 1 }}\n          value={activeTab}\n          onChange={handleTabChange}\n          aria-label=\"tabs\"\n        >\n          <Tab label=\"All\" value={HomeView.All} />\n          <Tab\n            label=\"Recent\"\n            value={HomeView.Recent}\n            badge={recentVideosCount.displayed}\n          />\n          <Tab\n            label=\"Watch later\"\n            value={HomeView.WatchLater}\n            badge={watchLaterVideosCount}\n          />\n        </Tabs>\n        <TabActions\n          tab={activeTab}\n          recentVideosCount={recentVideosCount.total}\n          watchLaterVideosCount={watchLaterVideosCount}\n        />\n      </Box>\n      <TabPanel tab={activeTab} onCountChange={handleCountChange} />\n    </Layout>\n  );\n}\n","import React from 'react';\nimport { Avatar, Link, Fade } from '@mui/material';\nimport { Channel } from 'types';\n\ninterface ChannelPictureProps {\n  channel: Channel;\n}\n\nfunction ChannelPicture(props: ChannelPictureProps) {\n  const { channel } = props;\n\n  return (\n    <Fade in={true}>\n      <Link\n        sx={{ textDecoration: 'none' }}\n        href={channel.url}\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        <Avatar\n          sx={{\n            width: 60,\n            height: 60,\n          }}\n          alt={channel.title}\n          src={channel.thumbnail}\n          aria-label=\"channel\"\n        />\n      </Link>\n    </Fade>\n  );\n}\n\nfunction propsAreEqual(\n  prevProps: ChannelPictureProps,\n  nextProps: ChannelPictureProps\n) {\n  return (\n    prevProps.channel.title === nextProps.channel.title &&\n    prevProps.channel.thumbnail === nextProps.channel.thumbnail &&\n    prevProps.channel.url === nextProps.channel.url\n  );\n}\n\nexport default React.memo(ChannelPicture, propsAreEqual);\n","import React from 'react';\nimport { Link } from '@mui/material';\nimport { Channel } from 'types';\n\ninterface ChannelTitleProps {\n  channel: Channel;\n}\n\nfunction ChannelTitle(props: ChannelTitleProps) {\n  const { channel } = props;\n\n  return (\n    <Link\n      sx={{\n        color: 'text.primary',\n        textDecoration: 'none',\n      }}\n      href={channel.url}\n      target=\"_blank\"\n      rel=\"noopener\"\n    >\n      {channel.title}\n    </Link>\n  );\n}\n\nfunction propsAreEqual(\n  prevProps: ChannelTitleProps,\n  nextProps: ChannelTitleProps\n) {\n  return (\n    prevProps.channel.title === nextProps.channel.title &&\n    prevProps.channel.url === nextProps.channel.url\n  );\n}\n\nexport default React.memo(ChannelTitle, propsAreEqual);\n","import React, { useState } from 'react';\nimport { Box, Card, CardHeader, Tooltip, IconButton } from '@mui/material';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { Channel } from 'types';\nimport { useAppSelector } from 'store';\nimport { selectChannel } from 'store/selectors/channels';\nimport { useAppDispatch } from 'store';\nimport { addChannel, removeChannel } from 'store/reducers/channels';\nimport ChannelPicture from '../ChannelCard/ChannelPicture';\nimport ChannelTitle from '../ChannelCard/ChannelTitle';\n\ninterface PickChannelCardProps {\n  channel: Channel;\n}\n\nexport default function PickChannelCard(props: PickChannelCardProps) {\n  const { channel } = props;\n  const [changed, setChanged] = useState(false);\n  const exists = useAppSelector(selectChannel(channel));\n  const dispatch = useAppDispatch();\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <Card\n        elevation={0}\n        sx={{\n          flexGrow: 1,\n          bgcolor: 'transparent',\n        }}\n      >\n        <CardHeader\n          sx={{\n            pt: 2.5,\n            pl: 0,\n            pr: 1,\n            '& .MuiCardHeader-title': {\n              fontSize: '0.975rem',\n              mb: 0.25,\n            },\n            '& .MuiCardHeader-action': {\n              alignSelf: 'center',\n              ml: 2,\n            },\n          }}\n          avatar={<ChannelPicture channel={channel} />}\n          action={\n            <Tooltip\n              title={exists ? (changed ? 'Remove channel' : '') : 'Add channel'}\n              placement=\"left\"\n              arrow\n            >\n              <IconButton\n                sx={{\n                  border: 1,\n                  transition: (theme) =>\n                    theme.transitions.create([\n                      'color',\n                      'background-color',\n                      'border-color',\n                    ]),\n                  ...(exists\n                    ? {\n                        bgcolor: 'secondary.main',\n                        color: 'common.white',\n                        borderColor: 'secondary.main',\n                        ':hover': {\n                          bgcolor: 'secondary.main',\n                          color: 'common.white',\n                          borderColor: 'secondary.main',\n                        },\n                        '&.Mui-disabled': {\n                          bgcolor: 'secondary.light',\n                          color: 'common.white',\n                          opacity: 0.5,\n                        },\n                      }\n                    : {\n                        borderColor: 'custom.lightBorder',\n                        ':hover': {\n                          bgcolor: 'transparent',\n                          color: 'secondary.main',\n                          borderColor: 'secondary.main',\n                        },\n                      }),\n                }}\n                size=\"small\"\n                aria-label=\"add\"\n                disabled={exists && !changed}\n                onClick={() => {\n                  const action = exists ? removeChannel : addChannel;\n                  dispatch(action(channel));\n                  setChanged(true);\n                }}\n                disableRipple\n              >\n                <CheckIcon />\n              </IconButton>\n            </Tooltip>\n          }\n          title={<ChannelTitle channel={channel} />}\n          subheader={channel.description}\n        />\n      </Card>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Stack, Divider } from '@mui/material';\nimport { Alert, ProgressBar } from 'ui/components/shared';\nimport { useFindChannelByNameQuery } from 'store/services/youtube';\nimport { Channel } from 'types';\nimport PickChannelCard from './PickChannelCard';\n\ninterface ChannelResultsProps {\n  search: string;\n}\n\nexport default function ChannelResults(props: ChannelResultsProps) {\n  const { search } = props;\n  const { data, error, isLoading } = useFindChannelByNameQuery(\n    { name: search },\n    { skip: search === '' }\n  );\n  const results = data?.items || [];\n\n  return error ? (\n    <Alert error={error} closable />\n  ) : isLoading ? (\n    <ProgressBar variant=\"indeterminate\" />\n  ) : (\n    <Stack sx={{ px: 3, overflow: 'auto' }} divider={<Divider />}>\n      {results.map((channel: Channel, index: number) => (\n        <PickChannelCard key={index} channel={channel} />\n      ))}\n    </Stack>\n  );\n}\n","import React from 'react';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from '@mui/material';\nimport { Channel } from 'types';\nimport ChannelPicture from '../ChannelPicture';\n\ninterface RemoveChannelDialogProps {\n  open: boolean;\n  channel: Channel;\n  onClose: (confirmed?: boolean) => void;\n}\n\nexport default function RemoveChannelDialog(props: RemoveChannelDialogProps) {\n  const { open, channel, onClose } = props;\n\n  const handleConfirm = () => {\n    onClose(true);\n  };\n\n  const handleClose = () => {\n    onClose(false);\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogContent>\n        <Box sx={{ display: 'flex' }}>\n          <ChannelPicture channel={channel} />\n          <Box\n            sx={{\n              flexGrow: 1,\n              display: 'flex',\n              flexDirection: 'column',\n              px: 2,\n            }}\n          >\n            <DialogTitle sx={{ px: 0, pt: 0 }}>\n              Remove {channel.title}'s channel ?\n            </DialogTitle>\n            <DialogContentText>\n              Are you sure that you want to remove this channel?\n            </DialogContentText>\n          </Box>\n        </Box>\n      </DialogContent>\n      <DialogActions sx={{ px: 2, pb: 2 }}>\n        <Button color=\"inherit\" onClick={handleClose} autoFocus>\n          Cancel\n        </Button>\n        <Button color=\"primary\" variant=\"contained\" onClick={handleConfirm}>\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from 'react';\nimport { Channel, Nullable } from 'types';\nimport { useAppDispatch } from 'store';\nimport { removeChannel } from 'store/reducers/channels';\nimport RemoveChannelDialog from './RemoveChannelDialog';\n\ninterface ChannelDialogsProps {\n  channel: Channel;\n  openedDialog: Nullable<string>;\n  onClose: () => void;\n}\n\nfunction ChannelDialogs(props: ChannelDialogsProps) {\n  const { channel, openedDialog, onClose } = props;\n  const dispatch = useAppDispatch();\n\n  return (\n    <RemoveChannelDialog\n      open={openedDialog === 'remove-channel'}\n      channel={channel}\n      onClose={(confirmed) => {\n        if (confirmed) {\n          dispatch(removeChannel(channel));\n        }\n        onClose();\n      }}\n    />\n  );\n}\n\nfunction propsAreEqual(\n  prevProps: ChannelDialogsProps,\n  nextProps: ChannelDialogsProps\n) {\n  return (\n    prevProps.openedDialog === nextProps.openedDialog &&\n    prevProps.channel.id === nextProps.channel.id\n  );\n}\n\nexport default React.memo(ChannelDialogs, propsAreEqual);\n","import React, { useState } from 'react';\nimport { IconButton, Divider, MenuItem } from '@mui/material';\nimport { useAppDispatch } from 'store';\nimport {\n  toggleChannel,\n  toggleChannelNotifications,\n} from 'store/reducers/channels';\nimport { StyledMenu } from 'ui/components/shared';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport NotificationsActiveOutlinedIcon from '@mui/icons-material/NotificationsActiveOutlined';\nimport NotificationsOffOutlinedIcon from '@mui/icons-material/NotificationsOffOutlined';\nimport VisibilityOutlinedIcon from '@mui/icons-material/VisibilityOutlined';\nimport VisibilityOffOutlinedIcon from '@mui/icons-material/VisibilityOffOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport { Channel, Nullable } from 'types';\nimport ChannelDialogs from '../ChannelDialogs';\n\ninterface ChannelActionsProps {\n  channel: Channel;\n}\n\nfunction ChannelActions(props: ChannelActionsProps) {\n  const { channel } = props;\n  const [anchorEl, setAnchorEl] = useState<Nullable<HTMLElement>>(null);\n  const [openedDialog, setOpenedDialog] = useState<Nullable<string>>(null);\n  const dispatch = useAppDispatch();\n  const isMenuOpen = Boolean(anchorEl);\n\n  const handleMenuClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleRemoveClick = () => {\n    setOpenedDialog('remove-channel');\n    handleMenuClose();\n  };\n\n  const handleDialogsClose = () => {\n    setOpenedDialog(null);\n  };\n\n  return (\n    <>\n      <IconButton aria-label=\"settings\" onClick={handleMenuClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <StyledMenu\n        anchorEl={anchorEl}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n      >\n        <MenuItem\n          onClick={() => {\n            dispatch(toggleChannelNotifications(channel));\n            handleMenuClose();\n          }}\n          disableRipple\n        >\n          {channel.notifications?.isDisabled ? (\n            <>\n              <NotificationsActiveOutlinedIcon />\n              Enable notifications\n            </>\n          ) : (\n            <>\n              <NotificationsOffOutlinedIcon />\n              Disable notifications\n            </>\n          )}\n        </MenuItem>\n        <Divider sx={{ my: 0.5 }} />\n        <MenuItem\n          onClick={() => {\n            dispatch(toggleChannel(channel));\n            handleMenuClose();\n          }}\n          disableRipple\n        >\n          {channel.isHidden ? (\n            <>\n              <VisibilityOutlinedIcon />\n              Unhide\n            </>\n          ) : (\n            <>\n              <VisibilityOffOutlinedIcon />\n              Hide\n            </>\n          )}\n        </MenuItem>\n        <MenuItem\n          sx={{ color: 'primary.main' }}\n          onClick={handleRemoveClick}\n          disableRipple\n        >\n          <DeleteOutlineOutlinedIcon className=\"inherit-color\" />\n          Remove\n        </MenuItem>\n      </StyledMenu>\n      <ChannelDialogs\n        channel={channel}\n        openedDialog={openedDialog}\n        onClose={handleDialogsClose}\n      />\n    </>\n  );\n}\n\nfunction propsAreEqual(\n  prevProps: ChannelActionsProps,\n  nextProps: ChannelActionsProps\n) {\n  return (\n    JSON.stringify(prevProps.channel) === JSON.stringify(nextProps.channel)\n  );\n}\n\nexport default React.memo(ChannelActions, propsAreEqual);\n","import React from 'react';\nimport { IconButton } from '@mui/material';\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\n\ninterface DragHandleProps {}\n\nexport default function DragHandle(props: DragHandleProps) {\n  return (\n    <IconButton\n      sx={{ cursor: 'move', mr: 1.5 }}\n      aria-label=\"drag-handle\"\n      {...props}\n    >\n      <DragIndicatorIcon />\n    </IconButton>\n  );\n}\n","import React from 'react';\nimport { Box, Paper, Card, CardHeader, Collapse } from '@mui/material';\nimport { Channel } from 'types';\nimport ChannelPicture from './ChannelPicture';\nimport ChannelTitle from './ChannelTitle';\nimport { DraggableSyntheticListeners } from '@dnd-kit/core';\nimport ChannelActions from './ChannelActions';\nimport DragHandle from './DragHandle';\n\nexport interface ChannelCardProps {\n  channel: Channel;\n  style?: React.CSSProperties;\n  isOverlay?: boolean;\n  showDragHandle?: boolean;\n  listeners?: DraggableSyntheticListeners;\n}\n\nconst ChannelCard = React.forwardRef(\n  (props: ChannelCardProps, ref: React.LegacyRef<HTMLDivElement>) => {\n    const { channel, isOverlay, showDragHandle, listeners, ...rest } = props;\n\n    const renderCard = React.useMemo(\n      () => (\n        <Card elevation={0} sx={{ flexGrow: 1, bgcolor: 'transparent' }}>\n          <CardHeader\n            sx={{\n              pt: 2.5,\n              pl: 0,\n              pr: 1,\n              '& .MuiCardHeader-title': {\n                fontSize: '0.975rem',\n                mb: 0.25,\n              },\n              '& .MuiCardHeader-action': {\n                ml: 2,\n              },\n              ...(channel.isHidden\n                ? {\n                    '& .MuiCardHeader-avatar': {\n                      opacity: 0.5,\n                    },\n                    '& .MuiCardHeader-content': {\n                      textDecoration: 'line-through',\n                      opacity: 0.5,\n                    },\n                  }\n                : {}),\n            }}\n            avatar={<ChannelPicture channel={channel} />}\n            action={<ChannelActions channel={channel} />}\n            title={<ChannelTitle channel={channel} />}\n            subheader={channel.description}\n          />\n        </Card>\n      ),\n      [channel]\n    );\n\n    return (\n      <div ref={ref} {...rest}>\n        <Paper elevation={isOverlay ? 1 : 0}>\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              bgcolor: 'background.default',\n            }}\n          >\n            {isOverlay ? (\n              <DragHandle />\n            ) : (\n              <Collapse in={showDragHandle} orientation=\"horizontal\">\n                <DragHandle {...listeners} />\n              </Collapse>\n            )}\n            {renderCard}\n          </Box>\n        </Paper>\n      </div>\n    );\n  }\n);\n\nexport default ChannelCard;\n","import React from 'react';\nimport { useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport ChannelCard, { ChannelCardProps } from '.';\n\nexport default function DraggableCard(props: ChannelCardProps) {\n  const { channel, ...rest } = props;\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n    isSorting,\n  } = useSortable({\n    id: channel.id,\n    data: { channel },\n  });\n\n  const style = {\n    transition: isSorting ? transition : 'none',\n    opacity: isDragging ? 0.5 : 1,\n    transform: CSS.Transform.toString(transform),\n  } as React.CSSProperties;\n\n  return (\n    <ChannelCard\n      ref={setNodeRef}\n      channel={channel}\n      style={style}\n      listeners={listeners}\n      {...attributes}\n      {...rest}\n    />\n  );\n}\n","import React, { useState } from 'react';\nimport { Stack, Divider } from '@mui/material';\nimport ChannelCard from './ChannelCard';\nimport DraggableChannelCard from './ChannelCard/DraggableCard';\nimport { useAppDispatch } from 'store';\nimport {\n  DndContext,\n  closestCenter,\n  DragStartEvent,\n  DragEndEvent,\n  DragOverlay,\n} from '@dnd-kit/core';\nimport {\n  SortableContext,\n  verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport {\n  restrictToVerticalAxis,\n  restrictToFirstScrollableAncestor,\n} from '@dnd-kit/modifiers';\nimport { moveChannel } from 'store/reducers/channels';\nimport { Channel, Nullable } from 'types';\n\ninterface ChannelListProps {\n  channels: Channel[];\n  showDragHandles?: boolean;\n}\n\nfunction ChannelList(props: ChannelListProps) {\n  const { channels, showDragHandles } = props;\n  const [draggedChannel, setDraggedChannel] = useState<Nullable<Channel>>(null);\n  const dispatch = useAppDispatch();\n\n  const handleDragStart = (event: DragStartEvent) => {\n    const { active } = event;\n    setDraggedChannel(active.data.current?.channel);\n  };\n\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event;\n    if (active.id !== over?.id) {\n      const from = channels.findIndex((c: Channel) => c.id === active.id);\n      const to = channels.findIndex((c: Channel) => c.id === over?.id);\n      dispatch(moveChannel({ from, to }));\n    }\n    setDraggedChannel(null);\n  };\n\n  return (\n    <>\n      <DndContext\n        collisionDetection={closestCenter}\n        modifiers={[restrictToVerticalAxis, restrictToFirstScrollableAncestor]}\n        onDragStart={handleDragStart}\n        onDragEnd={handleDragEnd}\n      >\n        <SortableContext\n          items={channels}\n          strategy={verticalListSortingStrategy}\n        >\n          <Stack sx={{ px: 3, overflow: 'auto' }} divider={<Divider />}>\n            {channels.map((channel: Channel, index: number) => (\n              <DraggableChannelCard\n                key={index}\n                channel={channel}\n                showDragHandle={showDragHandles}\n              />\n            ))}\n          </Stack>\n        </SortableContext>\n        <DragOverlay>\n          {draggedChannel ? (\n            <ChannelCard channel={draggedChannel} isOverlay />\n          ) : null}\n        </DragOverlay>\n      </DndContext>\n    </>\n  );\n}\n\nfunction propsAreEqual(\n  prevProps: ChannelListProps,\n  nextProps: ChannelListProps\n) {\n  return (\n    prevProps.showDragHandles === nextProps.showDragHandles &&\n    JSON.stringify(prevProps.channels) === JSON.stringify(nextProps.channels)\n  );\n}\n\nexport default React.memo(ChannelList, propsAreEqual);\n","import React, { useRef, MouseEvent, ChangeEvent } from 'react';\nimport { Box, Typography, Button } from '@mui/material';\nimport UploadIcon from '@mui/icons-material/Upload';\nimport { readFile } from 'helpers/file';\nimport { useAppDispatch } from 'store';\nimport { setChannels } from 'store/reducers/channels';\nimport { Nullable } from 'types';\n\ninterface NoChannelsProps {}\n\nexport default function NoChannels(props: NoChannelsProps) {\n  const fileInputRef = useRef<Nullable<HTMLInputElement>>(null);\n  const dispatch = useAppDispatch();\n\n  const importChannels = (event: ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) {\n      return;\n    }\n    try {\n      readFile(file).then((content) => {\n        const channels = JSON.parse(content as string);\n        dispatch(setChannels({ list: channels }));\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Typography variant=\"h5\" gutterBottom>\n        No channels found.\n      </Typography>\n      <Typography\n        sx={{ textAlign: 'center', fontSize: '1.125rem' }}\n        variant=\"body1\"\n        color=\"text.secondary\"\n        gutterBottom\n      >\n        Start by typing a channel name in the search bar above\n        <br />\n        or\n      </Typography>\n      <Button\n        sx={{ textTransform: 'capitalize' }}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => {\n          fileInputRef.current?.click();\n        }}\n      >\n        Import channels\n        <UploadIcon sx={{ fontSize: '1.25rem', ml: 0.5 }} />\n      </Button>\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        style={{\n          display: 'none',\n          visibility: 'hidden',\n          overflow: 'hidden',\n          width: 0,\n          height: 0,\n        }}\n        accept=\".json\"\n        onClick={(event: MouseEvent<HTMLInputElement>) => {\n          event.currentTarget.value = '';\n        }}\n        onChange={importChannels}\n      />\n    </Box>\n  );\n}\n","import React, { useState } from 'react';\nimport { Layout, SearchInput } from 'ui/components/shared';\nimport { Box, IconButton, Fade, Collapse, Tooltip } from '@mui/material';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SwapVertIcon from '@mui/icons-material/SwapVert';\nimport ChannelResults from './ChannelResults';\nimport ChannelList from './ChannelList';\nimport NoChannels from './NoChannels';\nimport { useAppSelector } from 'store';\nimport { selectChannels } from 'store/selectors/channels';\nimport { downloadFile } from 'helpers/file';\n\ninterface ChannelsProps {}\n\nexport function Channels(props: ChannelsProps) {\n  const [search, setSearch] = useState('');\n  const [showDragHandles, setShowDragHandles] = useState(false);\n  const channels = useAppSelector(selectChannels);\n  const isSearchActive = Boolean(search);\n\n  const showList = () => {\n    setSearch('');\n  };\n\n  const toggleDragHandles = () => {\n    setShowDragHandles(!showDragHandles);\n  };\n\n  const exportChannels = () => {\n    const data = JSON.stringify(channels, null, 4);\n    const file = new Blob([data], { type: 'text/json' });\n    downloadFile(file, 'channels.json');\n  };\n\n  return (\n    <Layout>\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          borderBottom: 1,\n          borderColor: 'divider',\n          gap: 2,\n          py: 1.5,\n          pr: 4,\n          pl: 3,\n        }}\n      >\n        <Box sx={{ flexGrow: 1, display: 'flex' }}>\n          <Collapse in={isSearchActive} orientation=\"horizontal\">\n            <Tooltip title=\"Go back to channels list\" placement=\"bottom\" arrow>\n              <IconButton\n                sx={{ mr: 2, bgcolor: 'custom.lightGrey' }}\n                aria-label=\"show-list\"\n                onClick={showList}\n              >\n                <ArrowBackIcon />\n              </IconButton>\n            </Tooltip>\n          </Collapse>\n          <SearchInput\n            width={400}\n            placeholder=\"Search for a channel…\"\n            debounceTime={700}\n            onChange={(value: string) => {\n              setSearch(value);\n            }}\n            onClear={showList}\n            clearable\n          />\n        </Box>\n        <Fade in={!isSearchActive && channels.length > 1}>\n          <Tooltip title=\"Toggle drag handles\" placement=\"left\" arrow>\n            <IconButton\n              sx={showDragHandles ? { bgcolor: 'action.selected' } : {}}\n              aria-label=\"toggle-drag-handles\"\n              onClick={toggleDragHandles}\n            >\n              <SwapVertIcon />\n            </IconButton>\n          </Tooltip>\n        </Fade>\n        <Fade in={!isSearchActive && channels.length > 0}>\n          <Tooltip title=\"Export\" placement=\"left\" arrow>\n            <IconButton aria-label=\"export\" onClick={exportChannels}>\n              <DownloadIcon />\n            </IconButton>\n          </Tooltip>\n        </Fade>\n      </Box>\n      {search ? (\n        <ChannelResults search={search} />\n      ) : channels.length > 0 ? (\n        <ChannelList channels={channels} showDragHandles={showDragHandles} />\n      ) : (\n        <NoChannels />\n      )}\n    </Layout>\n  );\n}\n","import { styled, alpha } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\n\nconst Input = styled(InputBase)(({ theme }) => ({\n  borderRadius: 4,\n  position: 'relative',\n  backgroundColor: theme.palette.background.default,\n  border: `1px solid ${\n    theme.palette.mode === 'light'\n      ? 'rgba(0, 0, 0, 0.23)'\n      : 'rgba(255, 255, 255, 0.23)'\n  }`,\n  fontSize: '0.9rem',\n  width: 'auto',\n  minWidth: 320,\n  padding: theme.spacing(1, 1.5),\n  transition: theme.transitions.create(['border-color', 'box-shadow']),\n  '&:focus-within': {\n    boxShadow: `${alpha(theme.palette.secondary.main, 0.25)} 0 0 0 0.2rem`,\n    borderColor: theme.palette.secondary.main,\n  },\n  '& .MuiInputBase-input': {\n    padding: 0,\n  },\n  '& .MuiInputAdornment-root': {\n    marginLeft: theme.spacing(0.75),\n    '& .MuiButtonBase-root': {\n      padding: theme.spacing(0.75, 1),\n      '& > svg': {\n        width: '0.85em',\n      },\n    },\n  },\n}));\n\nexport default Input;\n","import { styled } from '@mui/material/styles';\nimport MuiSwitch from '@mui/material/Switch';\n\nconst Switch = styled(MuiSwitch)(({ theme }) => ({\n  width: 36,\n  height: 20,\n  padding: 0,\n  display: 'flex',\n  '& .MuiSwitch-switchBase': {\n    padding: 3,\n    color: theme.palette.grey[500],\n    '&.Mui-checked': {\n      transform: 'translateX(16px)',\n      color: theme.palette.common.white,\n      '& + .MuiSwitch-track': {\n        opacity: 1,\n        backgroundColor: theme.palette.secondary.main,\n        borderColor: theme.palette.secondary.main,\n      },\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    width: 14,\n    height: 14,\n    boxShadow: 'none',\n  },\n  '& .MuiSwitch-track': {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 20 / 2,\n    opacity: 1,\n    backgroundColor:\n      theme.palette.mode === 'light'\n        ? theme.palette.common.white\n        : 'transparent',\n  },\n}));\n\nexport default Switch;\n","import { styled } from '@mui/material/styles';\nimport MuiSelect from '@mui/material/Select';\n\nconst Select = styled(MuiSelect)(({ theme }) => ({\n  fontSize: '0.9rem',\n  '&.Mui-focused': {\n    '& .MuiOutlinedInput-notchedOutline': {\n      borderColor: theme.palette.secondary.light,\n    },\n  },\n})) as unknown as typeof MuiSelect;\n\nexport default Select;\n","import { styled, Theme } from '@mui/material/styles';\nimport MuiMenuItem from '@mui/material/MenuItem';\n\nconst MenuItemSelectedStyle = (theme: Theme) => ({\n  backgroundColor: theme.palette.secondary.main,\n  color: theme.palette.common.white,\n});\n\nconst MenuItem = styled(MuiMenuItem)(({ theme }) => ({\n  fontSize: '0.9rem',\n  '&.Mui-selected': {\n    ...MenuItemSelectedStyle(theme),\n    '&.Mui-focusVisible': MenuItemSelectedStyle(theme),\n  },\n  '&.Mui-selected:hover': MenuItemSelectedStyle(theme),\n})) as typeof MuiMenuItem;\n\nexport default MenuItem;\n","import React, { useState } from 'react';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { noop } from 'helpers/utils';\nimport Input from './Input';\n\ninterface ISecretProps {\n  value: string;\n  placeholder?: string;\n  onChange?: (value: any) => void;\n}\n\nexport default function Secret(props: ISecretProps) {\n  const [isSecretVisible, setSecretVisibility] = useState(false);\n\n  const toggleSecretVisibility = () => {\n    setSecretVisibility(!isSecretVisible);\n  };\n\n  return (\n    <Input\n      {...props}\n      type={isSecretVisible ? 'text' : 'password'}\n      endAdornment={\n        <InputAdornment position=\"end\">\n          <IconButton\n            aria-label=\"toggle visibility\"\n            onClick={toggleSecretVisibility}\n            onMouseDown={noop}\n            edge=\"end\"\n          >\n            {isSecretVisible ? <VisibilityOff /> : <Visibility />}\n          </IconButton>\n        </InputAdornment>\n      }\n    />\n  );\n}\n","import React, { ChangeEvent } from 'react';\nimport { Box, Typography, SelectChangeEvent } from '@mui/material';\nimport { SettingType } from 'types';\nimport Input from './Input';\nimport Switch from './Switch';\nimport Select from './Select';\nimport MenuItem from './MenuItem';\nimport Secret from './Secret';\n\ntype ValueType = string | number | boolean;\n\ntype OptionType = {\n  label: string;\n  value: number | string;\n};\n\ninterface FieldProps {\n  label: string;\n  description?: string | React.ReactNode;\n  placeholder?: string;\n  options?: OptionType[];\n  value: ValueType;\n  type: SettingType;\n  onChange?: (value: any) => void;\n}\n\nexport default function Field(props: FieldProps) {\n  const {\n    label,\n    description,\n    placeholder,\n    options = [],\n    value,\n    type,\n    onChange,\n  } = props;\n\n  const handleChange = (\n    event:\n      | ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n      | SelectChangeEvent\n  ) => {\n    if (onChange) {\n      const value =\n        type === SettingType.Boolean\n          ? (event.target as HTMLInputElement).checked\n          : event.target.value;\n      onChange(value);\n    }\n  };\n\n  const renderField = () => {\n    switch (type) {\n      case SettingType.String:\n        return (\n          <Input\n            value={value}\n            placeholder={placeholder}\n            onChange={handleChange}\n          />\n        );\n      case SettingType.Secret:\n        return (\n          <Secret\n            value={value as string}\n            placeholder={placeholder}\n            onChange={handleChange}\n          />\n        );\n      case SettingType.Boolean:\n        return (\n          <Switch\n            checked={value as boolean}\n            onChange={handleChange}\n            inputProps={{ 'aria-label': 'checkbox' }}\n          />\n        );\n      case SettingType.List:\n        return (\n          <Select value={value as string} size=\"small\" onChange={handleChange}>\n            {options.map((option: OptionType, index: number) => (\n              <MenuItem key={index} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        width: '100%',\n        py: 2.5,\n      }}\n    >\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n        }}\n      >\n        <Typography variant=\"subtitle1\">{label}</Typography>\n        {description ? (\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {description}\n          </Typography>\n        ) : null}\n      </Box>\n      {renderField()}\n    </Box>\n  );\n}\n","import React, { MouseEvent } from 'react';\nimport { Link } from '@mui/material';\nimport { Alert } from 'ui/components/shared';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { setSettings } from 'store/reducers/settings';\nimport { selectApp } from 'store/selectors/app';\nimport { Settings } from 'types';\n\nconst { REACT_APP_YOUTUBE_API_KEY: temporaryApiKey } = process.env;\n\ninterface AlertsProps {\n  settings: Settings;\n}\n\nexport default function Alerts(props: AlertsProps) {\n  const { settings } = props;\n  const app = useAppSelector(selectApp);\n  const dispatch = useAppDispatch();\n\n  const handleUseTemporaryKey = (event: MouseEvent) => {\n    event.preventDefault();\n    dispatch(setSettings({ apiKey: temporaryApiKey }));\n  };\n\n  return (\n    <>\n      <Alert\n        open={app.loaded && !settings.apiKey}\n        severity=\"warning\"\n        closable\n        syncOpen\n      >\n        In order to use this app you need a Youtube API key!{' '}\n        <Link\n          href=\"#\"\n          color=\"secondary\"\n          rel=\"noopener\"\n          onClick={handleUseTemporaryKey}\n        >\n          Use a temporary key.\n        </Link>\n      </Alert>\n      <Alert\n        open={app.loaded && settings.apiKey === temporaryApiKey}\n        severity=\"warning\"\n        closable\n        syncOpen\n      >\n        You are using a temporary API key, which has a limited quota & might be\n        used by other users. It is recommended to create your own key for daily\n        use.\n      </Alert>\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Stack, Divider, Link } from '@mui/material';\nimport { Layout } from 'ui/components/shared';\nimport { HomeView, SettingType, VideosSeniority } from 'types';\nimport Field from './Field';\nimport { useAppDispatch, useAppSelector } from 'store';\nimport { selectSettings } from 'store/selectors/settings';\nimport { setSettings } from 'store/reducers/settings';\nimport Alerts from './Alerts';\nimport { isWebExtension, sendMessage } from 'helpers/webext';\nimport { humanInterval, TimeAgo } from 'helpers/utils';\nimport { defaults as channelCheckerDefaults } from 'ui/components/webext/Background/ChannelChecker';\n\ninterface SettingsProps {}\n\nexport function Settings(props: SettingsProps) {\n  const [lastCheckTime, setLastCheckTime] = useState(null);\n  const settings = useAppSelector(selectSettings);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (isWebExtension) {\n      sendMessage('getLastCheckDate').then((date: string) => {\n        if (date) {\n          const time = new Date(date).getTime();\n          setLastCheckTime(TimeAgo.inWords(time));\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <Layout>\n      <Alerts settings={settings} />\n      <Stack sx={{ px: 3, overflow: 'auto' }} divider={<Divider />}>\n        <Field\n          label=\"Default view\"\n          value={settings.defaultView}\n          onChange={(defaultView: HomeView) => {\n            dispatch(setSettings({ defaultView }));\n          }}\n          options={[\n            {\n              label: 'All',\n              value: HomeView.All,\n            },\n            {\n              label: 'Recent',\n              value: HomeView.Recent,\n            },\n            {\n              label: 'Watch later',\n              value: HomeView.WatchLater,\n            },\n          ]}\n          type={SettingType.List}\n        />\n        <Field\n          label=\"Recent videos seniority\"\n          value={settings.recentVideosSeniority}\n          onChange={(recentVideosSeniority: VideosSeniority) => {\n            dispatch(setSettings({ recentVideosSeniority }));\n          }}\n          options={[\n            {\n              label: '1 day',\n              value: VideosSeniority.OneDay,\n            },\n            {\n              label: '3 days',\n              value: VideosSeniority.ThreeDays,\n            },\n            {\n              label: '7 days',\n              value: VideosSeniority.SevenDays,\n            },\n          ]}\n          type={SettingType.List}\n        />\n        <Field\n          label=\"Dark mode\"\n          value={settings.darkMode}\n          onChange={(darkMode: boolean) => {\n            dispatch(setSettings({ darkMode }));\n          }}\n          type={SettingType.Boolean}\n        />\n        <Field\n          label=\"Auto play videos\"\n          value={settings.autoPlayVideos}\n          onChange={(autoPlayVideos: boolean) => {\n            dispatch(setSettings({ autoPlayVideos }));\n          }}\n          type={SettingType.Boolean}\n        />\n        {isWebExtension ? (\n          <Field\n            label=\"Enable notifications\"\n            description={`Checking for new videos is performed every ${humanInterval(\n              channelCheckerDefaults.checkInterval,\n              'minute'\n            )}${lastCheckTime ? ` (Last check: ${lastCheckTime})` : ''}`}\n            value={settings.enableNotifications}\n            onChange={(enableNotifications: boolean) => {\n              dispatch(setSettings({ enableNotifications }));\n            }}\n            type={SettingType.Boolean}\n          />\n        ) : null}\n        <Field\n          label=\"Youtube API key\"\n          description={\n            <span>\n              Don't have an API key yet?{' '}\n              <Link\n                href=\"https://www.slickremix.com/docs/get-api-key-for-youtube/\"\n                target=\"_blank\"\n                color=\"secondary\"\n                rel=\"noopener\"\n              >\n                Get your own!\n              </Link>\n            </span>\n          }\n          value={settings.apiKey}\n          onChange={(apiKey: string) => {\n            dispatch(setSettings({ apiKey }));\n          }}\n          type={SettingType.Secret}\n        />\n      </Stack>\n    </Layout>\n  );\n}\n","import React from 'react';\nimport { Typography, IconButton, Link } from '@mui/material';\nimport FavoriteRoundedIcon from '@mui/icons-material/FavoriteRounded';\nimport GitHubIcon from '@mui/icons-material/GitHub';\n\ninterface CreditProps {\n  author: string;\n  repositoryUrl?: string;\n}\n\nexport default function Credit(props: CreditProps) {\n  const { author, repositoryUrl } = props;\n\n  return (\n    <Typography\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: 0.5,\n      }}\n      color=\"text.secondary\"\n    >\n      Made with <FavoriteRoundedIcon sx={{ color: '#e1495c', fontSize: 18 }} />{' '}\n      by {author}\n      {repositoryUrl ? (\n        <Link href={repositoryUrl} target=\"_blank\" rel=\"noopener\">\n          <IconButton sx={{ p: 0 }} size=\"small\" aria-label=\"github link\">\n            <GitHubIcon fontSize=\"inherit\" />\n          </IconButton>\n        </Link>\n      ) : null}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport { Link, Tooltip } from '@mui/material';\ninterface SocialLinkProps {\n  children: React.ReactNode;\n  tooltip: string;\n  href: string;\n  target?: '_blank' | '_self';\n}\n\nexport default function SocialLink(props: SocialLinkProps) {\n  const { children, tooltip, href, target = '_blank' } = props;\n\n  return (\n    <Tooltip title={tooltip} placement=\"bottom\" arrow>\n      <Link href={href} target={target} color=\"inherit\" rel=\"noopener\">\n        {children}\n      </Link>\n    </Tooltip>\n  );\n}\n","import React from 'react';\nimport { Layout, Logo } from 'ui/components/shared';\nimport {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  Button,\n  Typography,\n  Link,\n} from '@mui/material';\nimport Credit from './Credit';\nimport SocialLink from './SocialLink';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport MailIcon from '@mui/icons-material/Mail';\nimport ForumIcon from '@mui/icons-material/Forum';\n\ninterface AboutProps {}\n\nexport function About(props: AboutProps) {\n  return (\n    <Layout>\n      <Box\n        sx={{\n          bgcolor: (theme) =>\n            theme.palette.mode === 'light' ? '#f4f4f4' : 'transparent',\n          flexGrow: 1,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Card variant=\"outlined\">\n          <CardContent\n            sx={{\n              pt: 6,\n              pb: 12,\n              px: 12,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Logo size={60} sx={{ mb: 3 }} />\n            <Typography\n              sx={{ fontSize: '1.25rem', mb: 1 }}\n              variant=\"h5\"\n              color=\"text.primary\"\n            >\n              YouTube viewer\n            </Typography>\n            <Credit author=\"AXeL\" />\n            <Box\n              sx={{\n                display: 'flex',\n                gap: 1.5,\n                color: (theme) =>\n                  theme.palette.mode === 'light' ? 'grey.800' : 'grey.100',\n                mt: 4,\n              }}\n            >\n              <SocialLink\n                tooltip=\"Gmail\"\n                href=\"mailto:contact.axel.dev@gmail.com\"\n              >\n                <MailIcon />\n              </SocialLink>\n              <SocialLink\n                tooltip=\"Discord\"\n                href=\"https://discord.gg/rpD4fgxBgj\"\n              >\n                <ForumIcon />\n              </SocialLink>\n              <SocialLink\n                tooltip=\"Github\"\n                href=\"https://github.com/AXeL-dev/youtube-viewer\"\n              >\n                <GitHubIcon />\n              </SocialLink>\n            </Box>\n          </CardContent>\n          <CardActions sx={{ borderTop: 1, borderColor: 'divider', px: 1.5 }}>\n            <Link\n              sx={{ textDecoration: 'none' }}\n              href=\"https://github.com/AXeL-dev/youtube-viewer/graphs/contributors\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              <Button\n                sx={{\n                  fontSize: '0.875rem',\n                  fontWeight: 400,\n                  textTransform: 'capitalize',\n                }}\n                size=\"small\"\n                color=\"secondary\"\n              >\n                Contributors\n              </Button>\n            </Link>\n          </CardActions>\n          <CardActions sx={{ borderTop: 1, borderColor: 'divider', px: 1.5 }}>\n            <Button\n              sx={{\n                fontSize: '0.875rem',\n                fontWeight: 400,\n                textTransform: 'capitalize',\n              }}\n              size=\"small\"\n              color=\"secondary\"\n            >\n              Privacy policy\n            </Button>\n          </CardActions>\n        </Card>\n      </Box>\n    </Layout>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport {\n  isWebExtension,\n  setBadgeColors,\n  setBadgeText,\n  createTab,\n  indexUrl,\n  getBadgeText,\n  sendNotification,\n} from 'helpers/webext';\nimport { useAppSelector, storageKey } from 'store';\nimport { selectNotificationEnabledChannels } from 'store/selectors/channels';\nimport { setSettings } from 'store/reducers/settings';\nimport { setChannels } from 'store/reducers/channels';\nimport {\n  saveVideos,\n  removeOutdatedVideos,\n  setVideos,\n} from 'store/reducers/videos';\nimport ChannelChecker, { CheckEndData } from './ChannelChecker';\nimport { log } from 'helpers/logger';\nimport { selectSettings } from 'store/selectors/settings';\nimport { MessageRequest, Video, Nullable } from 'types';\nimport { selectApp } from 'store/selectors/app';\nimport { dispatch } from 'store/persist';\n\ndeclare var browser: any;\n\ninterface BackgroundProps {}\n\nexport function Background(props: BackgroundProps) {\n  const responses = useRef<CheckEndData[]>([]);\n  const lastCheckDate = useRef<Nullable<Date>>(null);\n  const channels = useAppSelector(selectNotificationEnabledChannels);\n  const settings = useAppSelector(selectSettings);\n  const app = useAppSelector(selectApp);\n\n  useEffect(() => {\n    if (settings.enableNotifications) {\n      responses.current = [];\n    }\n  }, [settings.enableNotifications]);\n\n  const openHomePage = () => {\n    setBadgeText('');\n    createTab(indexUrl);\n  };\n\n  const handleMessage = (\n    request: MessageRequest,\n    sender: any,\n    sendResponse: any\n  ) => {\n    log('Handle message:', request);\n    let response: any = null;\n    return new Promise((resolve) => {\n      switch (request.message) {\n        // getLastCheckDate\n        case 'getLastCheckDate':\n          response = lastCheckDate.current;\n          break;\n        // default\n        default:\n          break;\n      }\n      log('response:', response);\n      resolve(response);\n    });\n  };\n\n  const init = () => {\n    setBadgeColors('#666', '#fff');\n    // Handle messages\n    browser.runtime.onMessage.addListener(handleMessage);\n    // Handle click on notifications\n    browser.notifications.onClicked.addListener((notificationId: string) => {\n      log('Notification clicked:', notificationId);\n      openHomePage();\n    });\n    browser.notifications.onButtonClicked.addListener(\n      (notificationId: string, buttonIndex: number) => {\n        log(`Notification button ${buttonIndex} clicked:`, notificationId);\n        log('channels', channels);\n        const [, channelId] = notificationId.split('::');\n        const url = channels.find((channel) => channel.id === channelId)?.url;\n        if (url?.length) {\n          createTab(url);\n        }\n      }\n    );\n    // Handle click on browser action\n    // only works if \"browser_action\" > \"default_popup\" is not set on manifest\n    browser.browserAction.onClicked.addListener((tab: any) => {\n      log('Browser action clicked:', tab);\n      openHomePage();\n    });\n    // Handle storage change\n    browser.storage.onChanged.addListener((changes: any, areaName: string) => {\n      log('Storage changed:', areaName, changes);\n      if (areaName === 'local') {\n        const { settings, channels, videos } = changes[storageKey].newValue;\n        dispatch(setSettings(settings));\n        dispatch(setChannels(channels));\n        dispatch(setVideos(videos));\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (isWebExtension) {\n      init();\n      log('Background page initialised.');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (isWebExtension && app.loaded) {\n      log('Removing outdated videos.');\n      dispatch(removeOutdatedVideos(), true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [app.loaded]);\n\n  const updateBadge = async (count: number) => {\n    const badgeText: string = await getBadgeText();\n    if (badgeText.length) {\n      count += +badgeText;\n    }\n    log('Updating badge:', count);\n    setBadgeText(count);\n  };\n\n  const handleCheckEnd = (data: CheckEndData) => {\n    responses.current.push(data);\n    // Once all channel checkers responded to us\n    if (responses.current.length === channels.length) {\n      // Save last check date\n      lastCheckDate.current = new Date();\n      // Get total count of new videos\n      const count = responses.current.reduce(\n        (acc, cur) => acc + cur.newVideos.length,\n        0\n      );\n      log('All channel checkers responded, new videos count:', count);\n      // Update badge count & send notification\n      if (count > 0) {\n        updateBadge(count);\n        const maxChannelTitles = 5;\n        const fulfilledResponses = responses.current.filter(\n          ({ newVideos }) => newVideos.length > 0\n        );\n        const channelTitles = fulfilledResponses\n          .slice(0, Math.min(maxChannelTitles, fulfilledResponses.length))\n          .map(({ channel }) => channel.title)\n          .join(', ');\n        sendNotification({\n          title: `YouTube viewer (${count} new video${count > 1 ? 's' : ''})`,\n          message: `Posted by ${channelTitles}${\n            fulfilledResponses.length > maxChannelTitles ? ' & others' : ''\n          }.`,\n          // id: `${new Date().getTime()}::${channel.id}`,\n          // items: newVideos.map((video) => ({ // only if notification type is 'list'\n          //   title: video.title,\n          //   message: video.url,\n          // })),\n          // contextMessage: channel.url,\n          // buttons: [\n          //   {\n          //     title: 'Open channel',\n          //   },\n          // ],\n        });\n        // Save notified videos\n        const videos = fulfilledResponses.reduce(\n          (acc: Video[], cur: CheckEndData) => [...acc, ...cur.newVideos],\n          []\n        );\n        log('Saving notified videos.', videos);\n        dispatch(\n          saveVideos({\n            videos,\n            flags: {\n              notified: true,\n            },\n          }),\n          true\n        );\n      }\n      // Reset the responses array\n      responses.current = [];\n    }\n  };\n\n  return isWebExtension ? (\n    <>\n      {app.loaded && settings.enableNotifications\n        ? channels.map((channel, index) => (\n            <ChannelChecker\n              key={index}\n              channel={channel}\n              onCheckEnd={handleCheckEnd}\n            />\n          ))\n        : null}\n    </>\n  ) : (\n    <span>This script is not intended to run on a webapp.</span>\n  );\n}\n","import { createTheme } from '@mui/material/styles';\nimport { PaletteMode } from '@mui/material';\nimport { light } from '@mui/material/styles/createPalette';\nimport './fonts';\nimport './styles.css';\n\ndeclare module '@mui/material/styles' {\n  interface CustomColors {\n    lightGrey: string;\n    lightBorder: string;\n  }\n  interface Palette {\n    custom: CustomColors;\n  }\n  interface PaletteOptions {\n    custom: CustomColors;\n  }\n  interface BreakpointOverrides {\n    xxs: true;\n  }\n}\n\nconst useTheme = (mode: PaletteMode = 'light') =>\n  createTheme({\n    palette: {\n      mode,\n      primary: {\n        light: '#e9321a',\n        main: '#f21718',\n        dark: '#b81112',\n      },\n      secondary: {\n        light: '#1a88ff',\n        main: '#007bff',\n        dark: '#006fe6',\n      },\n      ...(mode === 'light'\n        ? {\n            background: {\n              default: '#fff',\n            },\n            custom: {\n              lightGrey: '#fafafa',\n              lightBorder: light.divider,\n            },\n          }\n        : {\n            background: {\n              default: '#181818',\n            },\n            custom: {\n              lightGrey: '#212121',\n              lightBorder: 'rgba(255, 255, 255, 0.23)',\n            },\n          }),\n    },\n    breakpoints: {\n      values: {\n        xxs: 0,\n        xs: 780,\n        sm: 1000,\n        md: 1200,\n        lg: 1400,\n        xl: 1600,\n      },\n    },\n  });\n\nexport default useTheme;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { Home, Channels, Settings, About } from 'ui/components/pages';\nimport { Background } from 'ui/components/webext';\nimport { ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport useTheme from 'ui/theme';\nimport { useAppSelector } from 'store';\nimport { selectMode } from 'store/selectors/settings';\n\nfunction App() {\n  const mode = useAppSelector(selectMode);\n  const theme = useTheme(mode);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/channels\" component={Channels} />\n          <Route exact path=\"/settings\" component={Settings} />\n          <Route exact path=\"/about\" component={About} />\n          <Route path=\"/background\" component={Background} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from 'store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}