{"version":3,"sources":["helpers/storage.ts","helpers/utils.ts","helpers/youtube.ts","helpers/browser.ts","components/Background.tsx","models/Channel.ts","components/shared/RawHTML.tsx","components/channel/SearchChannelInput.tsx","components/video/Media.tsx","helpers/debug.ts","components/video/VideoGrid.tsx","models/Settings.ts","components/video/MultiVideoGrid.tsx","components/shared/ConfirmationDialog.tsx","components/shared/ImportDialog.tsx","components/shared/MoveToPositionDialog.tsx","helpers/parser.ts","components/channel/ChannelList.tsx","helpers/download.ts","components/shared/MessageSnackbar.tsx","components/settings/SettingsDialog.tsx","components/shared/CustomSnackbar.tsx","components/Popup.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getFromStorage","promises","keys","forEach","key","push","__get","Promise","all","resolve","reject","browser","storage","local","get","then","error","finalValue","value","localStorage","getItem","JSON","parse","saveToStorage","values","Object","set","stringify","setItem","__save","niceDuration","ISO_8601_string","time","replace","toUpperCase","h","extract","m","s","join","stop","i","length","val","slice","shortenLargeNumber","num","decimal","digits","units","Math","pow","toFixed","TimeAgo","self","prefix","sufix","seconds","minute","minutes","hour","hours","day","days","month","months","year","years","timeAgo","floor","Date","parseInt","separator","locales","words","interval","intervals","distance","trim","getDateBefore","before","date","setDate","getDate","isInToday","timestamp","setHours","diffHours","dt1","dt2","diff","getTime","abs","round","apiKey","process","REACT_APP_YOUTUBE_API_KEY","apiRequest","a","settings","url","window","fetch","response","ok","json","Error","errors","reason","message","status","setApiKey","action","apiArgs","makeRequest","param","URLSearchParams","toString","apiUrl","getChannelActivities","channelId","after","part","publishedAfter","toISOString","maxResults","Symbol","getVideoInfo","videoIdList","joinedIds","fields","id","items","map","item","title","snippet","duration","contentDetails","views","count","statistics","viewCount","asString","publishedAt","thumbnail","thumbnails","medium","channelTitle","isWebExtension","createTab","isActive","tabs","create","active","sendNotification","type","notifications","iconUrl","setBadgeText","text","browserAction","isFirefox","navigator","userAgent","indexOf","ChannelSelection","defaults","Background","props","state","totalRecentVideosCount","checkedVideosIds","init","console","log","backgroundColor","textColor","setBadgeTextColor","color","setBadgeBackgroundColor","this","getAutoCheckRate","rate","autoCheckLoop","setTimeout","channels","cache","getRecentVideosCount","recentVideosCount","notificationMessages","getBadgeText","badgeText","setState","enableRecentVideosNotifications","autoVideosCheckRate","filter","channel","isHidden","notificationsDisabled","results","videosIds","upload","videoId","cacheVideosIds","video","recentVideosIds","index","videosPerChannel","suffix","catch","finally","React","Component","RawHTML","children","className","dangerouslySetInnerHTML","__html","useStyles","makeStyles","theme","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","breakpoints","up","spacing","searchIcon","height","pointerEvents","display","alignItems","justifyContent","clearButton","right","top","margin","inputRoot","inputInput","padding","transition","transitions","poper","zIndex","overflow","boxShadow","listbox","border","listStyle","background","paper","maxHeight","cursor","avatar","secondary","marginRight","SearchChannelInput","onSelect","onError","classes","useState","inputValue","setInputValue","options","setOptions","useAutocomplete","getOptionLabel","option","getRootProps","getInputProps","getListboxProps","getOptionProps","groupedOptions","useMemo","throttle","input","callback","query","max","order","q","responseJson","payLoad","pageInfo","totalResults","howMany","min","description","searchChannel","useEffect","InputBase","placeholder","root","inputProps","onChange","event","target","IconButton","aria-label","size","onClick","fontSize","Grid","container","Avatar","alt","src","xs","Typography","variant","RegExp","Media","style","anchor","textDecoration","imageContainer","image","bottom","Link","href","rel","Box","pr","mt","gutterBottom","inWords","debug","params","warn","VideoGrid","videos","loading","maxPerChannel","maxSkeletons","onVideoClick","preventLongPress","setPreventLongPress","handleMouseEvent","stopPropagation","preventDefault","minWidth","onMouseDown","onClickCapture","Array","from","marginBottom","draggable","Fragment","Skeleton","pt","SettingsType","breadcrumb","divider","link","outline","youtube","box","MultiVideoGrid","useTheme","onSave","onRefresh","expandedChannelsIndexes","setExpandedChannelsIndexes","channelVideos","hideEmptyChannels","Breadcrumbs","openChannelsOnNameClick","onChannelNameClick","Tooltip","c","hideChannel","edge","Divider","ConfirmationDialog","open","confirmButtonText","cancelButtonText","onClose","onConfirm","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","ImportDialog","textFieldId","textFieldLabel","onValidate","textFieldError","setTextFieldError","close","TextField","label","multiline","rows","fullWidth","document","getElementById","data","isValid","MoveToPositionDialog","step","positionFieldId","positionFieldLabel","positionFieldError","setPositionFieldError","defaultValue","isNaN","test","createStyles","channelsOptionsIcon","transform","menuIcon","verticalAlign","subheader","ChannelList","selectedIndex","All","cacheSize","todaysVideosCount","onShowAll","onShowTodaysVideos","onShowRecentVideos","onDelete","onSelectedIndexChange","onClearCache","onClearRecentVideos","onImport","openDeleteChannelDialog","setOpenDeleteChannelDialog","channelToDelete","setChannelToDelete","channelToDeleteIndex","setChannelToDeleteIndex","anchorEl","setAnchorEl","openedMenuIndex","setOpenedMenuIndex","openClearCacheDialog","setOpenClearCacheDialog","openClearRecentVideosDialog","setOpenClearRecentVideosDialog","openImportChannelsDialog","setOpenImportChannelsDialog","moveToPositionChannelIndex","setMoveToPositionChannelIndex","getSelectedChannel","find","_","moveChannel","indexFrom","indexTo","closeMenu","selectedChannel","list","startIndex","endIndex","result","splice","removed","reorder","closeDeleteChannelDialog","setChannel","None","openMenu","currentTarget","closeClearCacheDialog","exportChannels","blob","filename","msSaveOrOpenBlob","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","Blob","closeImportChannelsDialog","closeMoveChannelToPositionDialog","closeClearRecentVideosDialog","onDragEnd","destination","source","droppableId","provided","snapshot","RootRef","rootRef","innerRef","List","dense","ListSubheader","keepMounted","MenuItem","isDraggingOver","ListItem","button","selected","ListItemIcon","Badge","badgeContent","ListItemText","primary","ListItemSecondaryAction","refreshAll","TodaysVideos","refreshTodaysVideos","RecentVideos","refreshRecentVideos","draggableId","ContainerProps","ref","draggableProps","dragHandleProps","isDragging","draggableStyle","opacity","openChannel","refreshChannel","channelIndex","unhideChannel","enableChannelNotifications","disableChannelNotifications","deleteChannel","channelsList","MessageSnackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Snackbar","settingsAppBar","settingsTitle","flex","select","textShadow","optionLabel","maxWidth","settingsDialogTransition","forwardRef","Slide","direction","SettingsDialog","validateSettings","match","fullScreen","TransitionComponent","AppBar","Toolbar","Select","native","defaultChannelSelection","videosAnteriority","sortVideosBy","component","minLength","Switch","defaultChecked","autoPlayVideos","openVideosInInactiveTabs","autoClearRecentVideos","autoClearCache","CustomSnackbar","minHeight","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","hide","grow","flexGrow","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","centered","alignSelf","textAlign","heartIcon","madeWithLove","Popup","setChannels","setVideos","openDrawer","setOpenDrawer","isReady","setIsReady","isLoading","setIsLoading","selectedChannelIndex","setSelectedChannelIndex","setSettings","openSettingsDialog","setOpenSettingsDialog","snackbarMessage","setSnackbarMessage","lastError","setLastError","setCache","setRecentVideosCount","setTodaysVideosCount","showChannelSelection","totalTodaysVideosCount","recentVideosCountPerChannel","isRecent","todaysVideosCountPerChannel","recent","todays","handleDrawerClose","displayError","getChannelVideos","ignoreCache","videosData","now","videoDate","sort","b","selectChannel","scrollTo","fetchChannelsVideos","selection","filterFunction","customChannels","promise","newVideos","showAllChannels","showTodaysVideos","showRecentVideos","refreshChannels","undefined","closeSettings","getSettingsValue","element","Number","Boolean","checked","String","openVideo","videoUrl","tab","tabId","code","executeScript","CssBaseline","clsx","noWrap","found","openSettings","Drawer","obj","bytes","formatByteSize","sizeOf","objClass","prototype","call","hasOwnProperty","memorySizeOf","align","icon","distanceToRefresh","resistance","Fade","in","timeout","Main","updateState","cacheHasChanged","App","exact","path","location","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63f141c2.chunk.js","sourcesContent":["//import { browser } from \"webextension-polyfill-ts\";\n\ndeclare var browser: any;\n\n/**\n * Get data from storage\n * \n * EX: getFromStorage('key1', 'key2', ...)\n * \n * @param keys \n */\nexport function getFromStorage(...keys: string[]): Promise<any> {\n  let promises: Promise<any>[] = [];\n  keys.forEach((key: string) => {\n    promises.push(__get(key));\n  });\n  return Promise.all(promises);\n}\n\nfunction __get(key: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    try {\n      browser.storage.local.get(key).then((storage: any) => {\n        resolve(storage[key]);\n      });\n    }\n    catch(error) {\n      //console.log(error.message);\n      const value: any = localStorage.getItem(key);\n      let finalValue: any;\n      try {\n        finalValue = JSON.parse(value);\n      }\n      catch(error) {\n        finalValue = value;\n      }\n      resolve(finalValue);\n    }\n  });\n}\n\n/**\n * Save data to storage\n * \n * EX: saveToStorage({ key1: value1, key2: value2, ... })\n * \n * @param values \n */\nexport function saveToStorage(values: {[key: string]: any}): Promise<any> {\n  let promises: Promise<any>[] = [];\n  Object.keys(values).forEach((key: string) => {\n    promises.push(__save(key, values[key]));\n  });\n  return Promise.all(promises);\n}\n\nfunction __save(key: string, value: any): Promise<void> {\n  return new Promise((resolve, reject) => {\n    try {\n      browser.storage.local.set({[key]: value}).then(() => {\n        resolve();\n      });\n    }\n    catch(error) {\n      //console.log(error.message);\n      let finalValue: any;\n      try {\n        finalValue = JSON.stringify(value);\n      }\n      catch(error) {\n        finalValue = value;\n      }\n      localStorage.setItem(key, finalValue);\n      resolve();\n    }\n  });\n}\n","\n/**\n * Convert youtube duration to readable format\n * \n * @param ISO_8601_string {string}\n */\nexport function niceDuration (ISO_8601_string: string) {\n  let time = ISO_8601_string.replace(\"PT\", \"\").toUpperCase();\n  let h = extract('H');\n  let m = extract('M');\n  let s = extract('S');\n  return h !== '00' ? [h, m, s].join(':') : [m, s].join(':');\n\n  function extract (stop: string) {\n      for (let i = 0; i < time.length; i++) {\n          if (time[i] === stop) {\n              let val = time.slice(0, i);\n              if (val.length === 1 && stop !== 'H') {\n                  val = '0' + val;\n              }\n              time = time.slice(i + 1);\n              return val;\n          }\n      }\n      return '00';\n  }\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Shorten number to thousands, millions, billions, etc.\n * http://en.wikipedia.org/wiki/Metric_prefix\n *\n * @param {number} num Number to shorten.\n * @param {number} [digits=0] The number of digits to appear after the decimal point.\n * @returns {string|number}\n *\n * @example\n * // returns '12.5k'\n * shortenLargeNumber(12543, 1)\n *\n * @example\n * // returns '-13k'\n * shortenLargeNumber(-12567)\n *\n * @example\n * // returns '51M'\n * shortenLargeNumber(51000000)\n *\n * @example\n * // returns 651\n * shortenLargeNumber(651)\n *\n * @example\n * // returns 0.12345\n * shortenLargeNumber(0.12345)\n */\nexport function shortenLargeNumber(num: number, digits: number = 0) {\n  let units = ['k', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'],\n      decimal;\n\n  for(let i=units.length-1; i>=0; i--) {\n      decimal = Math.pow(1000, i+1);\n\n      if(num <= -decimal || num >= decimal) {\n          return +(num / decimal).toFixed(digits) + units[i];\n      }\n  }\n\n  return num;\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return Date & time in words\n * Stolen from: https://stackoverflow.com/a/37802747\n */\nexport const TimeAgo = (() => {\n  let self: any = {};\n\n  // Public Methods\n  self.locales = {\n    prefix: '',\n    sufix:  'ago',\n    \n    seconds: 'less than a minute',\n    minute:  'about a minute',\n    minutes: '%d minutes',\n    hour:    'about an hour',\n    hours:   'about %d hours',\n    day:     'a day',\n    days:    '%d days',\n    month:   'about a month',\n    months:  '%d months',\n    year:    'about a year',\n    years:   '%d years'\n  };\n  \n  self.inWords = (timeAgo: any) => {\n    let seconds = Math.floor((new Date() as any - parseInt(timeAgo)) / 1000),\n        separator = self.locales.separator || ' ',\n        words = self.locales.prefix + separator,\n        interval = 0,\n        intervals: any = {\n          year:   seconds / 31536000,\n          month:  seconds / 2592000,\n          day:    seconds / 86400,\n          hour:   seconds / 3600,\n          minute: seconds / 60\n        };\n    \n    let distance = self.locales.seconds;\n    \n    for (let key in intervals) {\n      interval = Math.floor(intervals[key]);\n      \n      if (interval > 1) {\n        distance = self.locales[key + 's'];\n        break;\n      } else if (interval === 1) {\n        distance = self.locales[key];\n        break;\n      }\n    }\n    \n    distance = distance.replace(/%d/i, interval);\n    words += distance + separator + self.locales.sufix;\n\n    return words.trim();\n  };\n  \n  return self;\n})();\n\n// -------------------------------------------------------------------\n\n/**\n * Return current date minus number of days before\n * \n * @param before {number}\n */\nexport function getDateBefore(before: number = 0): Date {\n  let date = new Date();\n  date.setDate(date.getDate() - before);\n  return date;\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Check if the given timestamp is in today's date\n * Stolen from: https://stackoverflow.com/a/40628566\n * \n * @param timestamp \n */\nexport function isInToday(timestamp: number) {\n  let today = new Date();\n  if (today.setHours(0, 0, 0, 0) === new Date(timestamp).setHours(0, 0, 0, 0)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Returns hours difference between two dates\n * Stolen from: https://www.w3resource.com/javascript-exercises/javascript-date-exercise-45.php\n * \n * @param dt1 \n * @param dt2 \n */\nexport function diffHours(dt1: Date, dt2: Date): number {\n  let diff = (dt2.getTime() - dt1.getTime()) / 1000;\n  diff /= (60 * 60);\n  return Math.abs(Math.round(diff));\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return a new RegExp object instance\n * \n * @param pattern \n * @param modifiers \n */\nexport function getRegex(pattern: string, modifiers: string): RegExp {\n  return new RegExp(pattern, modifiers);\n}\n\n// -------------------------------------------------------------------\n\n/**\n * Return size of an object\n * Stolen from: https://gist.github.com/zensh/4975495\n * \n * @param obj \n */\nexport function memorySizeOf(obj: any) {\n  var bytes = 0;\n\n  function sizeOf(obj: any) {\n      if(obj !== null && obj !== undefined) {\n          switch(typeof obj) {\n          case 'number':\n              bytes += 8;\n              break;\n          case 'string':\n              bytes += obj.length * 2;\n              break;\n          case 'boolean':\n              bytes += 4;\n              break;\n          case 'object':\n              var objClass = Object.prototype.toString.call(obj).slice(8, -1);\n              if(objClass === 'Object' || objClass === 'Array') {\n                  for(var key in obj) {\n                      if(!obj.hasOwnProperty(key)) continue;\n                      sizeOf(obj[key]);\n                  }\n              } else bytes += obj.toString().length * 2;\n              break;\n          }\n      }\n      return bytes;\n  }\n\n  function formatByteSize(bytes: number) {\n      if(bytes < 1024) return bytes + \" bytes\";\n      else if(bytes < 1048576) return(bytes / 1024).toFixed(3) + \" KiB\";\n      else if(bytes < 1073741824) return(bytes / 1048576).toFixed(3) + \" MiB\";\n      else return(bytes / 1073741824).toFixed(3) + \" GiB\";\n  }\n\n  return formatByteSize(sizeOf(obj));\n}\n","/*\nThis Source Code Form is subject to the terms of the\nMozilla Public License, v. 2.0.\nIf a copy of the MPL was not distributed with this file,\nYou can obtain one at http://mozilla.org/MPL/2.0/.\nAuthor(s): XrXr, AXeL-dev\n\nThis module provide functions for making api certain YouTube Data API V3\nrequests. All functions return promise.\n*/\n\nimport { niceDuration, shortenLargeNumber } from './utils';\nimport { getFromStorage } from './storage';\n\nlet apiKey = process.env.REACT_APP_YOUTUBE_API_KEY;\n\n/**\n * Send API requests to youtube\n */\nconst apiRequest = (() => {\n    async function setApiKey() {\n        const [settings] = await getFromStorage('settings');\n        apiKey = settings?.apiKey?.length ? settings.apiKey : apiKey;\n    }\n\n    async function makeRequest (url: string) {\n        let response = await window.fetch(url);\n        //console.log(`HTTP ${response.status}: ${response.url}`);\n        if (!response.ok) {\n            const json = await response.json();\n            //console.log(json);\n            throw Error(json?.error?.errors[0] ? `<strong>${json.error.errors[0].reason}</strong>: ${json.error.errors[0].message.replace(/<\\/?[^>]+(>|$)/g, '')}` : `HTTP ${response.status}: ${response.url}`);\n        }\n        return await response.json();\n    }\n\n    function apiUrl (action: string, param: any) {\n        let url = \"https://www.googleapis.com/youtube/v3/\" + action + '?';\n        url += new URLSearchParams({...param, key: apiKey }).toString();\n        return url;\n    }\n\n    setApiKey();\n\n    return (action: string, apiArgs: any) => makeRequest(apiUrl(action, apiArgs));\n})();\n\n/**\n * Request a channel's activities after a date\n * Return a promise that resolves to api response\n * \n * @param channelId \n * @param after \n */\nfunction getChannelActivities (channelId: string, after: Date = new Date()) {\n    return apiRequest(\"activities\", {\n        part: \"snippet,contentDetails\",\n        channelId: channelId,\n        publishedAfter: after.toISOString(),\n        maxResults: 50\n    });\n}\n\n/**\n * Return video duration\n * \n * @param videoId \n */\nconst VIDEO_DOES_NOT_EXIST = Symbol(\"Video does not exist\");\nfunction getDuration (videoId: string) {\n    return apiRequest(\"videos\", {\n        part: \"contentDetails\",\n        fields: \"items/contentDetails/duration\",\n        id: videoId,\n    }).then(json => {\n        if (json.items.length === 0) {\n            throw VIDEO_DOES_NOT_EXIST;\n        }\n        return {\n            videoId,\n            duration: niceDuration(json.items[0].contentDetails.duration)\n        };\n    });\n}\n\n/**\n * Return video tags & duration\n * \n * @param videoId \n */\nfunction getTagsAndDuration (videoId: string) {\n    return apiRequest(\"videos\", {\n        part: \"snippet,contentDetails\",\n        fields: \"items/contentDetails/duration,items/snippet/tags\",\n        id: videoId,\n    }).then(res => {\n        res = res.items[0];\n        return {\n            duration: niceDuration(res.contentDetails.duration),\n            tags: (res.snippet && res.snippet.tags) || []\n        };\n    });\n}\n\n/**\n * Return video informations\n * \n * @param videoIdList \n */\nfunction getVideoInfo (videoIdList: string[]) {\n    let joinedIds = videoIdList.join(\",\");\n    return apiRequest(\"videos\", {\n        part: \"snippet,contentDetails,statistics,id\",\n        fields: \"items(id,contentDetails/duration,statistics/viewCount,snippet(title,channelTitle,channelId,publishedAt,thumbnails/medium))\",\n        id: joinedIds,\n        maxResults: 50, // not working when id is filled (which is the case here)\n    }).then(response => {\n        //console.log(response);\n        return response.items.map((item: any) => ({\n            id: item.id,\n            title: item.snippet.title,\n            url: 'https://www.youtube.com/watch?v=' + item.id,\n            duration: niceDuration(item.contentDetails.duration),\n            views: {\n                count: item.statistics.viewCount,\n                asString: shortenLargeNumber(item.statistics.viewCount),\n            },\n            publishedAt: new Date(item.snippet.publishedAt).getTime(),\n            thumbnail: item.snippet.thumbnails.medium.url,\n            channelId: item.snippet.channelId,\n            channelTitle: item.snippet.channelTitle,\n        }));\n    });\n}\n\n//getVideoInfo.batch_size = 50;\n\n/**\n * Request to search channel matching `query`. Return a promise that will\n * resolve to either [] or [channels]\n * \n * @param query \n * @param max \n */\nfunction searchChannel (query: string, max: number = 3) {\n    return apiRequest(\"search\", {\n        part: \"snippet\",\n        type: \"channel\",\n        order: \"relevance\",\n        q: query\n    }).then(responseJson => {\n        //console.log(responseJson);\n        let payLoad: any = [];\n        if (responseJson.pageInfo.totalResults > 0) {\n            const howMany = Math.min(responseJson.pageInfo.totalResults, max);\n            for (let i = 0; i < howMany; i++) {\n                if (responseJson.items[i]) {\n                    payLoad.push({\n                        title: responseJson.items[i].snippet.title,\n                        url: 'https://www.youtube.com/channel/' + responseJson.items[i].id.channelId + '/videos',\n                        description: responseJson.items[i].snippet.description,\n                        thumbnail: responseJson.items[i].snippet.thumbnails.medium.url,\n                        id: responseJson.items[i].id.channelId\n                    });\n                }\n            }\n        }\n        return payLoad;\n    });\n}\n\nexport {\n    searchChannel,\n    getDuration,\n    getChannelActivities,\n    getTagsAndDuration,\n    getVideoInfo,\n    VIDEO_DOES_NOT_EXIST,\n};\n","//import { browser } from \"webextension-polyfill-ts\";\n\ndeclare var browser: any;\n\nexport function isWebExtension(): boolean {\n  try {\n    return !!browser;\n  } catch(error) {\n    return false;\n  }\n}\n\nexport function createTab(url: string, isActive: boolean = true): Promise<any> {\n  return browser.tabs.create({\n    url: url,\n    active: isActive\n  });\n}\n\nexport function executeScript(tabId: number, code: string): void {\n  browser.tabs.executeScript(\n    tabId, {\n      code: code\n    }\n  );\n}\n\nexport function sendNotification(message: string, type: string|any = 'basic'): void {\n  browser.notifications.create({\n    type: type,\n    title: 'Youtube viewer',\n    iconUrl: 'icons/128.png',\n    message: message\n  });\n}\n\nexport function setBadgeText(text: string|number): void {\n  browser.browserAction.setBadgeText({\n    text: text === 0 ? '' : text.toString()\n  });\n}\n\nexport function setBadgeColors(backgroundColor: string, textColor: string): void {\n  if (isFirefox()) {\n    browser.browserAction.setBadgeTextColor({ color: textColor });\n  }\n  browser.browserAction.setBadgeBackgroundColor({ color: backgroundColor });\n}\n\nexport function getBadgeText(): Promise<string> {\n  return browser.browserAction.getBadgeText({});\n}\n\nexport function isFirefox(): boolean {\n  return navigator.userAgent.indexOf(\"Firefox\") !== -1;\n}\n\nexport function isChrome(): boolean {\n  return navigator.userAgent.indexOf(\"Chrome\") !== -1;\n}\n","import React from 'react';\nimport { Channel } from '../models/Channel';\nimport { Settings } from '../models/Settings';\nimport { Video } from '../models/Video';\nimport { getFromStorage } from '../helpers/storage';\nimport { getDateBefore } from '../helpers/utils';\nimport { getChannelActivities } from '../helpers/youtube';\nimport { isWebExtension, setBadgeText, setBadgeColors, getBadgeText, sendNotification } from '../helpers/browser';\n\nconst defaults: any = {\n  videosCheckRate: 30, // minute(s)\n  videosAnteriority: 1, // day(s)\n  videosPerChannel: 9,\n};\n\ninterface BackgroundProps {}\n\ninterface BackgroundState {\n  totalRecentVideosCount: number;\n  checkedVideosIds: any;\n}\n\nclass Background extends React.Component<BackgroundProps, BackgroundState> {\n  constructor(props: BackgroundProps) {\n    super(props);\n    this.state = {\n      totalRecentVideosCount: 0,\n      checkedVideosIds: {}\n    };\n    if (isWebExtension()) {\n      this.init();\n      console.log('background init executed.');\n    }\n  }\n\n  async init() {\n    setBadgeColors('#666', '#fff');\n    const rate = await this.getAutoCheckRate();\n    this.log('Rate:', rate);\n    this.autoCheckLoop(rate);\n  }\n\n  log(message: any, ...params: any) {\n    //console.log(message, ...params); // comment/uncomment this to manually enable/disable logs\n  }\n\n  autoCheckLoop(rate: number) {\n    setTimeout(async () => {\n      // Get storage data\n      const [channels, settings, cache] = await getFromStorage('channels', 'settings', 'cache');\n      this.log('Storage data:', { channels: channels, settings: settings, cache: cache });\n      // Check for recent videos\n      const [recentVideosCount, notificationMessages] = await this.getRecentVideosCount(channels, settings, cache);\n      const badgeText: string = await getBadgeText();\n      let { totalRecentVideosCount } = this.state;\n      this.log('Recent videos count:', recentVideosCount);\n      this.log('Badge text:', badgeText);\n      if (badgeText.length) { // if badge text wasn't reseted yet (means that the user didn't yet notice it), we increment the total count\n        totalRecentVideosCount += recentVideosCount;\n      } else {\n        totalRecentVideosCount = recentVideosCount;\n      }\n      this.setState({ totalRecentVideosCount: totalRecentVideosCount });\n      this.log('Total count:', totalRecentVideosCount);\n      setBadgeText(totalRecentVideosCount);\n      // Notify\n      if (settings?.enableRecentVideosNotifications && recentVideosCount > 0) {\n        notificationMessages.forEach((message: string) => {\n          sendNotification(message);\n        });\n      }\n      // Re-loop\n      this.autoCheckLoop(settings?.autoVideosCheckRate || defaults.videosCheckRate);\n    }, rate * 60 * 1000); // convert minutes to milliseconds\n  }\n\n  getAutoCheckRate(): Promise<number> {\n    return new Promise(async (resolve, reject) => {\n      const [settings] = await getFromStorage('settings');\n      resolve(settings?.autoVideosCheckRate || defaults.videosCheckRate);\n    });\n  }\n\n  getRecentVideosCount(channels: Channel[], settings: Settings, cache: any): Promise<[number, string[]]> {\n\n    return new Promise((resolve, reject) => {\n  \n      let count: number = 0;\n      let notificationMessages: string[] = [];\n      let promises: Promise<any>[] = [];\n      let { checkedVideosIds } = this.state;\n  \n      channels.filter((channel) => !channel.isHidden && !channel.notificationsDisabled).forEach((channel) => {\n  \n        promises.push(\n          getChannelActivities(channel.id, getDateBefore(defaults.videosAnteriority)).then((results) => {\n            this.log('activities of', channel.title, results);\n            if (results?.items) {\n              // get recent videos ids\n              const videosIds: string[] = results.items.map((item: any) => item.contentDetails.upload?.videoId).filter((id: string) => id?.length);\n              const cacheVideosIds: string[] = cache[channel.id]?.length ? cache[channel.id].map((video: Video) => video.id) : [];\n              const recentVideosIds: string[] = videosIds.filter((videoId: string, index: number) => videosIds.indexOf(videoId) === index) // remove duplicates\n                                                         .slice(0, settings?.videosPerChannel || defaults.videosPerChannel)\n                                                         .filter((videoId: string) => !checkedVideosIds[channel.id] || checkedVideosIds[channel.id].indexOf(videoId) === -1) // remove videos already checked\n                                                         .filter((videoId: string) => cacheVideosIds.indexOf(videoId) === -1); // remove videos already in cache\n              // set recent videos count\n              if (recentVideosIds.length) {\n                this.log(recentVideosIds.length, 'recent videos');\n                // update checked videos ids\n                if (!checkedVideosIds[channel.id]) {\n                  checkedVideosIds[channel.id] = [];\n                }\n                checkedVideosIds[channel.id].push(...recentVideosIds);\n                // generate notification messages\n                const suffix = recentVideosIds.length > 1 ? 's' : '';\n                notificationMessages.push(`${channel.title} posted ${recentVideosIds.length} recent video${suffix}`);\n                // update count\n                count += recentVideosIds.length;\n              } else {\n                this.log('no recent videos for this channel');\n              }\n            }\n          }).catch((error: Error) => {\n            console.error(error);\n          })\n        );\n  \n      });\n  \n      Promise.all(promises).finally(() => {\n        this.setState({ checkedVideosIds: checkedVideosIds });\n        resolve([count, notificationMessages]);\n      });\n  \n    });\n  \n  }\n\n  render() {\n    return (\n      <span>Silence is golden!</span>\n    );\n  }\n}\n\nexport default Background;\n","\nexport interface Channel {\n  id: string,\n  thumbnail: string,\n  title: string,\n  url: string,\n  description: string,\n  isHidden: boolean,\n  notificationsDisabled: boolean\n}\n\nexport enum ChannelSelection {\n  All = -1,\n  None = -2,\n  RecentVideos = -3,\n  TodaysVideos = -4\n}\n","import React from 'react';\n\n// Stolen from: https://stackoverflow.com/a/45810395\nexport const RawHTML = ({children, className = ''}: any): any =>\n  <span className={className} dangerouslySetInnerHTML={{ __html: children.replace(/\\n/g, '<br />')}} />\n","import React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme, fade } from '@material-ui/core/styles';\nimport throttle from 'lodash/throttle';\nimport { searchChannel } from '../../helpers/youtube';\nimport Avatar from '@material-ui/core/Avatar';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Channel } from '../../models/Channel';\nimport { getRegex } from '../../helpers/utils';\nimport { RawHTML } from '../shared/RawHTML';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(6),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  clearButton: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    margin: theme.spacing(0.75),\n    color: theme.palette.common.white,\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 4, 1, 6),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 200,\n      '&:focus': {\n        width: 260,\n      },\n    },\n  },\n  poper: {\n    position: 'absolute',\n    width: '100%',\n    zIndex: 1,\n    margin: '4px 0',\n    overflow: 'hidden',\n    borderRadius: '4px',\n    boxShadow: '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n  },\n  listbox: {\n    position: 'relative',\n    margin: 0,\n    padding: '8px 0',\n    border: 'none',\n    listStyle: 'none',\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n    maxHeight: '40vh',\n    '& li': {\n      padding: '6px 16px'\n    },\n    '& li[data-focus=\"true\"]': {\n      backgroundColor: 'rgba(0, 0, 0, 0.08)',\n      cursor: 'pointer',\n    },\n    '& li:active': {\n      backgroundColor: 'rgba(0, 0, 0, 0.14)'\n    },\n  },\n  avatar: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n}));\n\ninterface SearchProps {\n  onSelect: Function;\n  onError: Function;\n}\n\nexport default function SearchChannelInput(props: SearchProps) {\n  const { onSelect, onError } = props;\n  const classes = useStyles();\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState<Channel[]>([]);\n  const {\n    getRootProps,\n    getInputProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n  } = useAutocomplete({\n    id: 'search-autocomplete',\n    options: options,\n    getOptionLabel: option => {\n      //console.log(option);\n      if (option?.title) {\n        setInputValue(option.title);\n        return option.title;\n      }\n      return option;\n    },\n    value: inputValue,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const fetch = React.useMemo(\n    () =>\n      throttle((input: any, callback: Function) => {\n        //console.log(input);\n        searchChannel(input.value, 5).then((results: Channel[]) => {\n          //console.log(results);\n          callback(results);\n        }).catch((error) => {\n          onError(error);\n        });\n      }, 200),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [],\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (inputValue === '') {\n      setOptions([]);\n      return undefined;\n    }\n\n    fetch({ value: inputValue }, (results?: Channel[]) => {\n      if (active) {\n        setOptions(results || []);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [inputValue, fetch]);\n\n  return (\n    <div className={classes.search}>\n      <div {...getRootProps()}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Search for a channel…\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          inputProps={{ ...getInputProps(), 'aria-label': 'search' }}\n          onChange={handleChange}\n        />\n        {inputValue?.length > 0 && (\n          <IconButton aria-label=\"clear\" size=\"small\" className={classes.clearButton} onClick={() => setInputValue('')}>\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        )}\n      </div>\n      {groupedOptions.length > 0 ? (\n        <div className={classes.poper}>\n          <ul className={classes.listbox} {...getListboxProps()}>\n            {groupedOptions.map((option, index) => (\n              <li {...getOptionProps({ option, index })}>\n                <Grid container alignItems=\"center\" onClick={() => onSelect(option)}>\n                  <Grid item>\n                    <Avatar className={classes.avatar} alt={option.title} src={option.thumbnail} />\n                  </Grid>\n                  <Grid item xs>\n                    <Typography variant=\"body2\" color=\"textSecondary\">\n                      <RawHTML>{option.title.replace(getRegex('(' + inputValue + ')', 'gi'), `<strong>$1</strong>`)}</RawHTML>\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { Video } from '../../models/Video';\nimport { TimeAgo } from '../../helpers/utils';\n\ninterface MediaProps {\n  item: Video;\n  onClick: Function;\n}\n\nexport default function Media(props: MediaProps) {\n  const { item, onClick } = props;\n  const style = {\n    anchor: {\n      textDecoration: 'none',\n      color: 'inherit',\n      display: 'inline-block'\n    },\n    imageContainer: {\n      position: 'relative'\n    } as React.CSSProperties,\n    image: {\n      width: 210,\n      height: 118,\n      display: 'inherit'\n    },\n    duration: {\n      position: 'absolute',\n      bottom: 0,\n      right: 0,\n      margin: '4px',\n      color: '#fff',\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      padding: '2px 4px',\n      borderRadius: '2px'\n    } as React.CSSProperties\n  };\n\n  return (\n    <Link href={item.url} style={style.anchor} target=\"_blank\" rel=\"noopener\" onClick={(event: any) => onClick(event)}>\n      <Box style={style.imageContainer}>\n        <img style={style.image} alt=\"\" src={item.thumbnail} />\n        <Typography variant=\"caption\" style={style.duration}>\n          {item.duration}\n        </Typography>\n      </Box>\n      <Box pr={2} mt={1}>\n        <Typography gutterBottom variant=\"body2\">\n          {item.title}\n        </Typography>\n        <Typography display=\"block\" variant=\"caption\" color=\"textSecondary\">\n          {item.channelTitle}\n        </Typography>\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          {`${item.views.asString || item.views} • ${TimeAgo.inWords(item.publishedAt)}`}\n        </Typography>\n      </Box>\n    </Link>\n  );\n}\n","// no need to import process Object since it will be defined by create-react-app\n\nexport const isDevEnv: boolean = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\nexport function debug(message: any, ...params: any) {\n  isDevEnv && console.log(message, ...params);\n}\n\nexport function warn(message: any, ...params: any) {\n  isDevEnv && console.warn(message, ...params);\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Video } from '../../models/Video';\nimport Media from './Media';\nimport { debug } from '../../helpers/debug';\n\ninterface VideoGridProps {\n  loading?: boolean;\n  videos: Video[];\n  maxPerChannel?: number;\n  maxSkeletons?: number;\n  onVideoClick: Function;\n}\n\nexport default function VideoGrid(props: VideoGridProps) {\n  const { videos, loading = false, maxPerChannel = 9, maxSkeletons = 9, onVideoClick } = props;\n  const [preventLongPress, setPreventLongPress] = React.useState(false);\n  const style = {\n    grid: {\n      minWidth: '428px'\n    }\n  };\n\n  const handleMouseEvent = (event: any) => {\n    debug(event.type, { preventLongPress: preventLongPress });\n    if (event.type === 'mousedown') {\n      setPreventLongPress(false); // always reset preventLongPress state on mousedown\n      setTimeout(() => {\n        // delay of 200 ms used here to wait for the click event\n        // if it fires immediately after the mousedown event then preventLongPress value will be false, otherwise it's probably a long press click\n        setPreventLongPress(true);\n      }, 200);\n    } else {\n      if (!preventLongPress) {\n        return true;\n      }\n      setPreventLongPress(false);\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    return false;\n  };\n\n  return (\n    <Grid container style={style.grid} onMouseDown={(event: any) => handleMouseEvent(event)} onClickCapture={(event: any) => handleMouseEvent(event)}>\n      {(loading ? Array.from(new Array(Math.min(maxPerChannel, maxSkeletons))) : videos.slice(0, maxPerChannel)).map((item, index) => (\n        <Box key={index} width={210} marginRight={0.5} marginBottom={3} draggable=\"false\">\n          {item ? (\n            <Media item={item} onClick={onVideoClick}></Media>\n          ) : (\n            <React.Fragment>\n              <Skeleton variant=\"rect\" width={210} height={118} />\n              <Box pt={0.5}>\n                <Skeleton />\n                <Skeleton width=\"60%\" />\n              </Box>\n            </React.Fragment>\n          )}\n        </Box>\n      ))}\n    </Grid>\n  );\n}\n","import { ChannelSelection } from \"./Channel\";\n\nexport interface Settings {\n  defaultChannelSelection: ChannelSelection,\n  videosPerChannel: number,\n  videosAnteriority: number,\n  sortVideosBy: string,\n  apiKey?: string,\n  autoVideosCheckRate: number,\n  enableRecentVideosNotifications: boolean,\n  autoPlayVideos: boolean,\n  openVideosInInactiveTabs: boolean,\n  openChannelsOnNameClick: boolean,\n  hideEmptyChannels: boolean,\n  autoClearRecentVideos: boolean,\n  autoClearCache: boolean,\n}\n\nexport enum SettingsType {\n  String,\n  Number,\n  Boolean\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles, Theme, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport Link from '@material-ui/core/Link';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Video } from '../../models/Video';\nimport { Channel } from '../../models/Channel';\nimport { Settings } from '../../models/Settings';\nimport VideoGrid from './VideoGrid';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  breadcrumb: {\n    marginBottom: theme.spacing(2.5),\n  },\n  divider: {\n    marginBottom: theme.spacing(2.5),\n  },\n  link: {\n    display: 'flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    outline: 'none',\n    '&:hover': {\n      backgroundColor: 'transparent'\n    },\n  },\n  title: {\n    marginLeft: theme.spacing(1),\n  },\n  youtube: {\n    '& :hover': {\n      color: '#f44336',\n    },\n  },\n  box: {\n    '& :last-child': {\n      '& hr.divider': {\n        display: 'none'\n      }\n    }\n  }\n}));\n\ninterface MultiVideoGridProps {\n  loading?: boolean;\n  channels: Channel[];\n  videos: Video[];\n  settings: Settings;\n  maxPerChannel?: number;\n  onSelect: Function;\n  onVideoClick: Function;\n  onSave: Function;\n  onRefresh: Function;\n}\n\nexport default function MultiVideoGrid(props: MultiVideoGridProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { channels, videos, settings, loading = false, maxPerChannel = 9, onSelect, onVideoClick, onSave, onRefresh } = props;\n  const [expandedChannelsIndexes, setExpandedChannelsIndexes] = React.useState<number[]>([]);\n\n  const hideChannel = (channel: Channel) => {\n    channels.forEach((c: Channel) => {\n      if (c.id === channel.id) {\n        c.isHidden = true;\n        onSave([...channels]);\n        onRefresh();\n        return;\n      }\n    });\n  };\n\n  const onChannelNameClick = (event: any, channel: Channel, index: number) => {\n    if (!settings?.openChannelsOnNameClick) {\n      event.preventDefault();\n      onSelect(channel, index);\n    }\n  };\n\n  return (\n    <Box overflow=\"hidden\" className={classes.box}>\n      {channels.map((channel: Channel, index: number) => {\n        if (channel.isHidden) {\n          // eslint-disable-next-line\n          return;\n        }\n        const channelVideos: Video[] = videos.filter((video: Video) => video.channelId === channel.id);\n        // hide empty channels\n        if (!loading && settings.hideEmptyChannels && channelVideos.length === 0) {\n          // eslint-disable-next-line\n          return;\n        }\n        return (\n          <Box key={index}>\n            <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumb}>\n              <Link color=\"inherit\" className={classes.link} href={channel.url} target=\"_blank\" rel=\"noopener\" onClick={(event: any) => onChannelNameClick(event, channel, index)}>\n                <Avatar alt={channel.title} src={channel.thumbnail} />\n                <Typography variant=\"subtitle1\" color=\"textPrimary\" className={classes.title}>\n                  {channel.title}\n                </Typography>\n              </Link>\n              {!settings?.openChannelsOnNameClick && \n                <Link color=\"inherit\" className={`${classes.link} ${classes.youtube}`} href={channel.url} target=\"_blank\" rel=\"noopener\">\n                  <Tooltip title=\"Open channel\" aria-label=\"open-channel\">\n                    <YouTubeIcon />\n                  </Tooltip>\n                </Link>\n              }\n              <IconButton size=\"small\" className={classes.link} onClick={() => hideChannel(channel)}>\n                <Tooltip title=\"Hide channel\" aria-label=\"hide-channel\">\n                  <VisibilityOffIcon />\n                </Tooltip>\n              </IconButton>\n            </Breadcrumbs>\n            <VideoGrid videos={expandedChannelsIndexes.indexOf(index) > -1 ? channelVideos : channelVideos.slice(0, 3)} loading={loading} maxPerChannel={maxPerChannel} maxSkeletons={3} onVideoClick={onVideoClick} />\n            {channelVideos.length > 3 && expandedChannelsIndexes.indexOf(index) === -1 &&\n              <Tooltip title=\"Show more\" aria-label=\"show-more\">\n                <IconButton edge=\"end\" aria-label=\"show-more\" size=\"small\" style={{ marginBottom: theme.spacing(2.5) }} onClick={() => setExpandedChannelsIndexes([...expandedChannelsIndexes, index])}>\n                  <MoreHorizIcon fontSize=\"small\" />\n                </IconButton>\n              </Tooltip>\n            }\n            <Divider className={`divider ${classes.divider}`} />\n          </Box>\n      )}\n    )}\n    </Box>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { RawHTML } from './RawHTML';\n\ninterface ConfirmationDialogProps {\n  open: boolean;\n  title: string;\n  description: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n}\n\nexport function ConfirmationDialog(props: ConfirmationDialogProps) {\n  const { open, title, description, confirmButtonText = 'Confirm', cancelButtonText = 'Cancel', onClose, onConfirm } = props;\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => onClose()}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n    <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <RawHTML>{description}</RawHTML>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => onClose()} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={() => onConfirm()} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { RawHTML } from './RawHTML';\n\ninterface ImportDialogDialogProps {\n  open: boolean;\n  title: string;\n  description: string;\n  textFieldId: string;\n  textFieldLabel: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n  onValidate: Function;\n}\n\nexport function ImportDialog(props: ImportDialogDialogProps) {\n  const { open, title, description, textFieldId, textFieldLabel, confirmButtonText = 'Import', cancelButtonText = 'Cancel', onClose, onConfirm, onValidate } = props;\n  const [textFieldError, setTextFieldError] = React.useState(false);\n\n  const confirm = () => {\n    try {\n      const json = (document.getElementById(textFieldId) as any).value;\n      const data = JSON.parse(json);\n      const isValid = onValidate(data);\n      setTextFieldError(!isValid); // == false when isValid is true & vise versa\n      if (isValid) {\n        onConfirm(data);\n      }\n    } catch(error) {\n      setTextFieldError(true);\n    }\n  };\n\n  const close = () => {\n    setTextFieldError(false);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={close}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n    <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          <RawHTML>{description}</RawHTML>\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id={textFieldId}\n          label={textFieldLabel}\n          error={textFieldError}\n          multiline\n          rows=\"10\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={close} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={confirm} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { isNumber } from '../../helpers/parser';\n\ninterface MoveToPositionDialogProps {\n  open: boolean;\n  title: string;\n  min?: number;\n  max?: number;\n  step?: number;\n  positionFieldId: string;\n  positionFieldLabel: string;\n  confirmButtonText?: string;\n  cancelButtonText?: string;\n  onClose: Function;\n  onConfirm: Function;\n}\n\nexport function MoveToPositionDialog(props: MoveToPositionDialogProps) {\n  const { open, title, min = 0, max = 100, step = 1, positionFieldId, positionFieldLabel, confirmButtonText = 'Move', cancelButtonText = 'Cancel', onClose, onConfirm } = props;\n  const [positionFieldError, setPositionFieldError] = React.useState(false);\n\n  const confirm = () => {\n    const position = (document.getElementById(positionFieldId) as any).value;\n    const isValid = isNumber(position);\n    setPositionFieldError(!isValid); // == false when isValid is true & vise versa\n    if (isValid) {\n      onConfirm(+position);\n    }\n  };\n\n  const close = () => {\n    setPositionFieldError(false);\n    onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={close}\n      aria-labelledby=\"alert-dialog-title\"\n    >\n    <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <TextField\n          autoFocus\n          id={positionFieldId}\n          label={positionFieldLabel}\n          error={positionFieldError}\n          inputProps={{ min: min, max: max, step: step }}\n          defaultValue={min}\n          type=\"number\"\n          size=\"small\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={close} color=\"primary\">\n          {cancelButtonText}\n        </Button>\n        <Button onClick={confirm} color=\"primary\" autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","\nexport function isNumber(value: string) {\n  return !isNaN(+value) && /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/.test(value);\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport ImportExportIcon from '@material-ui/icons/ImportExport';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nimport IconButton from '@material-ui/core/IconButton';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport RootRef from '@material-ui/core/RootRef';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Channel, ChannelSelection } from '../../models/Channel';\nimport { ConfirmationDialog } from '../shared/ConfirmationDialog';\nimport { ImportDialog } from '../shared/ImportDialog';\nimport { MoveToPositionDialog } from '../shared/MoveToPositionDialog';\nimport { download } from '../../helpers/download';\nimport { isWebExtension, createTab, isFirefox } from '../../helpers/browser';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport ControlCameraIcon from '@material-ui/icons/ControlCamera';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport TodayIcon from '@material-ui/icons/Today';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOff';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    channelsOptionsIcon: {\n      top: '50%',\n      right: '16px',\n      position: 'absolute',\n      transform: 'translateY(-50%)',\n    },\n    menuIcon: {\n      fontSize: 20,\n      marginRight: theme.spacing(1),\n      verticalAlign: 'middle',\n    },\n    subheader: {\n      position: 'relative',\n    }\n  }),\n);\n\nconst getListStyle = (isDraggingOver: boolean) => ({\n  //background: isDraggingOver ? 'lightblue' : 'lightgrey',\n});\n\nconst getListItemStyle = (isDragging: boolean, isHidden: boolean, draggableStyle: any) => ({\n  // styles we need to apply on draggables\n  ...draggableStyle,\n  ...(isDragging && {\n    background: \"rgb(235,235,235)\"\n  }),\n  ...(isHidden && {\n    opacity: 0.5,\n    textDecoration: \"line-through\"\n  })\n});\n\n// a little function to help us with reordering the dnd result\nconst reorder = (list: any, startIndex: number, endIndex: number) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\ninterface ChannelListProps {\n  channels: Channel[];\n  selectedIndex: number;\n  cacheSize: string;\n  todaysVideosCount: number;\n  recentVideosCount: number;\n  onShowAll: Function;\n  onShowTodaysVideos: Function;\n  onShowRecentVideos: Function;\n  onRefresh: Function;\n  onSelect: Function;\n  onDelete: Function;\n  onSave: Function;\n  onSelectedIndexChange: Function;\n  onClearCache: Function;\n  onClearRecentVideos: Function;\n  onImport: Function;\n}\n\nexport function ChannelList(props: ChannelListProps) {\n  const { channels, selectedIndex = ChannelSelection.All, cacheSize, todaysVideosCount, recentVideosCount, onShowAll, onShowTodaysVideos, onShowRecentVideos, onRefresh, onSelect, onDelete, onSave, onSelectedIndexChange, onClearCache, onClearRecentVideos, onImport } = props;\n  const classes = useStyles();\n  const [openDeleteChannelDialog, setOpenDeleteChannelDialog] = React.useState(false);\n  const [channelToDelete, setChannelToDelete] = React.useState<Channel>();\n  const [channelToDeleteIndex, setChannelToDeleteIndex] = React.useState(0);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [openedMenuIndex, setOpenedMenuIndex] = React.useState<number|string>(-1);\n  const [openClearCacheDialog, setOpenClearCacheDialog] = React.useState(false);\n  const [openClearRecentVideosDialog, setOpenClearRecentVideosDialog] = React.useState(false);\n  const [openImportChannelsDialog, setOpenImportChannelsDialog] = React.useState(false);\n  const [moveToPositionChannelIndex, setMoveToPositionChannelIndex] = React.useState<number>(-1);\n\n  const onDragEnd = (result: any) => {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    moveChannel(result.source.index, result.destination.index);\n  };\n\n  const getSelectedChannel = (): Channel | undefined => channels.find((_, i) => i === selectedIndex);\n\n  const moveChannel = (indexFrom: number, indexTo: number) => {\n    closeMenu();\n    const selectedChannel = getSelectedChannel();\n    const items: Channel[] = reorder(\n      channels,\n      indexFrom,\n      indexTo\n    ) as Channel[];\n    //console.log(items);\n    onSave(items);\n    if (selectedChannel) {\n      onSelectedIndexChange(items.indexOf(selectedChannel));\n    }\n  };\n\n  const deleteChannel = (channel: Channel, index: number) => {\n    closeMenu();\n    setChannelToDelete(channel);\n    setChannelToDeleteIndex(index);\n    setOpenDeleteChannelDialog(true);\n  };\n\n  const confirmDeleteChannel = () => {\n    const selectedChannel = getSelectedChannel();\n    onDelete(channelToDeleteIndex);\n    if (selectedChannel && selectedIndex !== channelToDeleteIndex) {\n      onSelectedIndexChange(channels.filter((_, i) => i !== channelToDeleteIndex).indexOf(selectedChannel));\n    }\n    closeDeleteChannelDialog();\n  };\n\n  const closeDeleteChannelDialog = () => {\n    setOpenDeleteChannelDialog(false);\n  };\n\n  const openChannel = (channel: Channel) => {\n    closeMenu();\n    if (isWebExtension()) {\n      createTab(channel.url);\n    } else {\n      window.open(channel.url, '_blank');\n    }\n  };\n\n  const refreshChannel = (channel: Channel, index: number) => {\n    closeMenu();\n    onSelect(channel, index, true);\n  };\n\n  const setChannel = (channel: Channel, index: number) => {\n    closeMenu();\n    channels[index] = channel;\n    onSave([...channels]);\n    if (selectedIndex < 0 && selectedIndex !== ChannelSelection.None) {\n      onRefresh(selectedIndex);\n    }\n  };\n\n  const hideChannel = (channel: Channel, index: number) => {\n    channel.isHidden = true;\n    setChannel(channel, index);\n  };\n\n  const unhideChannel = (channel: Channel, index: number) => {\n    channel.isHidden = false;\n    setChannel(channel, index);\n  };\n\n  const disableChannelNotifications = (channel: Channel, index: number) => {\n    channel.notificationsDisabled = true;\n    setChannel(channel, index);\n  };\n\n  const enableChannelNotifications = (channel: Channel, index: number) => {\n    channel.notificationsDisabled = false;\n    setChannel(channel, index);\n  };\n\n  const openMenu = (event: any, index: number|string) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setOpenedMenuIndex(index);\n  };\n\n  const closeMenu = () => {\n    setAnchorEl(null);\n    setOpenedMenuIndex(-1);\n  };\n\n  const confirmClearCache = () => {\n    onClearCache();\n    closeClearCacheDialog();\n  };\n\n  const closeClearCacheDialog = () => {\n    setOpenClearCacheDialog(false);\n  };\n\n  const exportChannels = () => {\n    closeMenu();\n    const data = JSON.stringify(channels, null, 4);\n    const file = new Blob([data], {type: 'text/json'});\n    download(file, 'channels.json');\n  };\n\n  const importChannels = () => {\n    closeMenu();\n    setOpenImportChannelsDialog(true);\n  };\n\n  const closeImportChannelsDialog = () => {\n    setOpenImportChannelsDialog(false);\n  };\n\n  const confirmImportChannels = (channelsList: Channel[]) => {\n    onImport(channelsList);\n    closeImportChannelsDialog();\n  };\n\n  const openMoveChannelToPositionDialog = (channelIndex: number) => {\n    closeMenu();\n    setMoveToPositionChannelIndex(channelIndex);\n  };\n\n  const closeMoveChannelToPositionDialog = () => {\n    setMoveToPositionChannelIndex(-1);\n  };\n\n  const moveChannelToPosition = (position: number) => {\n    const indexTo = position - 1;\n    if (indexTo !== moveToPositionChannelIndex) {\n      moveChannel(moveToPositionChannelIndex, indexTo);\n    }\n    closeMoveChannelToPositionDialog();\n  };\n\n  const validateChannels = (channelsList: Channel[]): boolean => {\n    let isValid = true;\n    channelsList.forEach((channel: Channel) => {\n      if (!channel.id || !channel.title || !channel.thumbnail || !channel.description || !channel.url) {\n        //return false; // not working in foreach loop @see https://medium.com/front-end-weekly/3-things-you-didnt-know-about-the-foreach-loop-in-js-ff02cec465b1\n        isValid = false;\n      }\n    });\n    return isValid;\n  };\n\n  const clearCache = () => {\n    closeMenu();\n    setOpenClearCacheDialog(true);\n  };\n\n  const refreshRecentVideos = (event: any) => {\n    closeMenu();\n    onRefresh(ChannelSelection.RecentVideos, event);\n  };\n\n  const clearRecentVideos = () => {\n    closeMenu();\n    setOpenClearRecentVideosDialog(true);\n  };\n\n  const confirmClearRecentVideos = () => {\n    onClearRecentVideos();\n    closeClearRecentVideosDialog();\n  };\n\n  const closeClearRecentVideosDialog = () => {\n    setOpenClearRecentVideosDialog(false);\n  };\n\n  const refreshAll = (event?: any) => {\n    onRefresh(ChannelSelection.All, event);\n  };\n\n  const refreshTodaysVideos = (event: any) => {\n    closeMenu();\n    onRefresh(ChannelSelection.TodaysVideos, event);\n  };\n\n  return (\n    <React.Fragment>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n        {(provided: any, snapshot: any) => (\n          <RootRef rootRef={provided.innerRef}>\n            <List\n              dense\n              subheader={<ListSubheader className={classes.subheader}>Channels\n                <IconButton edge=\"end\" aria-label=\"channels-options\" size=\"small\" className={classes.channelsOptionsIcon} onClick={(event) => openMenu(event, 'channels-options')}>\n                  <MoreVertIcon fontSize=\"small\" />\n                </IconButton>\n                <Menu\n                  id=\"menu-channels-options\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={openedMenuIndex === 'channels-options'}\n                  onClose={closeMenu}\n                >\n                  <MenuItem onClick={() => exportChannels()}><GetAppIcon className={classes.menuIcon} />Export</MenuItem>\n                  <MenuItem onClick={() => importChannels()}><ImportExportIcon className={classes.menuIcon} />Import</MenuItem>\n                  <Tooltip title={\"Cache size: \" + cacheSize} aria-label=\"clear-cache\">\n                    <MenuItem onClick={() => clearCache()}><DeleteSweepIcon className={classes.menuIcon} />Clear cache</MenuItem>\n                  </Tooltip>\n                </Menu>\n              </ListSubheader>}\n              style={getListStyle(snapshot.isDraggingOver)}\n            >\n              <ListItem button key=\"all\" selected={selectedIndex === ChannelSelection.All} onClick={() => onShowAll()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={channels.length}>\n                    <Avatar>\n                      <SubscriptionsIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"All\" />\n                {channels?.length > 0 && <ListItemSecondaryAction>\n                  <Tooltip title=\"Refresh\" aria-label=\"refresh\">\n                    <IconButton edge=\"end\" aria-label=\"refresh\" size=\"small\" onClick={(event) => refreshAll(event)}>\n                      <RefreshIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </ListItemSecondaryAction>}\n              </ListItem>\n              <ListItem button key=\"today\" selected={selectedIndex === ChannelSelection.TodaysVideos} onClick={() => onShowTodaysVideos()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={todaysVideosCount}>\n                    <Avatar>\n                      <TodayIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"Today's videos\" />\n                {channels?.length > 0 && <ListItemSecondaryAction>\n                  <Tooltip title=\"Refresh\" aria-label=\"refresh\">\n                    <IconButton edge=\"end\" aria-label=\"refresh\" size=\"small\" onClick={(event) => refreshTodaysVideos(event)}>\n                      <RefreshIcon fontSize=\"small\" />\n                    </IconButton>\n                  </Tooltip>\n                </ListItemSecondaryAction>}\n              </ListItem>\n              <ListItem button key=\"recent\" selected={selectedIndex === ChannelSelection.RecentVideos} onClick={() => onShowRecentVideos()}>\n                <ListItemIcon>\n                  <Badge color=\"secondary\" badgeContent={recentVideosCount}>\n                    <Avatar>\n                      <AccessTimeIcon />\n                    </Avatar>\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText primary=\"Recent videos\" />\n                {channels?.length > 0 && <ListItemSecondaryAction>\n                  <IconButton edge=\"end\" aria-label=\"more\" size=\"small\" onClick={(event) => openMenu(event, ChannelSelection.RecentVideos)}>\n                    <MoreVertIcon fontSize=\"small\" />\n                  </IconButton>\n                  <Menu\n                    id=\"menu-recent-videos\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={openedMenuIndex === ChannelSelection.RecentVideos}\n                    onClose={closeMenu}\n                  >\n                    <MenuItem onClick={(event) => refreshRecentVideos(event)}><RefreshIcon className={classes.menuIcon} /> Refresh</MenuItem>\n                    {recentVideosCount > 0 && <MenuItem onClick={() => clearRecentVideos()}><DeleteIcon className={classes.menuIcon} /> Clear</MenuItem>}\n                  </Menu>\n                </ListItemSecondaryAction>}\n              </ListItem>\n              {channels.map((channel: Channel, index: number) => (\n                <Draggable key={channel.id} draggableId={channel.id} index={index}>\n                {(provided: any, snapshot: any) => (\n                  <ListItem\n                    ContainerProps={{ ref: provided.innerRef }}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getListItemStyle(\n                      snapshot.isDragging,\n                      channel.isHidden,\n                      provided.draggableProps.style\n                    )}\n                    button\n                    selected={index === selectedIndex}\n                    onClick={() => onSelect(channel, index)}\n                  >\n                    <ListItemIcon><Avatar alt={channel.title} src={channel.thumbnail} /></ListItemIcon>\n                    <ListItemText primary={channel.title} />\n                    <ListItemSecondaryAction>\n                      <IconButton edge=\"end\" aria-label=\"more\" size=\"small\" onClick={(event) => openMenu(event, index)}>\n                        <MoreVertIcon fontSize=\"small\" />\n                      </IconButton>\n                      <Menu\n                        id={\"menu-\" + index}\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={openedMenuIndex === index}\n                        onClose={closeMenu}\n                      >\n                        <MenuItem onClick={() => openChannel(channel)}><OpenInNewIcon className={classes.menuIcon} /> Open channel</MenuItem>\n                        <MenuItem onClick={() => refreshChannel(channel, index)}><RefreshIcon className={classes.menuIcon} /> Refresh</MenuItem>\n                        {isWebExtension() && isFirefox() && index > 0 && <MenuItem onClick={() => moveChannel(index, index - 1)}><KeyboardArrowUpIcon className={classes.menuIcon} />Move up</MenuItem>}\n                        {isWebExtension() && isFirefox() && index < channels.length - 1 && <MenuItem onClick={() => moveChannel(index, index + 1)}><KeyboardArrowDownIcon className={classes.menuIcon} />Move down</MenuItem>}\n                        {isWebExtension() && isFirefox() && <MenuItem onClick={() => openMoveChannelToPositionDialog(index)}><ControlCameraIcon className={classes.menuIcon} />Move to position</MenuItem>}\n                        {channel.isHidden ? \n                          <MenuItem onClick={() => unhideChannel(channel, index)}><VisibilityIcon className={classes.menuIcon} /> Unhide</MenuItem> : \n                          <MenuItem onClick={() => hideChannel(channel, index)}><VisibilityOffIcon className={classes.menuIcon} /> Hide</MenuItem>\n                        }\n                        {channel.notificationsDisabled ? \n                          <MenuItem onClick={() => enableChannelNotifications(channel, index)}><NotificationsActiveIcon className={classes.menuIcon} /> Enable notifications</MenuItem> : \n                          <MenuItem onClick={() => disableChannelNotifications(channel, index)}><NotificationsOffIcon className={classes.menuIcon} /> Disable notifications</MenuItem>\n                        }\n                        <MenuItem onClick={() => deleteChannel(channel, index)}><DeleteIcon className={classes.menuIcon} /> Delete</MenuItem>\n                      </Menu>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </List>\n          </RootRef>\n        )}\n        </Droppable>\n      </DragDropContext>\n      <ConfirmationDialog\n        open={openClearCacheDialog}\n        title=\"Clear cache\"\n        description=\"This action is irreversible, would you like to continue?\"\n        confirmButtonText=\"Clear\"\n        onClose={closeClearCacheDialog}\n        onConfirm={confirmClearCache}\n      />\n      <ConfirmationDialog\n        open={openClearRecentVideosDialog}\n        title=\"Clear recent videos\"\n        description=\"Would you like to reset/clear recent videos?\"\n        confirmButtonText=\"Clear\"\n        onClose={closeClearRecentVideosDialog}\n        onConfirm={confirmClearRecentVideos}\n      />\n      <ConfirmationDialog\n        open={openDeleteChannelDialog}\n        title=\"Delete Channel\"\n        description={\"Would you like to delete <strong>\" + channelToDelete?.title + \"</strong> channel?\"}\n        confirmButtonText=\"Delete\"\n        onClose={closeDeleteChannelDialog}\n        onConfirm={confirmDeleteChannel}\n      />\n      <ImportDialog\n        open={openImportChannelsDialog}\n        title=\"Import Channels\"\n        description=\"Copy & paste below the content of <strong>channels.json</strong> file. Notice that your current channels list will be overrided!\"\n        textFieldId=\"channels-to-import\"\n        textFieldLabel=\"Channels (json)\"\n        onClose={closeImportChannelsDialog}\n        onConfirm={confirmImportChannels}\n        onValidate={validateChannels}\n      />\n      <MoveToPositionDialog\n        open={moveToPositionChannelIndex > -1}\n        title=\"Move Channel To Position\"\n        min={1}\n        max={channels.length}\n        positionFieldId=\"channel-position\"\n        positionFieldLabel=\"Position\"\n        onClose={closeMoveChannelToPositionDialog}\n        onConfirm={moveChannelToPosition}\n      />\n    </React.Fragment>\n  )\n}\n","/**\n * Stolen from https://stackoverflow.com/a/44737041\n */\nexport function download(blob: Blob, filename: string) {\n  if (window.navigator.msSaveOrOpenBlob) { // IE10+\n    window.navigator.msSaveOrOpenBlob(blob, filename);\n  } else { // Others\n    let a = document.createElement('a'),\n        url = URL.createObjectURL(blob);\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);  \n    }, 0);\n  }\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport { RawHTML } from './RawHTML';\n\ninterface MessageSnackbarProps {\n  message: string|undefined;\n  open: boolean;\n  onClose: Function;\n  autoHideDuration?: number;\n  anchorOrigin?: any;\n}\n\nexport function MessageSnackbar(props: MessageSnackbarProps) {\n  const { message, open, onClose, autoHideDuration = 6000, anchorOrigin = { vertical: 'top', horizontal: 'center' } } = props;\n\n  return (\n    <Snackbar\n      anchorOrigin={anchorOrigin}\n      open={open}\n      autoHideDuration={autoHideDuration}\n      onClose={() => onClose()}\n      message={message && <RawHTML>{message}</RawHTML>}\n      action={\n        <Button color=\"secondary\" size=\"small\" onClick={() => onClose()}>\n          Close\n        </Button>\n      }\n    />\n  )\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport Slide from '@material-ui/core/Slide';\nimport Switch from '@material-ui/core/Switch';\nimport Select from '@material-ui/core/Select';\nimport Link from '@material-ui/core/Link';\nimport { TransitionProps } from '@material-ui/core/transitions';\nimport { Settings } from '../../models/Settings';\nimport { ChannelSelection } from '../../models/Channel';\nimport { isWebExtension } from '../../helpers/browser';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    settingsAppBar: {\n      position: 'relative',\n      backgroundColor: '#f44336',\n    },\n    settingsTitle: {\n      marginLeft: theme.spacing(2),\n      flex: 1,\n    },\n    container: {\n      width: '223px',\n      height: '40px',\n    },\n    select: {\n      padding: '10px 26px 10px 12px',\n      '&:-moz-focusring': { // removes the ugly dotted outline around the selected option in Firefox\n        color: 'transparent',\n        textShadow: '0 0 0 #000',\n      },\n    },\n    optionLabel: {\n      maxWidth: '70%',\n    },\n  }),\n);\n\nconst settingsDialogTransition = React.forwardRef<unknown, TransitionProps>(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface SettingsDialogProps {\n  settings: Settings;\n  open: boolean;\n  onClose: Function;\n  onSave: Function;\n}\n\nexport function SettingsDialog(props: SettingsDialogProps) {\n  const { settings, open, onClose, onSave } = props;\n  const classes = useStyles();\n\n  const validateSettings = (event: any) => {\n    let input = event.target;\n    //console.log(input.type, input.min, input.max, input.value);\n    if (input.type === \"number\") {\n      if (!input.value.match(/^\\d+$/) || +input.value < +input.min) {\n        input.value = input.min;\n      } else if (+input.value > +input.max) {\n        input.value = input.max;\n      }\n    }\n  };\n\n  return (\n    <Dialog fullScreen open={open} onClose={() => onClose()} TransitionComponent={settingsDialogTransition}>\n      <AppBar color=\"secondary\" className={classes.settingsAppBar}>\n        <Toolbar>\n          <IconButton edge=\"start\" color=\"inherit\" onClick={() => onClose()} aria-label=\"close\">\n            <CloseIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.settingsTitle}>\n            Settings\n          </Typography>\n          <Button autoFocus color=\"inherit\" onClick={() => onSave()}>\n            save\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <List>\n        <ListItem>\n          <ListItemText primary=\"Default channel selection\" secondary=\"The channel menu that would be selected by default\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Select\n              native\n              inputProps={{ id: 'defaultChannelSelection', className: classes.select }}\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.container}\n              defaultValue={settings?.defaultChannelSelection}\n            >\n              <option value={ChannelSelection.All}>All</option>\n              <option value={ChannelSelection.TodaysVideos}>Today's videos</option>\n              <option value={ChannelSelection.RecentVideos}>Recent videos</option>\n            </Select>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Max videos per channel\" secondary=\"The maximum number of videos to show per channel\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"videosPerChannel\"\n              type=\"number\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ min: 3, max: 50, step: 3 }}\n              className={classes.container}\n              defaultValue={settings?.videosPerChannel}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Anteriority of videos (in days)\" secondary=\"Number of days to subtract from the current date\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"videosAnteriority\"\n              type=\"number\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ min: 1, max: 365, step: 7 }}\n              className={classes.container}\n              defaultValue={settings?.videosAnteriority}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Sort videos by\" secondary=\"Videos sorting criteria\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Select\n              native\n              inputProps={{ id: 'sortVideosBy', className: classes.select }}\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.container}\n              defaultValue={settings?.sortVideosBy}\n            >\n              <option value=\"date\">Date</option>\n              <option value=\"views\">Views</option>\n            </Select>\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary={\n            <Typography variant=\"body1\" component=\"span\">Custom API key (<Link href=\"https://www.slickremix.com/docs/get-api-key-for-youtube/\" target=\"_blank\" rel=\"noopener\">How to get an API key?</Link>)</Typography>\n          } secondary={\n            <React.Fragment>\n              <Typography variant=\"body2\" component=\"span\">Replaces the default youtube API key used to fetch channels & videos data</Typography>\n              <br/>\n              <Typography variant=\"body2\" component=\"span\">(will apply the next time you {isWebExtension() ? 'open the extension popup' : 'reload the app'})</Typography>\n            </React.Fragment>\n          } className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <TextField\n              id=\"apiKey\"\n              type=\"text\"\n              placeholder=\"AIzaSyDOkg-u9jnhP-WnzX5WPJyV1sc5QQrtuyc\"\n              size=\"small\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              inputProps={{ minLength: 39 }}\n              className={classes.container}\n              defaultValue={settings?.apiKey}\n              onChange={(event) => validateSettings(event)}\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        {isWebExtension() &&\n          <React.Fragment>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Auto videos check rate (in minutes)\" secondary=\"Number of minutes to wait before auto-checking for recent videos\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <TextField\n                  id=\"autoVideosCheckRate\"\n                  type=\"number\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                  inputProps={{ min: 5, max: 720, step: 5 }}\n                  className={classes.container}\n                  defaultValue={settings?.autoVideosCheckRate}\n                  onChange={(event) => validateSettings(event)}\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Enable recent videos notifications\" secondary=\"Notifies you when recent videos get posted\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"enableRecentVideosNotifications\"\n                  defaultChecked={settings?.enableRecentVideosNotifications}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Auto play videos once opened\" secondary=\"Auto-play permission should be granted for youtube.com\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"autoPlayVideos\"\n                  defaultChecked={settings?.autoPlayVideos}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n            <Divider />\n            <ListItem>\n              <ListItemText primary=\"Open videos in inactive tabs\" secondary=\"Will open videos in new tabs without losing focus of the current tab\" className={classes.optionLabel} />\n              <ListItemSecondaryAction>\n                <Switch\n                  id=\"openVideosInInactiveTabs\"\n                  defaultChecked={settings?.openVideosInInactiveTabs}\n                  color=\"secondary\"\n                />\n              </ListItemSecondaryAction>\n            </ListItem>\n          </React.Fragment>\n        }\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Open channels on name click\" secondary='Will open channels directly by clicking on their name, replaces the icon button \"open channel\"' className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"openChannelsOnNameClick\"\n              defaultChecked={settings?.openChannelsOnNameClick}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Hide empty channels\" secondary=\"Hide all empty channels by default\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"hideEmptyChannels\"\n              defaultChecked={settings?.hideEmptyChannels}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Auto clear recent videos\" secondary=\"Auto-clear recent videos before each startup\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"autoClearRecentVideos\"\n              defaultChecked={settings?.autoClearRecentVideos}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary=\"Auto clear videos cache\" secondary=\"Cache may speed up loading time & reduce API quota consumption\" className={classes.optionLabel} />\n          <ListItemSecondaryAction>\n            <Switch\n              id=\"autoClearCache\"\n              defaultChecked={settings?.autoClearCache}\n              color=\"secondary\"\n            />\n          </ListItemSecondaryAction>\n        </ListItem>\n      </List>\n    </Dialog>\n  )\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\ninterface CustomSnackbarProps {\n  open: boolean;\n  message: string;\n  onClose: Function;\n  onRefresh: Function;\n}\n\nexport function CustomSnackbar(props: CustomSnackbarProps) {\n  const { open, message, onClose, onRefresh } = props;\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      open={open}\n      autoHideDuration={6000}\n      onClose={() => onClose()}\n      message={message}\n      action={\n        <React.Fragment>\n          <Button color=\"secondary\" size=\"small\" onClick={(event) => onRefresh(null, event)}>\n            Refresh\n          </Button>\n          <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => onClose()}>\n            <CloseIcon fontSize=\"small\" />\n          </IconButton>\n        </React.Fragment>\n      }\n    />\n  )\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport FavoriteRoundedIcon from '@material-ui/icons/FavoriteRounded';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Fade from '@material-ui/core/Fade';\nimport SearchChannelInput from './channel/SearchChannelInput';\nimport { Channel, ChannelSelection } from '../models/Channel';\nimport { getChannelActivities, getVideoInfo } from '../helpers/youtube';\nimport { Video } from '../models/Video';\nimport { getDateBefore, memorySizeOf, isInToday, diffHours } from '../helpers/utils';\nimport MultiVideoGrid from './video/MultiVideoGrid';\nimport VideoGrid from './video/VideoGrid';\nimport { Settings, SettingsType } from '../models/Settings';\nimport { saveToStorage } from '../helpers/storage';\nimport { ChannelList } from './channel/ChannelList';\nimport { MessageSnackbar } from './shared/MessageSnackbar';\nimport { SettingsDialog } from './settings/SettingsDialog';\nimport { CustomSnackbar } from './shared/CustomSnackbar';\nimport { isWebExtension, isFirefox, createTab, executeScript } from '../helpers/browser';\nimport { debug, warn } from '../helpers/debug';\n// @ts-ignore\nimport ReactPullToRefresh from 'react-pull-to-refresh';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOff';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      minWidth: '700px',\n      minHeight: isWebExtension() ? '500px' : '100vh',\n      maxHeight: isWebExtension() ? '500px' : 'none',\n      maxWidth: isWebExtension() && isFirefox() ? '700px' : 'none',\n    },\n    appBar: {\n      backgroundColor: '#f44336',\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n      display: 'none',\n    },\n    grow: {\n      flexGrow: 1,\n    },\n    title: {\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    content: {\n      flexGrow: 1,\n      //padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n    container: {\n      display: 'flex',\n      width: '100%',\n      height: '80%',\n      justifyContent: 'center',\n      '&.expanded': {\n        height: '100%',\n      },\n    },\n    centered: {\n      alignSelf: 'center',\n      textAlign: 'center',\n    },\n    heartIcon: {\n      color: '#e25555',\n      fontSize: 16,\n      verticalAlign: 'middle',\n    },\n    madeWithLove: {\n      padding: theme.spacing(1, 0),\n    },\n  }),\n);\n\ninterface PopupProps {\n  channels: Channel[];\n  settings: Settings;\n  cache: any;\n  isReady: boolean;\n}\n\nexport default function Popup(props: PopupProps) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [channels, setChannels] = React.useState<Channel[]>(props.channels);\n  const [videos, setVideos] = React.useState<Video[]>([]);\n  const [openDrawer, setOpenDrawer] = React.useState(false);\n  const [isReady, setIsReady] = React.useState(props.isReady);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [selectedChannelIndex, setSelectedChannelIndex] = React.useState(ChannelSelection.All);\n  const [settings, setSettings] = React.useState<Settings>(props.settings);\n  const [openSettingsDialog, setOpenSettingsDialog] = React.useState(false);\n  const [snackbarMessage, setSnackbarMessage] = React.useState('');\n  const [lastError, setLastError] = React.useState<Error|null>(null);\n  const [cache, setCache] = React.useState<any>({});\n  const [recentVideosCount, setRecentVideosCount] = React.useState(0);\n  const [todaysVideosCount, setTodaysVideosCount] = React.useState(0);\n\n  React.useEffect(() => setChannels(props.channels), [props.channels]);\n  React.useEffect(() => setSettings(props.settings), [props.settings]);\n  React.useEffect(() => setCache(props.cache), [props.cache]);\n  React.useEffect(() => setIsReady(props.isReady), [props.isReady]);\n\n  React.useEffect(() => {\n    warn('isReady changed', isReady);\n    if (isReady) {\n      if (channels.length && !videos.length) {\n        showChannelSelection(settings.defaultChannelSelection, true);\n      } else if (selectedChannelIndex !== settings.defaultChannelSelection) {\n        setSelectedChannelIndex(settings.defaultChannelSelection);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isReady]);\n\n  React.useEffect(() => {\n    warn('channels changed', { isReady: isReady });\n    if (isReady) {\n      saveToStorage({ channels: channels });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [channels]);\n\n  React.useEffect(() => {\n    warn('settings changed', { isReady: isReady });\n    if (isReady) {\n      saveToStorage({ settings: settings });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [settings]);\n\n  React.useEffect(() => {\n    warn('cache or channels changed', { isReady: isReady });\n    if (isReady) {\n      debug('----------------------');\n      debug('counting todays & recent videos');\n      let totalRecentVideosCount: number = 0, totalTodaysVideosCount: number = 0;\n      Object.keys(cache).forEach((channelId: string) => {\n        const channel = channels.find((c: Channel) => c.id === channelId);\n        if (!channel || channel.isHidden) {\n          return;\n        }\n        const recentVideosCountPerChannel = (cache[channelId].filter((video: Video) => video.isRecent)).length;\n        const todaysVideosCountPerChannel = (cache[channelId].filter((video: Video) => isInToday(video.publishedAt))).length;\n        debug(channel.title, { recent: recentVideosCountPerChannel, todays: todaysVideosCountPerChannel });\n        totalRecentVideosCount += recentVideosCountPerChannel;\n        totalTodaysVideosCount += todaysVideosCountPerChannel;\n      });\n      debug('total count', { recent: totalRecentVideosCount, todays: totalTodaysVideosCount });\n      setRecentVideosCount(totalRecentVideosCount);\n      setTodaysVideosCount(totalTodaysVideosCount);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cache, channels]);\n\n  const handleDrawerOpen = () => {\n    setOpenDrawer(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n\n  const displayError = (error: Error) => {\n    console.error(error);\n    setLastError(error);\n  };\n\n  const getChannelVideos = (channel: Channel, ignoreCache: boolean = false): Promise<Video[]> => {\n    return new Promise((resolve, reject) => {\n      if (!ignoreCache && cache[channel.id]?.length) {\n        debug('----------------------');\n        debug('load videos from cache', channel.title, cache[channel.id]);\n        resolve(cache[channel.id].slice(0, settings.videosPerChannel));\n      } else {\n        getChannelActivities(channel.id, getDateBefore(settings.videosAnteriority)).then((results) => {\n          debug('----------------------');\n          debug('activities of', channel.title, results);\n          if (results?.items) {\n            // get recent videos ids\n            const videosIds: string[] = results.items.map((item: any) => item.contentDetails.upload?.videoId).filter((id: string) => id?.length);\n            const cacheVideosIds: string[] = cache[channel.id]?.length ? cache[channel.id].map((video: Video) => video.id) : [];\n            const recentVideosIds: string[] = videosIds.filter((videoId: string, index: number) => videosIds.indexOf(videoId) === index) // remove duplicates\n                                                       .slice(0, settings.videosPerChannel)\n                                                       .filter((videoId: string) => cacheVideosIds.indexOf(videoId) === -1); // remove videos already in cache\n            // get recent videos informations\n            if (!recentVideosIds.length) {\n              debug('no recent videos for this channel');\n              resolve(cache[channel.id]?.slice(0, settings.videosPerChannel) || []);\n            } else {\n              debug('getting recent videos of', channel.title, { recentVideosIds: recentVideosIds, cacheVideosIds: cacheVideosIds });\n              getVideoInfo(recentVideosIds).then((videosData: Video[]) => {\n                debug('recent videos data', videosData);\n                // mark new videos as recent\n                const now = new Date();\n                videosData = videosData.map((video: Video) => {\n                  const videoDate = new Date(video.publishedAt); // convert timestamp to Date object\n                  if (diffHours(now, videoDate) <= 24) { // avoid marking too old videos as recent when cache is empty\n                    video.isRecent = true;\n                  }\n                  return video;\n                });\n                // merge cached & new videos\n                cache[channel.id] = cache[channel.id]?.length ? [...videosData, ...cache[channel.id]] : videosData;\n                // sort videos\n                const videos = cache[channel.id].sort((a: Video, b: Video) => {\n                  if (settings.sortVideosBy === 'views' && a.views?.count && b.views?.count) {\n                    return b.views.count - a.views.count;\n                  } else {\n                    return b.publishedAt - a.publishedAt;\n                  }\n                }).slice(0, settings.videosPerChannel);\n                // save to cache\n                setCache({...cache});\n                saveToStorage({ cache: cache });\n                resolve(videos || []);\n              }).catch((error: Error) => {\n                displayError(error);\n                resolve([]);\n              });\n            }\n          } else {\n            resolve([]);\n          }\n        }).catch((error: Error) => {\n          displayError(error);\n          resolve([]);\n        });\n      }\n    });\n  };\n\n  const addChannel = (channel: Channel) => {\n    // Add channel\n    debug('added channel:', channel);\n    const found: Channel | undefined = channels.find((c: Channel) => c.id === channel.id);\n    if (!found) {\n      setChannels([...channels, channel]);\n      setSelectedChannelIndex(channels.length);\n    } else {\n      setSelectedChannelIndex(channels.indexOf(found));\n    }\n    // Get channel videos\n    setIsLoading(true);\n    getChannelVideos(channel).then((videos: Video[]) => {\n      setVideos(videos || []);\n      setIsLoading(false);\n    });\n  };\n\n  const selectChannel = (channel: Channel, index: number, ignoreCache: boolean = false) => {\n    // Select channel\n    debug('selected channel:', channel);\n    setSelectedChannelIndex(index);\n    // Get its videos\n    setIsLoading(true);\n    return getChannelVideos(channel, ignoreCache).then((videos: Video[]) => {\n      setVideos(videos || []);\n      setIsLoading(false);\n      window.scrollTo(0, 0); // scroll to top\n    });\n  };\n  \n  const deleteChannel = (index: number) => {\n    setChannels(channels.filter((_, i) => i !== index));\n    if (selectedChannelIndex === index) {\n      setVideos([]);\n      setSelectedChannelIndex(ChannelSelection.None);\n    }\n  };\n\n  const fetchChannelsVideos = (selection: ChannelSelection, filterFunction: Function|null = null, ignoreCache: boolean = false, customChannels?: Channel[]) => {\n    // Update channel selection\n    setSelectedChannelIndex(selection);\n    // Get channels videos\n    setIsLoading(true);\n    setVideos([]);\n    let promises: Promise<any>[] = [];\n    let videos: Video[] = [];\n    const channelsList = customChannels || channels;\n\n    channelsList.filter((channel: Channel) => !channel.isHidden).forEach((channel: Channel) => {\n\n      const promise = getChannelVideos(channel, ignoreCache).then((newVideos: Video[]) => {\n        debug('----------------------');\n        debug(channel.title, newVideos);\n        if (filterFunction) {\n          newVideos = newVideos.filter((video: Video) => filterFunction(video));\n        }\n        videos.push(...newVideos);\n      });\n      promises.push(promise);\n\n    });\n\n    return Promise.all(promises).finally(() => {\n      setVideos(videos);\n      setIsLoading(false);\n    });\n  };\n\n  const showAllChannels = (ignoreCache: boolean = false) => {\n    return fetchChannelsVideos(ChannelSelection.All, null, ignoreCache);\n  };\n\n  const showTodaysVideos = (ignoreCache: boolean = false) => {\n    return fetchChannelsVideos(ChannelSelection.TodaysVideos, (video: Video) => isInToday(video.publishedAt), ignoreCache);\n  };\n\n  const showRecentVideos = (ignoreCache: boolean = false) => {\n    return fetchChannelsVideos(ChannelSelection.RecentVideos, (video: Video) => video.isRecent, ignoreCache);\n  };\n\n  const showChannelSelection = (selection: ChannelSelection, ignoreCache: boolean = false) => {\n    switch(selection) {\n      case ChannelSelection.TodaysVideos:\n        return showTodaysVideos(ignoreCache);\n      case ChannelSelection.RecentVideos:\n        return showRecentVideos(ignoreCache);\n      case ChannelSelection.All:\n      default:\n        return showAllChannels(ignoreCache);\n    }\n  };\n\n  const clearRecentVideos = () => {\n    Object.keys(cache).forEach((channelId: string) => {\n      cache[channelId] = cache[channelId].map((video: Video) => {\n        video.isRecent = false;\n        return video;\n      });\n    });\n    setCache({...cache});\n    saveToStorage({ cache: cache });\n    if (selectedChannelIndex === ChannelSelection.RecentVideos) {\n      refreshChannels(ChannelSelection.RecentVideos);\n    }\n  };\n\n  const refreshChannels = (selection?: ChannelSelection, event?: any) => {\n    if (event) {\n      event.stopPropagation();\n    }\n    if (selection === undefined || selection === null) {\n      selection = selectedChannelIndex;\n    }\n    if (selection >= 0) {\n      return selectChannel(channels[selection], selection, true);\n    } else {\n      return showChannelSelection(selection, true);\n    }\n  };\n\n  const importChannels = (channelsList: Channel[]) => {\n    debug('importing channels', channelsList);\n    // Update channels\n    setChannels(channelsList);\n    fetchChannelsVideos(ChannelSelection.All, null, true, channelsList);\n    setSnackbarMessage('Channels imported!');\n  };\n\n  const clearCache = () => {\n    setCache({});\n    saveToStorage({ cache: {} });\n    setSnackbarMessage('Cache cleared!');\n  };\n\n  const getCacheSize = () => {\n    const size = memorySizeOf(cache);\n    //console.log(size);\n    return size;\n  };\n\n  const openSettings = (event: any) => {\n    event.stopPropagation();\n    setOpenSettingsDialog(true);\n  };\n\n  const closeSettings = () => {\n    setOpenSettingsDialog(false);\n  };\n\n  const getSettingsValue = (id: string, type: SettingsType) => {\n    const element = document.getElementById(id) as any;\n    if (element) {\n      switch(type) {\n        case SettingsType.Number:\n          return +element.value;\n        case SettingsType.Boolean:\n          return element.checked;\n        case SettingsType.String:\n        default:\n          return element.value;\n      }\n    } else {\n      return (settings as any)[id];\n    }\n  };\n\n  const saveSettings = () => {\n    // Update settings\n    setSettings({\n      defaultChannelSelection: getSettingsValue('defaultChannelSelection', SettingsType.Number),\n      videosPerChannel: getSettingsValue('videosPerChannel', SettingsType.Number),\n      videosAnteriority: getSettingsValue('videosAnteriority', SettingsType.Number),\n      sortVideosBy: getSettingsValue('sortVideosBy', SettingsType.String),\n      apiKey: getSettingsValue('apiKey', SettingsType.String),\n      autoVideosCheckRate: getSettingsValue('autoVideosCheckRate', SettingsType.Number),\n      enableRecentVideosNotifications: getSettingsValue('enableRecentVideosNotifications', SettingsType.Boolean),\n      autoPlayVideos: getSettingsValue('autoPlayVideos', SettingsType.Boolean),\n      openVideosInInactiveTabs: getSettingsValue('openVideosInInactiveTabs', SettingsType.Boolean),\n      openChannelsOnNameClick: getSettingsValue('openChannelsOnNameClick', SettingsType.Boolean),\n      hideEmptyChannels: getSettingsValue('hideEmptyChannels', SettingsType.Boolean),\n      autoClearRecentVideos: getSettingsValue('autoClearRecentVideos', SettingsType.Boolean),\n      autoClearCache: getSettingsValue('autoClearCache', SettingsType.Boolean),\n    });\n    closeSettings();\n    setSnackbarMessage('Settings saved!');\n  };\n\n  const closeSettingsSnackbar = () => {\n    setSnackbarMessage('');\n  };\n\n  const openVideo = (event: any) => {\n    event.stopPropagation();\n    const videoUrl = event.currentTarget.href;\n    if (isWebExtension() && videoUrl) {\n      event.preventDefault();\n      createTab(videoUrl, !settings.openVideosInInactiveTabs).then((tab: any) => {\n        if (settings.autoPlayVideos) {\n          executeScript(tab.id, `document.querySelector('#player video').play();`);\n        }\n      });\n    }\n  };\n\n  const handlePullToRefresh = (resolve: Function, reject: Function) => {\n    let promise: Promise<any>;\n    if (selectedChannelIndex >= 0) {\n      promise = selectChannel(channels[selectedChannelIndex], selectedChannelIndex, true);\n    } else {\n      promise = refreshChannels(selectedChannelIndex);\n    }\n    promise.then(() => {\n      resolve();\n    }).catch(() => {\n      reject();\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        color=\"secondary\"\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: openDrawer,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, openDrawer && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Youtube viewer\n          </Typography>\n          <SearchChannelInput onSelect={addChannel} onError={displayError} />\n          <div className={classes.grow} />\n          <IconButton edge=\"end\" aria-label=\"settings\" color=\"inherit\" onClick={(event) => openSettings(event)}>\n            <SettingsIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={openDrawer}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <ChannelList\n          channels={channels}\n          selectedIndex={selectedChannelIndex}\n          cacheSize={getCacheSize()}\n          todaysVideosCount={todaysVideosCount}\n          recentVideosCount={recentVideosCount}\n          onShowAll={showAllChannels}\n          onShowTodaysVideos={showTodaysVideos}\n          onShowRecentVideos={showRecentVideos}\n          onRefresh={refreshChannels}\n          onSelect={selectChannel}\n          onDelete={deleteChannel}\n          onSave={setChannels}\n          onSelectedIndexChange={setSelectedChannelIndex}\n          onClearCache={clearCache}\n          onClearRecentVideos={clearRecentVideos}\n          onImport={importChannels}\n        />\n        <div className={classes.grow} />\n        <Divider />\n        <Typography variant=\"caption\" align=\"center\" className={classes.madeWithLove}>\n          Made with <FavoriteRoundedIcon className={classes.heartIcon} /> by AXeL\n          <Link href=\"https://github.com/AXeL-dev/youtube-viewer\" target=\"_blank\" rel=\"noopener\">\n            <IconButton edge=\"end\" size=\"small\" aria-label=\"github link\">\n              <GitHubIcon fontSize=\"inherit\" />\n            </IconButton>\n          </Link>\n        </Typography>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: openDrawer,\n        })}\n        onClick={() => handleDrawerClose()}\n      >\n        <div className={classes.drawerHeader} />\n        {isReady && selectedChannelIndex !== ChannelSelection.None && (channels?.length ? (\n          <ReactPullToRefresh\n            onRefresh={handlePullToRefresh}\n            icon={<ArrowDownwardIcon className=\"arrowicon\" />}\n            distanceToRefresh={50}\n            resistance={5}\n            style={{ position: 'relative', height: isWebExtension() ? 'calc(100% - 64px)' : 'calc(100vh - 64px)', overflow: 'auto' }}\n          >\n            {videos?.length === 0 && !isLoading ? (\n              <Fade in={true} timeout={1000}>\n                <Box className={`${classes.container} expanded`}>\n                  <Typography component=\"div\" variant=\"h5\" color=\"textSecondary\" className={classes.centered} style={{ cursor: 'default' }}>\n                    <VideocamOffIcon style={{ fontSize: 38, verticalAlign: 'middle' }} /> No videos available\n                  </Typography>\n                </Box>\n              </Fade>\n            ) : selectedChannelIndex < 0 ? (\n              <MultiVideoGrid\n                channels={channels}\n                videos={videos}\n                settings={settings}\n                loading={isLoading}\n                maxPerChannel={settings.videosPerChannel}\n                onSelect={selectChannel}\n                onVideoClick={openVideo}\n                onSave={setChannels}\n                onRefresh={refreshChannels}\n              />\n            ) : (\n              <VideoGrid\n                videos={videos}\n                loading={isLoading}\n                maxPerChannel={settings.videosPerChannel}\n                onVideoClick={openVideo}\n              />\n            )}\n          </ReactPullToRefresh>\n        ) : (\n          <Fade in={true} timeout={3000}>\n            <Box className={classes.container}>\n              <Typography component=\"div\" variant=\"h5\" color=\"textSecondary\" className={classes.centered} style={{ cursor: 'default' }}>\n                <SearchIcon style={{ fontSize: 38, verticalAlign: 'middle' }} /> Start by typing a channel name in the search box\n              </Typography>\n            </Box>\n          </Fade>\n        ))}\n      </main>\n      <SettingsDialog settings={settings} open={openSettingsDialog} onClose={closeSettings} onSave={saveSettings} />\n      <CustomSnackbar open={!!snackbarMessage.length} message={snackbarMessage} onClose={closeSettingsSnackbar} onRefresh={refreshChannels} />\n      <MessageSnackbar message={lastError?.message} open={!!lastError} onClose={() => setLastError(null)} />\n    </div>\n  )\n}\n","import React from 'react';\nimport Popup from './Popup';\nimport { getFromStorage, saveToStorage } from '../helpers/storage';\nimport { Channel, ChannelSelection } from '../models/Channel';\nimport { Settings } from '../models/Settings';\nimport { isWebExtension, setBadgeText } from '../helpers/browser';\nimport { debug } from '../helpers/debug';\nimport { Video } from '../models/Video';\n\ninterface MainProps {}\n\ninterface MainState {\n  channels: Channel[];\n  settings: Settings;\n  cache: any;\n  isReady: boolean;\n}\n\nclass Main extends React.Component<MainProps, MainState> {\n  constructor(props: MainProps) {\n    super(props);\n    this.state = {\n      channels: [],\n      settings: {\n        defaultChannelSelection: ChannelSelection.All,\n        videosPerChannel: 9,\n        videosAnteriority: 30, // days\n        sortVideosBy: 'date',\n        autoVideosCheckRate: 30, // minutes\n        enableRecentVideosNotifications: true,\n        autoPlayVideos: false,\n        openVideosInInactiveTabs: false,\n        openChannelsOnNameClick: false,\n        hideEmptyChannels: false,\n        autoClearRecentVideos: true,\n        autoClearCache: false\n      },\n      cache: {},\n      isReady: false\n    };\n    this.updateState();\n    if (isWebExtension()) {\n      setBadgeText(''); // reset webextension badge\n    }\n  }\n\n  async updateState() {\n    // get data from storage\n    let [channels, settings, cache] = await getFromStorage('channels', 'settings', 'cache');\n    debug('Storage data:', {channels: channels, settings: settings, cache: cache});\n    // set/merge settings\n    settings = settings ? {...this.state.settings, ...settings} : this.state.settings;\n    // clear recent videos\n    if (settings?.autoClearRecentVideos && cache) {\n      let cacheHasChanged: boolean = false;\n      Object.keys(cache).forEach((channelId: string) => {\n        cache[channelId] = cache[channelId].map((video: Video) => {\n          if (video.isRecent) {\n            video.isRecent = false;\n            cacheHasChanged = true;\n          }\n          return video;\n        });\n      });\n      // update cache\n      if (cacheHasChanged) {\n        saveToStorage({ cache: cache });\n      }\n    }\n    // update state\n    this.setState({\n      channels: channels?.length ? channels : [],\n      settings: settings,\n      cache: !settings?.autoClearCache && cache ? cache : {},\n      isReady: true\n    });\n  }\n\n  render() {\n    return (\n      <Popup channels={this.state.channels} settings={this.state.settings} cache={this.state.cache} isReady={this.state.isReady} />\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport Background from './components/Background';\nimport Main from './components/Main';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route path=\"/background\" component={Background} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}